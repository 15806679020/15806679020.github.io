<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>陌生的小窝</title>
  
  <subtitle>学无止境</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.ldclass.club/"/>
  <updated>2021-08-19T03:39:48.131Z</updated>
  <id>http://www.ldclass.club/</id>
  
  <author>
    <name>Dong Liu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>阿里云OSS</title>
    <link href="http://www.ldclass.club/2021/08/19/a-li-yun-oss/"/>
    <id>http://www.ldclass.club/2021/08/19/a-li-yun-oss/</id>
    <published>2021-08-18T22:53:35.000Z</published>
    <updated>2021-08-19T03:39:48.131Z</updated>
    
    <content type="html"><![CDATA[<ul><li><h4 id="阿里云OSS介绍"><a href="#阿里云OSS介绍" class="headerlink" title="阿里云OSS介绍"></a>阿里云OSS介绍</h4></li></ul><pre><code>对象存储OSS（Object Storage Service）是阿里云提供的海量、安全、低成本、高持久的云存储服务。其数据设计持久性不低于99.9999999999%（12个9），服务设计可用性不低于99.995%。OSS具有与平台无关的RESTful API接口，您可以在任何应用、任何时间、任何地点存储和访问任意类型的数据。提供标准、低频访问、归档和冷归档四种存储类型，全面覆盖从热到冷的各种数据存储场景：</code></pre><table><thead><tr><th>标准存储类型</th><th>高持久、高可用、高性能的对象存储服务，支持频繁的数据访问。是各种社交、分享类的图片、音视频应用、大型网站、大数据分析的合适选择。</th></tr></thead><tbody><tr><td>低频访问存储类型</td><td>适合长期保存不经常访问的数据（平均每月访问频率1到2次）。存储单价低于标准类型，适合各类移动应用、智能设备、企业数据的长期备份，支持实时数据访问。</td></tr><tr><td>归档存储类型</td><td>适合需要长期保存（建议半年以上）的归档数据，在存储周期内极少被访问，数据进入到可读取状态需要1分钟的解冻时间。适合需要长期保存的档案数据、医疗影像、科学资料、影视素材。</td></tr><tr><td>冷归档存储类型</td><td>适合需要超长时间存放的极冷数据。例如因合规要求需要长期留存的数据、大数据及人工智能领域长期积累的原始数据、影视行业长期留存的媒体资源、在线教育行业的归档视频等。</td></tr></tbody></table><ul><li><h4 id="开通阿里云OSS"><a href="#开通阿里云OSS" class="headerlink" title="开通阿里云OSS"></a>开通阿里云OSS</h4><ul><li><p>有阿里云账号、实名认证</p><ul><li><p>OSS介绍：<a href="https://www.aliyun.com/product/oss" target="_blank" rel="noopener">https://www.aliyun.com/product/oss</a></p></li><li><p>OSS控制台：<a href="https://oss.console.aliyun.com/bucket" target="_blank" rel="noopener">https://oss.console.aliyun.com/bucket</a></p></li><li><p>学习路径：<a href="https://help.aliyun.com/learn/learningpath/oss.html" target="_blank" rel="noopener">https://help.aliyun.com/learn/learningpath/oss.html</a></p></li></ul></li><li><p>开通后的操作</p><ul><li>创建Bucket</li><li>上传文件</li><li>访问文件</li></ul></li></ul></li></ul><ul><li><h4 id="阿里云权限管理RAM介绍"><a href="#阿里云权限管理RAM介绍" class="headerlink" title="阿里云权限管理RAM介绍"></a>阿里云权限管理RAM介绍</h4><ul><li><p>RAM权限介绍</p><ul><li>阿里云用于各个产品的权限，基于RBAC模型，进行简单管理账号、统一分配权限、集中管控资源，从而建立安全、完善的资源控制体系。</li><li>众多产品，一般采用子账号进行分配权限，防止越权攻击</li><li>建立用户，勾选编程访问（保存accessKey和accessSecret，只出现一次）</li></ul></li><li><p>云账号 AccessKey</p><ul><li>访问阿里云 API 的密钥，具有该账户完全的权限</li></ul></li></ul></li><li><h5 id="阿里云OSS客户端SDK集成"><a href="#阿里云OSS客户端SDK集成" class="headerlink" title="阿里云OSS客户端SDK集成"></a>阿里云OSS客户端SDK集成</h5><ul><li><p>添加阿里云OSS的SDK    </p><ul><li><p>地址：<code>https://help.aliyun.com/document_detail/32008.html</code></p></li><li><p>添加maven依赖</p><ul><li>底层聚合工程添加版本</li></ul><pre class="line-numbers language-xml"><code class="language-xml"> <span class="token comment" spellcheck="true">&lt;!-- OSS各个项目单独加依赖，根据需要进行添加--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.aliyun.oss<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>aliyun-sdk-oss<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.10.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>用户微服务添加</li></ul><pre class="line-numbers language-xml"><code class="language-xml"> <span class="token comment" spellcheck="true">&lt;!-- OSS各个项目单独加依赖，根据需要进行添加--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.aliyun.oss<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>aliyun-sdk-oss<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>用户微服务配置OSS</p><pre class="line-numbers language-yml"><code class="language-yml">#阿里云OSS配置aliyun:  oss:    endpoint: xxxx    access-key-id: xxxx    access-key-secret: xxx    bucketname: xxxx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>新建配置类 (配置里面的横杠会，自动转驼峰)</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>config<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>Data<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>context<span class="token punctuation">.</span>properties<span class="token punctuation">.</span>ConfigurationProperties<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Configuration<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author LiuDong * @version 1.0 * @description * @date 2021年08月18日 23:34 */</span><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@Configuration</span><span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span>prefix <span class="token operator">=</span> <span class="token string">"aliyun.oss"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OSSConfig</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 地域节点     */</span>    <span class="token keyword">private</span> String endpoint<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 配置文件中的属性会自动转化为驼峰     *     */</span>    <span class="token keyword">private</span> String accessKeyId<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     *     */</span>    <span class="token keyword">private</span> String accessKeySecret<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     *  bucket名称     */</span>    <span class="token keyword">private</span> String bucketname<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul></li><li><h4 id="用户微服务上传用户头像到oss-服务层开发"><a href="#用户微服务上传用户头像到oss-服务层开发" class="headerlink" title="用户微服务上传用户头像到oss-服务层开发"></a>用户微服务上传用户头像到oss-服务层开发</h4><ul><li><h5 id="service"><a href="#service" class="headerlink" title="service"></a>service</h5></li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>service<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>multipart<span class="token punctuation">.</span>MultipartFile<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author LiuDong * @version 1.0 * @description * @date 2021年08月18日 23:38 */</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">FileService</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 上传头像，返回url     * @author LiuDong     * @date 2021/8/18 23:39     * @param file     * @return java.lang.String     */</span>    String <span class="token function">uploadUserImg</span><span class="token punctuation">(</span>MultipartFile file<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><h5 id="impl"><a href="#impl" class="headerlink" title="impl"></a>impl</h5></li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>config<span class="token punctuation">.</span>OSSConfig<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>service<span class="token punctuation">.</span>FileService<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>CommonUtil<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>aliyun<span class="token punctuation">.</span>oss<span class="token punctuation">.</span>OSS<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>aliyun<span class="token punctuation">.</span>oss<span class="token punctuation">.</span>OSSClientBuilder<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>aliyun<span class="token punctuation">.</span>oss<span class="token punctuation">.</span>model<span class="token punctuation">.</span>PutObjectResult<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>Slf4j<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Service<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>multipart<span class="token punctuation">.</span>MultipartFile<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>time<span class="token punctuation">.</span>LocalDateTime<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>time<span class="token punctuation">.</span>format<span class="token punctuation">.</span>DateTimeFormatter<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author LiuDong * @version 1.0 * @description * @date 2021年08月18日 23:39 */</span><span class="token annotation punctuation">@Service</span><span class="token annotation punctuation">@Slf4j</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FileServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">FileService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> OSSConfig ossConfig<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 上传图片，返回url     *     * @param file     * @return java.lang.String     * @author LiuDong     * @date 2021/8/18 23:39     */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">uploadUserImg</span><span class="token punctuation">(</span>MultipartFile file<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//获取相关配置</span>        String bucketname <span class="token operator">=</span> ossConfig<span class="token punctuation">.</span><span class="token function">getBucketname</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String endpoint <span class="token operator">=</span> ossConfig<span class="token punctuation">.</span><span class="token function">getEndpoint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String accessKeyId <span class="token operator">=</span> ossConfig<span class="token punctuation">.</span><span class="token function">getAccessKeyId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String accessKeySecret <span class="token operator">=</span> ossConfig<span class="token punctuation">.</span><span class="token function">getAccessKeySecret</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//创建OSS对象</span>        OSS ossClient <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OSSClientBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>endpoint<span class="token punctuation">,</span> accessKeyId<span class="token punctuation">,</span> accessKeySecret<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//获取原始文件名 xxx.jpg</span>        String originalFileName <span class="token operator">=</span> file<span class="token punctuation">.</span><span class="token function">getOriginalFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//获取当前时间</span>        LocalDateTime ldt <span class="token operator">=</span> LocalDateTime<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        DateTimeFormatter dtf <span class="token operator">=</span> DateTimeFormatter<span class="token punctuation">.</span><span class="token function">ofPattern</span><span class="token punctuation">(</span><span class="token string">"yyyy/MM/dd"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//拼装路径，oss上存储的路径 user/2021/08/18/xxx.jpg</span>        <span class="token comment" spellcheck="true">//获取文件夹名称</span>        String folder <span class="token operator">=</span> dtf<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>ldt<span class="token punctuation">)</span><span class="token punctuation">;</span>        String fileName <span class="token operator">=</span> CommonUtil<span class="token punctuation">.</span><span class="token function">generateUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String extension <span class="token operator">=</span> originalFileName<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>originalFileName<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//拼装路径</span>        String newFileName <span class="token operator">=</span> <span class="token string">"user/"</span> <span class="token operator">+</span> folder <span class="token operator">+</span> <span class="token string">"/"</span> <span class="token operator">+</span> fileName <span class="token operator">+</span> extension<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//推送上传</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            PutObjectResult result <span class="token operator">=</span> ossClient<span class="token punctuation">.</span><span class="token function">putObject</span><span class="token punctuation">(</span>bucketname<span class="token punctuation">,</span> newFileName<span class="token punctuation">,</span> file<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//拼装返回url</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                String imgUrl <span class="token operator">=</span> <span class="token string">"https://"</span> <span class="token operator">+</span> bucketname <span class="token operator">+</span> <span class="token string">"."</span> <span class="token operator">+</span> endpoint <span class="token operator">+</span> <span class="token string">"/"</span> <span class="token operator">+</span> newFileName<span class="token punctuation">;</span>                <span class="token keyword">return</span> imgUrl<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"文件上传失败：{}"</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//oss关闭，以防内存泄露</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>ossClient <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                ossClient<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> null<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><h4 id="用户微服务头像上传阿里云OSS接口和SwaggerUI提效"><a href="#用户微服务头像上传阿里云OSS接口和SwaggerUI提效" class="headerlink" title="用户微服务头像上传阿里云OSS接口和SwaggerUI提效"></a>用户微服务头像上传阿里云OSS接口和SwaggerUI提效</h4><ul><li><p>文件上传流程</p><ul><li>先上传文件，返回url地址，再和普通表单一并提交（推荐这种,更加灵活，失败率低）</li><li>文件和普通表单一并提交（设计流程比较多，容易超时和失败）</li></ul></li><li><p>注意：默认SpringBoot最大文件上传是1M,大家测试的时候记得关注下</p></li><li><p>开发controller</p><ul><li>@requestPart注解 接收文件以及其他更为复杂的数据类型</li><li>比如 XXX(@RequestPart(“file”) MultipartFile file,  @RequestPart(“userVO”) UserVO userVO) 复杂协议</li></ul></li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>controller<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul><p>  import club.ldclass.enums.BizCodeEnum;<br>  import club.ldclass.service.FileService;<br>  import club.ldclass.utils.JsonData;<br>  import io.swagger.annotations.Api;<br>  import io.swagger.annotations.ApiOperation;<br>  import io.swagger.annotations.ApiParam;<br>  import org.springframework.beans.factory.annotation.Autowired;<br>  import org.springframework.web.bind.annotation.PostMapping;<br>  import org.springframework.web.bind.annotation.RequestMapping;</p><p>  import org.springframework.web.bind.annotation.RequestPart;<br>  import org.springframework.web.bind.annotation.RestController;<br>  import org.springframework.web.multipart.MultipartFile;<br>  import springfox.documentation.spring.web.json.Json;</p><p>  /**</p><ul><li><p></p></li><li><p>前端控制器</p></li><li><p></p></li><li></li><li><p>@author LiuDong</p></li><li><p>@since 2021-08-13</p></li><li><p>/<br>@Api(tags = “用户模块”)<br>@RestController<br>@RequestMapping(“/api/user/v1”)<br>public class UserController {</p><p>  @Autowired<br>  private FileService fileService;</p><p>  /**</p><ul><li><p>上传用户头像</p></li><li><p></p></li><li><p>SpringBoot默认上传1M，超过则报错</p></li><li></li><li><p>@param file</p></li><li><p>@return club.ldclass.utils.JsonData</p></li><li><p>@author LiuDong</p></li><li><p>@date 2021/8/19 0:03</p></li><li><p>/<br>@ApiOperation(value = “用户头像上传”)<br>@PostMapping(value = “upload”)<br>public JsonData uploadUserImg(</p><pre><code>  @ApiParam(value = "文件上传", required = true)  @RequestPart("file") MultipartFile file) {</code></pre><p>  String result = fileService.uploadUserImg(file);<br>  return result != null ? JsonData.buildSuccess(result) : JsonData.buildResult(BizCodeEnum.FILE_UPLOAD_USER_IMG_FAIL);<br>}<br>}</p><pre><code></code></pre></li></ul><ul><li>SwaggerUI接口测试</li></ul><ul><li>ui界面可以直接测试文件上传</li></ul><ul><li>Postman测试</li><li><img src="/2021/08/19/a-li-yun-oss/1.png" title="测试图片上传"></li></ul></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;阿里云OSS介绍&quot;&gt;&lt;a href=&quot;#阿里云OSS介绍&quot; class=&quot;headerlink&quot; title=&quot;阿里云OSS介绍&quot;&gt;&lt;/a&gt;阿里云OSS介绍&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;对象存储OSS（Object St
      
    
    </summary>
    
      <category term="1024" scheme="http://www.ldclass.club/categories/1024/"/>
    
    
      <category term="1024" scheme="http://www.ldclass.club/tags/1024/"/>
    
      <category term="OSS" scheme="http://www.ldclass.club/tags/OSS/"/>
    
  </entry>
  
  <entry>
    <title>分布式文件存储</title>
    <link href="http://www.ldclass.club/2021/08/19/fen-bu-shi-wen-jian-cun-chu/"/>
    <id>http://www.ldclass.club/2021/08/19/fen-bu-shi-wen-jian-cun-chu/</id>
    <published>2021-08-18T22:51:50.000Z</published>
    <updated>2021-08-19T02:16:11.515Z</updated>
    
    <content type="html"><![CDATA[<ul><li><h4 id="分布式文件系统（Distributed-File-System"><a href="#分布式文件系统（Distributed-File-System" class="headerlink" title="分布式文件系统（Distributed File System)"></a>分布式文件系统（Distributed File System)</h4><ul><li><p>海量数据对存储提出了新的要求，从而诞生了分布式文件存储</p></li><li><p>是文件系统管理的物理存储资源不一定直接连接在本地节点上，而是通过计算机网络与节点（可简单的理解为一台计算机) 相连，或是若干不同的逻辑磁盘分区组合在一起而形成的完整的有层次的文件系统</p></li><li><p>自研：扩容容易-开发难</p></li></ul></li><li><h4 id="面试题：做分布式文件存储，主要是想实现文件存储访问的高性能与高可用，如何保证分布式存储的高性能与高可用？"><a href="#面试题：做分布式文件存储，主要是想实现文件存储访问的高性能与高可用，如何保证分布式存储的高性能与高可用？" class="headerlink" title="面试题：做分布式文件存储，主要是想实现文件存储访问的高性能与高可用，如何保证分布式存储的高性能与高可用？"></a>面试题：做分布式文件存储，主要是想实现文件存储访问的高性能与高可用，如何保证分布式存储的高性能与高可用？</h4><ul><li><p>副本备份、双活、多活</p></li><li><p>在系统中通过复制协议将数据同步到多个存储节点，并确保多个副本之间的数据一致性，当某个存储节点出故障时，系统能够自动将服务切换到其他的副本</p></li><li><p>在分布式存储中高性能与高可用是矛盾的，比如要设计一个分布式存储系统，CAP定理也可以推断出来</p><ul><li>对性能的考虑，记录数据时先写一个份数据到某个机器上并立即返回，然后异步发起多个数据备份过程。这种设计的性能最好，但存在“容错性”的风险，加入返回后，还没来得及同步给其它节点就宕机了，则数据就丢失（异步复制，也存在是写主节点到内存还是落到磁盘）</li><li>如果同时写多个副本，每个副本写成功以后再返回，则又导致性能下降，这个过程取决于最慢的那台机器的性能 (同步多写，是同步每个副本节点还是一个副本先)</li></ul></li></ul></li></ul><pre><code>  * 那应该如何选择呢？    * 根据业务而定，如果要求性能更高，偶尔出现文件丢失或访问出错则可以异步复制  * 要求文件系统一定要高可用，则用同步多写的策略，牺牲一定的性能也要保证高可用数据一致性* 基于上述的，大家还知道有一个很类似的消息队列就是支持这种操作  * RocketMQ消息高可用里面的    * 同步双写、异步刷盘，即同时写到两个节点上的内存才返回，然后异步持久化到磁盘里面</code></pre><ul><li><h4 id="分布式文件存储常见解决方案"><a href="#分布式文件存储常见解决方案" class="headerlink" title="分布式文件存储常见解决方案"></a>分布式文件存储常见解决方案</h4><ul><li>MinIO</li></ul><pre><code>是在 Apache License v2.0 下发布的对象存储服务器,学习成本低，安装运维简单，主流语言的客户端整合都有, 号称最强的对象存储文件服务器，且可以和容器化技术docker/k8s等结合，社区活跃但不够成熟，业界参考资料较少官网：https://docs.min.io/cn/</code></pre><ul><li>FastDFS</li></ul><pre><code>一个开源的轻量级分布式文件系统,比较少的客户端可以整合，目前主要是C和java客户端，在一些互联网创业公司中有应用比较多，没有官方文档,社区不怎么活跃.架构+部署结构复杂，出问题定位比较难定位，可以说是fastdfs零件的组装过程，需要去理解fastDFS的架构设计，才能够正确的安装部署</code></pre><ul><li><p>云厂商</p><ul><li><p>阿里云OSS</p></li><li><p>七牛云</p></li><li><p>腾讯云</p></li><li><p>亚马逊云</p></li></ul></li></ul></li></ul><pre><code>* CDN最强：Akamai `https://www.akamai.com/cn`</code></pre><ul><li><p>选云厂商理由</p><ul><li>优点：开发简单，功能强大，容易维护（不同网络下图片质量、水印、加密策略、扩容、加速）</li><li>缺点：要钱, 个性化处理，未来转移比较复杂，不排除有些厂商会提供一键迁移工具</li></ul></li><li><p>选开源MinIO的理由</p><ul><li>优点：功能强大、可以根据业务做二次的定制，新一代分布式文件存储系统，容器化结合强大，更重要的是免费（购买磁盘、内存、带宽）</li><li>缺点：自己需要有专门的团队进行维护、扩容等</li></ul></li></ul><ul><li><h4 id="自建分布式文件存储MinIO容器化部署"><a href="#自建分布式文件存储MinIO容器化部署" class="headerlink" title="自建分布式文件存储MinIO容器化部署"></a>自建分布式文件存储MinIO容器化部署</h4><pre class="line-numbers language-dockerfile"><code class="language-dockerfile">docker run -p 9000:9000 \  --name minio_xdclass \  -v /Users/xdclass/Desktop/test:/data \  -e "MINIO_ROOT_USER=AKIAIOSFODNN7EXAMPLE" \  -e "MINIO_ROOT_PASSWORD=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY" \  minio/minio server /data<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>步骤<ul><li>访问控制台</li><li>创建bucket</li><li>上传文件</li><li>预览</li></ul></li><li>总体操作很流畅，支持单机和集群部署，多个方面都是目前比较强的，对于有需求不能或不使用云厂商提供的存储服务，例如阿里云的oss、七牛云的对象存储等，可以通过自建minio对象存储集群的方式</li></ul></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;分布式文件系统（Distributed-File-System&quot;&gt;&lt;a href=&quot;#分布式文件系统（Distributed-File-System&quot; class=&quot;headerlink&quot; title=&quot;分布式文件系统（Distributed F
      
    
    </summary>
    
      <category term="1024" scheme="http://www.ldclass.club/categories/1024/"/>
    
    
      <category term="1024" scheme="http://www.ldclass.club/tags/1024/"/>
    
      <category term="分布式文件存储" scheme="http://www.ldclass.club/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8/"/>
    
  </entry>
  
  <entry>
    <title>springboot整合邮箱starter</title>
    <link href="http://www.ldclass.club/2021/08/17/springboot-zheng-he-you-xiang-starter/"/>
    <id>http://www.ldclass.club/2021/08/17/springboot-zheng-he-you-xiang-starter/</id>
    <published>2021-08-16T20:43:13.000Z</published>
    <updated>2021-08-16T14:38:05.061Z</updated>
    
    <content type="html"><![CDATA[<ul><li>邮件传输协议<ul><li>SMTP协议：全称为 Simple Mail Transfer Protocol，简单邮件传输协议。它定义了邮件客户端软件和SMTP邮件服务器之间，以及两台SMTP邮件服务器之间的通信规则</li><li>POP3协议：全称为 Post Office Protocol，邮局协议。它定义了邮件客户端软件和POP3邮件服务器的通信 规则</li><li>IMAP协议：全称为 Internet Message Access Protocol,Internet消息访问协议，它是对POP3协议一种扩展，也是定义了邮件客户端软件和IMAP邮件服务器的通信规则</li></ul></li></ul><h4 id="一、开启邮箱服务，并添加配置"><a href="#一、开启邮箱服务，并添加配置" class="headerlink" title="一、开启邮箱服务，并添加配置"></a>一、开启邮箱服务，并添加配置</h4><ul><li><p>邮箱开启服务</p><ul><li>设置&gt;&gt;&gt;开启服务&gt;&gt;&gt;获取授权码</li></ul></li><li><p>配置依赖</p><pre class="line-numbers language-xml"><code class="language-xml">        <span class="token comment" spellcheck="true">&lt;!--发送邮件--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-mail<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>配置文件</p><pre class="line-numbers language-yml"><code class="language-yml">spring:  application:    name: xdclass-user-service  #邮箱服务配置  mail:    #发送邮件服务器    host: smtp.163.com    #发送邮件的邮箱地址    username: xxxx@163.com    #客户端授权码，不是邮箱密码    password: xxxxxxxxxx    # 发送邮件的地址，和上面username一致    from: xxxxx@163.com    properties.mail.smtp.starttls.enable: true    properties.mail.smtp.starttls.required: true    #开启SSL 安全传输协议 防止部署到云之后发送邮件不成功    properties.mail.smtp.ssl.enable: true    default-encoding: utf-8<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>封装邮件发送组件 MailService，放到component包下</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>component<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Component<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author LiuDong * @version 1.0 * @description * @date 2021年08月16日 20:53 */</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">MailService</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 发送邮件     * @author LiuDong     * @date 2021/8/16 20:54     * @param to     * @param subject     * @param content     */</span>    <span class="token keyword">void</span> <span class="token function">sendMail</span><span class="token punctuation">(</span>String to<span class="token punctuation">,</span>String subject<span class="token punctuation">,</span>String content<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>component<span class="token punctuation">.</span>impl<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>component<span class="token punctuation">.</span>MailService<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>Slf4j<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Value<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>mail<span class="token punctuation">.</span>SimpleMailMessage<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>mail<span class="token punctuation">.</span>javamail<span class="token punctuation">.</span>JavaMailSender<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Component<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Service<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author LiuDong * @version 1.0 * @description * @date 2021年08月16日 20:54 */</span><span class="token annotation punctuation">@Service</span><span class="token annotation punctuation">@Slf4j</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MailServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">MailService</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * SpringBoot 提供的发送邮件的简单抽象，直接注入     */</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> JavaMailSender mailSender<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 读取配置文件     */</span>    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"${spring.mail.from}"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String from<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 发送邮件     * @author LiuDong     * @date 2021/8/16 20:59     * @param to 收件人     * @param subject 主题     * @param content 内容     */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sendMail</span><span class="token punctuation">(</span>String to<span class="token punctuation">,</span> String subject<span class="token punctuation">,</span> String content<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//创建一个邮箱消息对象,用于封装消息</span>        SimpleMailMessage message <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleMailMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//配置邮箱的发送人</span>        message<span class="token punctuation">.</span><span class="token function">setFrom</span><span class="token punctuation">(</span>from<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//收件人</span>        message<span class="token punctuation">.</span><span class="token function">setTo</span><span class="token punctuation">(</span>to<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//邮件的主题</span>        message<span class="token punctuation">.</span><span class="token function">setSubject</span><span class="token punctuation">(</span>subject<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//邮件的内容</span>        message<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//发送</span>        mailSender<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"邮件发送成功：{}"</span><span class="token punctuation">,</span>message<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="二、注册邮箱验证码接口开发"><a href="#二、注册邮箱验证码接口开发" class="headerlink" title="二、注册邮箱验证码接口开发"></a>二、注册邮箱验证码接口开发</h4><ul><li><p>邮箱工具类正则</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>utils<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>regex<span class="token punctuation">.</span>Matcher<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>regex<span class="token punctuation">.</span>Pattern<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author LiuDong * @version 1.0 * @description * @date 2021年08月16日 21:28 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CheckUtil</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 邮箱正则     */</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> Pattern MAIL_PATTERN <span class="token operator">=</span> Pattern<span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token string">"^([a-z0-9A-Z]+[-|\\.]?)+[a-z0-9A-Z]@([a-z0-9A-Z]+(-[a-z0-9A-Z]+)?\\.)+[a-zA-Z]{2,}$"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 手机号正则，暂时未用     */</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> Pattern PHONE_PATTERN <span class="token operator">=</span> Pattern<span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token string">"^((13[0-9])|(15[^4,\\D])|(18[0,5-9]))\\d{8}$"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * @param email     * @return     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">isEmail</span><span class="token punctuation">(</span>String email<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>null <span class="token operator">==</span> email <span class="token operator">||</span> <span class="token string">""</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>email<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        Matcher m <span class="token operator">=</span> MAIL_PATTERN<span class="token punctuation">.</span><span class="token function">matcher</span><span class="token punctuation">(</span>email<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> m<span class="token punctuation">.</span><span class="token function">matches</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 暂时未用     *     * @param phone     * @return     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">isPhone</span><span class="token punctuation">(</span>String phone<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>null <span class="token operator">==</span> phone <span class="token operator">||</span> <span class="token string">""</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>phone<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        Matcher m <span class="token operator">=</span> PHONE_PATTERN<span class="token punctuation">.</span><span class="token function">matcher</span><span class="token punctuation">(</span>phone<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> m<span class="token punctuation">.</span><span class="token function">matches</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>邮箱验证码防刷</p><ul><li><p>需求：一定时间内禁止重复发送邮件</p><ul><li><p>方式一：前端增加校验倒计时，不到60秒按钮不给点击</p><ul><li>简单</li><li>不安全，存在绕过的情况</li></ul></li><li><p>方式二：增加Redis存储，发送的时候设置下额外的key，并且60秒后过期</p><ul><li>非原子操作，存在不一致性</li><li>增加的额外的key - value存储，浪费空间</li></ul><pre class="line-numbers language-java"><code class="language-java">     <span class="token operator">*</span> 前置<span class="token operator">>></span>判断是否重复发送     <span class="token operator">*</span> <span class="token operator">>>></span><span class="token operator">>></span>存储验证码到缓存     <span class="token operator">*</span> <span class="token operator">>>></span><span class="token operator">>></span>发送验证码到邮箱     <span class="token operator">*</span> 后置<span class="token operator">>></span>存储发送记录<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>方式三：基于原先的key拼装时间戳</p><ul><li>好处：满足了当前节点内的原子性，也满足业务需求</li></ul></li></ul></li></ul></li><li><p>开发接口</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>controller<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>enums<span class="token punctuation">.</span>BizCodeEnum<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>enums<span class="token punctuation">.</span>SendCodeEnum<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>service<span class="token punctuation">.</span>NotifyService<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>CommonUtil<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>JsonData<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>code<span class="token punctuation">.</span>kaptcha<span class="token punctuation">.</span>Producer<span class="token punctuation">;</span><span class="token keyword">import</span> io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span>Api<span class="token punctuation">;</span><span class="token keyword">import</span> io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span>ApiOperation<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>Slf4j<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>core<span class="token punctuation">.</span>StringRedisTemplate<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> springfox<span class="token punctuation">.</span>documentation<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>web<span class="token punctuation">.</span>json<span class="token punctuation">.</span>Json<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>imageio<span class="token punctuation">.</span>ImageIO<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletOutputStream<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>image<span class="token punctuation">.</span>BufferedImage<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>TimeUnit<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author LiuDong * @version 1.0 * @description 通知 * @date 2021年08月15日 22:10 */</span><span class="token annotation punctuation">@Api</span><span class="token punctuation">(</span>tags <span class="token operator">=</span> <span class="token string">"通知模块"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"api/notify/v1"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Slf4j</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NotifyController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> Producer captchaProducer<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> StringRedisTemplate redisTemplate<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> NotifyService notifyService<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 图形验证码有效期     */</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> CAPTCHA_CODE_EXPIRED <span class="token operator">=</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">30</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 获取图形验证码     * 输出图片流     *     * @param request     * @param response     * @author LiuDong     * @date 2021/8/15 22:14     */</span>    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span><span class="token string">"获取图形验证码"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"captcha"</span><span class="token punctuation">,</span> method <span class="token operator">=</span> RequestMethod<span class="token punctuation">.</span>GET<span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getCaptcha</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token punctuation">{</span>        String cacheKey <span class="token operator">=</span> <span class="token function">getCaptchaKey</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>        String capText <span class="token operator">=</span> captchaProducer<span class="token punctuation">.</span><span class="token function">createText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//存储</span>        redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>cacheKey<span class="token punctuation">,</span> capText<span class="token punctuation">,</span> CAPTCHA_CODE_EXPIRED<span class="token punctuation">,</span> TimeUnit<span class="token punctuation">.</span>MILLISECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span>        BufferedImage bufferedImage <span class="token operator">=</span> captchaProducer<span class="token punctuation">.</span><span class="token function">createImage</span><span class="token punctuation">(</span>capText<span class="token punctuation">)</span><span class="token punctuation">;</span>        ServletOutputStream outputStream <span class="token operator">=</span> null<span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            response<span class="token punctuation">.</span><span class="token function">setDateHeader</span><span class="token punctuation">(</span><span class="token string">"Expires"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Cache-Control"</span><span class="token punctuation">,</span> <span class="token string">"no-store, no-cache, must-revalidate"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            response<span class="token punctuation">.</span><span class="token function">addHeader</span><span class="token punctuation">(</span><span class="token string">"Cache-Control"</span><span class="token punctuation">,</span> <span class="token string">"create_date-check=0, pre-check=0"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Pragma"</span><span class="token punctuation">,</span> <span class="token string">"no-cache"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            outputStream <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            ImageIO<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>bufferedImage<span class="token punctuation">,</span> <span class="token string">"jpg"</span><span class="token punctuation">,</span> outputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>            outputStream<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            outputStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"获取验证码失败:{}"</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 发送验证码     * 1、匹配图形验证码是否正常     * 2、发送验证码     *     * @param to     * @param captcha     * @return club.ldclass.utils.JsonData     * @author LiuDong     * @date 2021/8/16 21:18     */</span>    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span><span class="token string">"发送邮箱注册验证码"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"send_code"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> JsonData <span class="token function">sendRegisterCode</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"to"</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span> String to<span class="token punctuation">,</span>                                     <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"captcha"</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span> String captcha<span class="token punctuation">,</span>                                     HttpServletRequest request<span class="token punctuation">)</span> <span class="token punctuation">{</span>        String key <span class="token operator">=</span> <span class="token function">getCaptchaKey</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>        String cacheCaptcha <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//匹配图形验证码是否一致</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>captcha <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> cacheCaptcha <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> captcha<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>cacheCaptcha<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//成功,配置了过期时间，以防止高并发下删除不成功</span>            redisTemplate<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>            JsonData jsonData <span class="token operator">=</span> notifyService<span class="token punctuation">.</span><span class="token function">sendCode</span><span class="token punctuation">(</span>SendCodeEnum<span class="token punctuation">.</span>USER_REGISTER<span class="token punctuation">,</span> to<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> jsonData<span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> JsonData<span class="token punctuation">.</span><span class="token function">buildResult</span><span class="token punctuation">(</span>BizCodeEnum<span class="token punctuation">.</span>CODE_CAPTCHA_ERROR<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 获取缓存key     *     * @param request     * @return java.lang.String     * @author LiuDong     * @date 2021/8/15 23:03     */</span>    <span class="token keyword">private</span> String <span class="token function">getCaptchaKey</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">)</span> <span class="token punctuation">{</span>        String ip <span class="token operator">=</span> CommonUtil<span class="token punctuation">.</span><span class="token function">getIpAddr</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>        String userAgent <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token string">"user-Agent"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String key <span class="token operator">=</span> <span class="token string">"user-service:captcha:"</span> <span class="token operator">+</span> CommonUtil<span class="token punctuation">.</span><span class="token function">MD5</span><span class="token punctuation">(</span>ip <span class="token operator">+</span> userAgent<span class="token punctuation">)</span><span class="token punctuation">;</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"ip:{}"</span><span class="token punctuation">,</span> ip<span class="token punctuation">)</span><span class="token punctuation">;</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"userAgent:{}"</span><span class="token punctuation">,</span> userAgent<span class="token punctuation">)</span><span class="token punctuation">;</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"key:{}"</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> key<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>service<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>enums<span class="token punctuation">.</span>SendCodeEnum<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>JsonData<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author LiuDong * @version 1.0 * @description * @date 2021年08月16日 21:22 */</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">NotifyService</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 发送验证码     * @author LiuDong     * @date 2021/8/16 21:25     * @param sendCodeEnum     * @param to     * @return club.ldclass.utils.JsonData     */</span>    JsonData <span class="token function">sendCode</span><span class="token punctuation">(</span>SendCodeEnum sendCodeEnum<span class="token punctuation">,</span>String to<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>constant<span class="token punctuation">.</span>CacheKey<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>enums<span class="token punctuation">.</span>BizCodeEnum<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>enums<span class="token punctuation">.</span>SendCodeEnum<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>component<span class="token punctuation">.</span>MailService<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>service<span class="token punctuation">.</span>NotifyService<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>CheckUtil<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>CommonUtil<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>JsonData<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>Slf4j<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>lang3<span class="token punctuation">.</span>StringUtils<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>core<span class="token punctuation">.</span>RedisTemplate<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>core<span class="token punctuation">.</span>StringRedisTemplate<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Service<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>TimeUnit<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author LiuDong * @version 1.0 * @description * @date 2021年08月16日 21:26 */</span><span class="token annotation punctuation">@Service</span><span class="token annotation punctuation">@Slf4j</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NotifyServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">NotifyService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> MailService mailService<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 标题     */</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> String SUBJECT <span class="token operator">=</span> <span class="token string">"验证码"</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 内容     */</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> String CONTENT <span class="token operator">=</span> <span class="token string">"您的验证码是%s，有效时间是60秒"</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 验证码10分钟有效     */</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> CODE_EXPIRED <span class="token operator">=</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> StringRedisTemplate redisTemplate<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 前置>>判断是否重复发送     * >>>>>存储验证码到缓存     * >>>>>发送验证码到邮箱     * 后置>>存储发送记录     *     * @param sendCodeEnum     * @param to     * @return club.ldclass.utils.JsonData     * @author LiuDong     * @date 2021/8/16 21:52     */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> JsonData <span class="token function">sendCode</span><span class="token punctuation">(</span>SendCodeEnum sendCodeEnum<span class="token punctuation">,</span> String to<span class="token punctuation">)</span> <span class="token punctuation">{</span>        String cacheKey <span class="token operator">=</span> String<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>CacheKey<span class="token punctuation">.</span>CHECK_CODE_KEY<span class="token punctuation">,</span> sendCodeEnum<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> to<span class="token punctuation">)</span><span class="token punctuation">;</span>        String cacheValue <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>cacheKey<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//如果不为空，则判断是否60秒内重复发送</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNoneBlank</span><span class="token punctuation">(</span>cacheValue<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">long</span> ttl <span class="token operator">=</span> Long<span class="token punctuation">.</span><span class="token function">parseLong</span><span class="token punctuation">(</span>cacheValue<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"_"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//当前时间戳-验证码发送时间戳，如果小于60秒，则不能重复发送</span>            <span class="token keyword">long</span> diff <span class="token operator">=</span> CommonUtil<span class="token punctuation">.</span><span class="token function">getCurrentTimestamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> ttl<span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>diff <span class="token operator">&lt;</span> <span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">60</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"重复发送验证码，时间间隔：{}秒"</span><span class="token punctuation">,</span> diff <span class="token operator">/</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> JsonData<span class="token punctuation">.</span><span class="token function">buildResult</span><span class="token punctuation">(</span>BizCodeEnum<span class="token punctuation">.</span>CODE_LIMITED<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//拼接验证码 验证码+时间戳，并存储到redis</span>        String code <span class="token operator">=</span> CommonUtil<span class="token punctuation">.</span><span class="token function">getRandomCode</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String value <span class="token operator">=</span> code <span class="token operator">+</span> <span class="token string">"_"</span> <span class="token operator">+</span> CommonUtil<span class="token punctuation">.</span><span class="token function">getCurrentTimestamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>cacheKey<span class="token punctuation">,</span> value<span class="token punctuation">,</span> CODE_EXPIRED<span class="token punctuation">,</span> TimeUnit<span class="token punctuation">.</span>MILLISECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>CheckUtil<span class="token punctuation">.</span><span class="token function">isEmail</span><span class="token punctuation">(</span>to<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//邮箱</span>            mailService<span class="token punctuation">.</span><span class="token function">sendMail</span><span class="token punctuation">(</span>to<span class="token punctuation">,</span> SUBJECT<span class="token punctuation">,</span> String<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>CONTENT<span class="token punctuation">,</span> code<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> JsonData<span class="token punctuation">.</span><span class="token function">buildSuccess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>CheckUtil<span class="token punctuation">.</span><span class="token function">isPhone</span><span class="token punctuation">(</span>to<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//短信</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> JsonData<span class="token punctuation">.</span><span class="token function">buildResult</span><span class="token punctuation">(</span>BizCodeEnum<span class="token punctuation">.</span>CODE_TO_ERROR<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;邮件传输协议&lt;ul&gt;
&lt;li&gt;SMTP协议：全称为 Simple Mail Transfer Protocol，简单邮件传输协议。它定义了邮件客户端软件和SMTP邮件服务器之间，以及两台SMTP邮件服务器之间的通信规则&lt;/li&gt;
&lt;li&gt;POP3协议：全称为 P
      
    
    </summary>
    
      <category term="1024" scheme="http://www.ldclass.club/categories/1024/"/>
    
    
      <category term="1024" scheme="http://www.ldclass.club/tags/1024/"/>
    
      <category term="邮箱" scheme="http://www.ldclass.club/tags/%E9%82%AE%E7%AE%B1/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot拦截器Autowired注入后值为null</title>
    <link href="http://www.ldclass.club/2021/08/16/springboot-lan-jie-qi-autowired-zhu-ru-hou-zhi-wei-null/"/>
    <id>http://www.ldclass.club/2021/08/16/springboot-lan-jie-qi-autowired-zhu-ru-hou-zhi-wei-null/</id>
    <published>2021-08-16T14:21:05.000Z</published>
    <updated>2021-08-16T12:39:26.095Z</updated>
    
    <content type="html"><![CDATA[<ul><li>拦截器在实例化时，需要注入的类还未进行初始化，所以获取到的值为null。</li></ul><p>一、三种方式解决</p><ul><li><p>方式一</p><ul><li>拦截器</li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">import</span> com<span class="token punctuation">.</span>dling<span class="token punctuation">.</span>springboot<span class="token punctuation">.</span>config<span class="token punctuation">.</span>AppProperties<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>HandlerInterceptor<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DataInterceptor</span> <span class="token keyword">implements</span> <span class="token class-name">HandlerInterceptor</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> AppProperties appProperties<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 重写的三个方法省略....</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>配置类</li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">import</span> com<span class="token punctuation">.</span>dling<span class="token punctuation">.</span>springboot<span class="token punctuation">.</span>interceptor<span class="token punctuation">.</span>DataInterceptor<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Bean<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Configuration<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>HandlerInterceptor<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>config<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>InterceptorRegistry<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>config<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebMvcConfigurerAdapter<span class="token punctuation">;</span><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyConfiguration</span> <span class="token keyword">extends</span> <span class="token class-name">WebMvcConfigurerAdapter</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> HandlerInterceptor <span class="token function">getDataInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">DataInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addInterceptors</span><span class="token punctuation">(</span>InterceptorRegistry registry<span class="token punctuation">)</span> <span class="token punctuation">{</span>        registry<span class="token punctuation">.</span><span class="token function">addInterceptor</span><span class="token punctuation">(</span><span class="token function">getDataInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addPathPatterns</span><span class="token punctuation">(</span><span class="token string">"/**"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>方式二</p><ul><li>拦截器</li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">import</span> com<span class="token punctuation">.</span>dling<span class="token punctuation">.</span>springboot<span class="token punctuation">.</span>config<span class="token punctuation">.</span>AppProperties<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>HandlerInterceptor<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DataInterceptor</span> <span class="token keyword">implements</span> <span class="token class-name">HandlerInterceptor</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> AppProperties appProperties<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token function">DataInterceptor</span><span class="token punctuation">(</span>AppProperties appProperties<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>appProperties <span class="token operator">=</span> appProperties<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 重写的三个方法省略....</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>配置类</li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">import</span> com<span class="token punctuation">.</span>dling<span class="token punctuation">.</span>springboot<span class="token punctuation">.</span>config<span class="token punctuation">.</span>AppProperties<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>dling<span class="token punctuation">.</span>springboot<span class="token punctuation">.</span>interceptor<span class="token punctuation">.</span>DataInterceptor<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Configuration<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>HandlerInterceptor<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>config<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>InterceptorRegistry<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>config<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebMvcConfigurerAdapter<span class="token punctuation">;</span><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyConfiguration</span> <span class="token keyword">extends</span> <span class="token class-name">WebMvcConfigurerAdapter</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> AppProperties appProperties<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addInterceptors</span><span class="token punctuation">(</span>InterceptorRegistry registry<span class="token punctuation">)</span> <span class="token punctuation">{</span>        registry<span class="token punctuation">.</span><span class="token function">addInterceptor</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DataInterceptor</span><span class="token punctuation">(</span>appProperties<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addPathPatterns</span><span class="token punctuation">(</span><span class="token string">"/**"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>方式三</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>context<span class="token punctuation">.</span>WebApplicationContext<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>context<span class="token punctuation">.</span>support<span class="token punctuation">.</span>WebApplicationContextUtils<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>dling<span class="token punctuation">.</span>springboot<span class="token punctuation">.</span>config<span class="token punctuation">.</span>AppProperties<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>HandlerInterceptor<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DataInterceptor</span> <span class="token keyword">implements</span> <span class="token class-name">HandlerInterceptor</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 在请求执行前执行的方法</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">preHandle</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">,</span> Object handler<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        WebApplicationContext applicationContext <span class="token operator">=</span> WebApplicationContextUtils<span class="token punctuation">.</span><span class="token function">getRequiredWebApplicationContext</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getServletContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        AppProperties appProperties <span class="token operator">=</span> applicationContext<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span>AppProperties<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 此处就可以调用实例方法了</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;拦截器在实例化时，需要注入的类还未进行初始化，所以获取到的值为null。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一、三种方式解决&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;方式一&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;拦截器&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;line-number
      
    
    </summary>
    
      <category term="interceptor" scheme="http://www.ldclass.club/categories/interceptor/"/>
    
    
      <category term="interceptor" scheme="http://www.ldclass.club/tags/interceptor/"/>
    
  </entry>
  
  <entry>
    <title>docker部署redis</title>
    <link href="http://www.ldclass.club/2021/08/16/docker-bu-shu-redis/"/>
    <id>http://www.ldclass.club/2021/08/16/docker-bu-shu-redis/</id>
    <published>2021-08-15T22:35:57.000Z</published>
    <updated>2021-08-15T15:31:48.556Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>docker部署redis 并配置密码</p><ul><li>如果访问不了，记得看防火墙/网络安全组端口是否开放</li><li>源码安装redis的话默认不能远程访问</li><li>docker安装redis可以远程访问</li></ul></li><li><p><code>docker run -itd --name ldclass-redis -p 8000:6379 redis --requirepass 123456</code></p></li></ul><pre class="line-numbers language-shell"><code class="language-shell">-i 以交互模式运行容器，通常与 -t 同时使用；-t 为容器重新分配一个伪输入终端，通常与 -i 同时使用；-d 后台运行容器，并返回容器ID；redis --requirepass 配置密码-p 8000:6379 宿主机端口，用于外部访问:docker容器内端口<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;p&gt;docker部署redis 并配置密码&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果访问不了，记得看防火墙/网络安全组端口是否开放&lt;/li&gt;
&lt;li&gt;源码安装redis的话默认不能远程访问&lt;/li&gt;
&lt;li&gt;docker安装redis可以远程访问&lt;/li&gt;
&lt;/ul&gt;

      
    
    </summary>
    
      <category term="1024" scheme="http://www.ldclass.club/categories/1024/"/>
    
    
      <category term="1024" scheme="http://www.ldclass.club/tags/1024/"/>
    
      <category term="Redis" scheme="http://www.ldclass.club/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>Linux安装docker</title>
    <link href="http://www.ldclass.club/2021/08/16/linux-an-zhuang-docker/"/>
    <id>http://www.ldclass.club/2021/08/16/linux-an-zhuang-docker/</id>
    <published>2021-08-15T22:35:37.000Z</published>
    <updated>2021-08-15T15:29:14.929Z</updated>
    
    <content type="html"><![CDATA[<ul><li>Linux环境下安装Docker</li></ul><pre class="line-numbers language-shell"><code class="language-shell">#依次运行以下命令添加yum源yum updateyum install epel-release -yyum clean allyum list#安装并运行Docker。yum install docker-io -ysystemctl start docker#检查安装结果。docker info#启动使用Dockersystemctl start docker     #运行Docker守护进程systemctl stop docker      #停止Docker守护进程systemctl restart docker   #重启Docker守护进程#修改镜像仓库vim /etc/docker/daemon.json#改为下面内容(自己的镜像地址，阿里云有)，然后重启docker{"debug":true,"experimental":true,"registry-mirrors":["https://pb5bklzr.mirror.aliyuncs.com","https://hub-mirror.c.163.com","https://docker.mirrors.ustc.edu.cn"]}#查看信息docker info<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;Linux环境下安装Docker&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;line-numbers language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;#依次运行以下命令添加yum源
yum update
yum in
      
    
    </summary>
    
      <category term="1024" scheme="http://www.ldclass.club/categories/1024/"/>
    
    
      <category term="Docker" scheme="http://www.ldclass.club/tags/Docker/"/>
    
      <category term="1024" scheme="http://www.ldclass.club/tags/1024/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot集成Captcha验证码</title>
    <link href="http://www.ldclass.club/2021/08/16/springboot-ji-cheng-captcha-yan-zheng-ma/"/>
    <id>http://www.ldclass.club/2021/08/16/springboot-ji-cheng-captcha-yan-zheng-ma/</id>
    <published>2021-08-15T22:26:48.000Z</published>
    <updated>2021-08-15T15:50:18.629Z</updated>
    
    <content type="html"><![CDATA[<ul><li><h4 id="谷歌开源kaptcha图形验证码开发"><a href="#谷歌开源kaptcha图形验证码开发" class="headerlink" title="谷歌开源kaptcha图形验证码开发"></a>谷歌开源kaptcha图形验证码开发</h4><ul><li><p>Kaptcha 框架介绍 谷歌开源的一个可高度配置的实用验证码生成工具</p><ul><li>验证码的字体/大小/颜色</li><li>验证码内容的范围(数字，字母，中文汉字！)</li><li>验证码图片的大小，边框，边框粗细，边框颜色</li><li>验证码的干扰线</li><li>验证码的样式(鱼眼样式、3D、普通模糊)</li></ul></li><li><p>聚合工程依赖添加（使用国内baomidou二次封装的springboot整合starter）</p><pre class="line-numbers language-xml"><code class="language-xml">  <span class="token comment" spellcheck="true">&lt;!--kaptcha依赖包--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.baomidou<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>kaptcha-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.1.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>子服务添加依赖</p><pre class="line-numbers language-xml"><code class="language-xml">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.baomidou<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>kaptcha-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>开发配置</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>config<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>code<span class="token punctuation">.</span>kaptcha<span class="token punctuation">.</span>Constants<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>code<span class="token punctuation">.</span>kaptcha<span class="token punctuation">.</span>impl<span class="token punctuation">.</span>DefaultKaptcha<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>code<span class="token punctuation">.</span>kaptcha<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Config<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Qualifier<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Bean<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Configuration<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Properties<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author LiuDong * @version 1.0 * @description 验证码配置类 * @date 2021年08月15日 22:04 */</span><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CaptchaConfig</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token annotation punctuation">@Qualifier</span><span class="token punctuation">(</span><span class="token string">"captchaProducer"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> DefaultKaptcha <span class="token function">defaultKaptcha</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        DefaultKaptcha defaultKaptcha <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultKaptcha</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Properties properties <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//        properties.setProperty(Constants.KAPTCHA_BORDER, "yes");</span><span class="token comment" spellcheck="true">//        properties.setProperty(Constants.KAPTCHA_BORDER_COLOR, "220,220,220");</span><span class="token comment" spellcheck="true">//        //properties.setProperty(Constants.KAPTCHA_TEXTPRODUCER_FONT_COLOR, "38,29,12");</span><span class="token comment" spellcheck="true">//        properties.setProperty(Constants.KAPTCHA_IMAGE_WIDTH, "147");</span><span class="token comment" spellcheck="true">//        properties.setProperty(Constants.KAPTCHA_IMAGE_HEIGHT, "34");</span><span class="token comment" spellcheck="true">//        properties.setProperty(Constants.KAPTCHA_TEXTPRODUCER_FONT_SIZE, "25");</span><span class="token comment" spellcheck="true">//        //properties.setProperty(Constants.KAPTCHA_SESSION_KEY, "code");</span>        <span class="token comment" spellcheck="true">//验证码个数</span>        properties<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span>Constants<span class="token punctuation">.</span>KAPTCHA_TEXTPRODUCER_CHAR_LENGTH<span class="token punctuation">,</span> <span class="token string">"4"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//        properties.setProperty(Constants.KAPTCHA_TEXTPRODUCER_FONT_NAMES, "Courier");</span>        <span class="token comment" spellcheck="true">//字体间隔</span>        properties<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span>Constants<span class="token punctuation">.</span>KAPTCHA_TEXTPRODUCER_CHAR_SPACE<span class="token punctuation">,</span> <span class="token string">"8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//干扰线颜色</span><span class="token comment" spellcheck="true">//        properties.setProperty(Constants.KAPTCHA_NOISE_COLOR, "white");</span>        <span class="token comment" spellcheck="true">//干扰实现类</span>        properties<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span>Constants<span class="token punctuation">.</span>KAPTCHA_NOISE_IMPL<span class="token punctuation">,</span> <span class="token string">"com.google.code.kaptcha.impl.NoNoise"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//图片样式</span>        properties<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span>Constants<span class="token punctuation">.</span>KAPTCHA_OBSCURIFICATOR_IMPL<span class="token punctuation">,</span> <span class="token string">"com.google.code.kaptcha.impl.ShadowGimpy"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//文字来源</span>        properties<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span>Constants<span class="token punctuation">.</span>KAPTCHA_TEXTPRODUCER_CHAR_STRING<span class="token punctuation">,</span> <span class="token string">"0123456789"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Config config <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Config</span><span class="token punctuation">(</span>properties<span class="token punctuation">)</span><span class="token punctuation">;</span>        defaultKaptcha<span class="token punctuation">.</span><span class="token function">setConfig</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> defaultKaptcha<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><h4 id="用户微服务开发图形验证码加入缓存"><a href="#用户微服务开发图形验证码加入缓存" class="headerlink" title="用户微服务开发图形验证码加入缓存"></a>用户微服务开发图形验证码加入缓存</h4><ul><li>redis做隔离, 多集群：核心集群和非核心集群，高并发集群和非高并发集群<ul><li>资源隔离</li><li>数据保护</li><li>提高性能</li><li>key规范：业务划分，冒号隔离<ul><li>user-service:captcha:MD5加密后的（ip+user-agent）</li><li>长度不能过长</li><li>浏览器指纹:ip+user-agent</li></ul></li></ul></li><li>工具集</li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>utils<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>net<span class="token punctuation">.</span>InetAddress<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>net<span class="token punctuation">.</span>UnknownHostException<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>security<span class="token punctuation">.</span>MessageDigest<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author LiuDong * @version 1.0 * @description * @date 2021年08月15日 22:58 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CommonUtil</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 获取ip     * @author LiuDong     * @date 2021/8/15 22:59     * @param request     * @return java.lang.String     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> String <span class="token function">getIpAddr</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">)</span> <span class="token punctuation">{</span>        String ipAddress <span class="token operator">=</span> null<span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//在nginx配置头信息，透传客户端IP</span>            ipAddress <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token string">"x-forwarded-for"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>ipAddress <span class="token operator">==</span> null <span class="token operator">||</span> ipAddress<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token string">"unknown"</span><span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span>ipAddress<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                ipAddress <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token string">"Proxy-Client-IP"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>ipAddress <span class="token operator">==</span> null <span class="token operator">||</span> ipAddress<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token string">"unknown"</span><span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span>ipAddress<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                ipAddress <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token string">"WL-Proxy-Client-IP"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>ipAddress <span class="token operator">==</span> null <span class="token operator">||</span> ipAddress<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token string">"unknown"</span><span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span>ipAddress<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                ipAddress <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getRemoteAddr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>ipAddress<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"127.0.0.1"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token comment" spellcheck="true">// 根据网卡取本机配置的IP</span>                    InetAddress inet <span class="token operator">=</span> null<span class="token punctuation">;</span>                    <span class="token keyword">try</span> <span class="token punctuation">{</span>                        inet <span class="token operator">=</span> InetAddress<span class="token punctuation">.</span><span class="token function">getLocalHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">UnknownHostException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    ipAddress <span class="token operator">=</span> inet<span class="token punctuation">.</span><span class="token function">getHostAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">// 对于通过多个代理的情况，第一个IP为客户端真实IP,多个IP按照','分割</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>ipAddress <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> ipAddress<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">15</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// "***.***.***.***".length()</span>                <span class="token comment" spellcheck="true">// = 15</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>ipAddress<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    ipAddress <span class="token operator">=</span> ipAddress<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> ipAddress<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            ipAddress<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> ipAddress<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * MD5加密     * @author LiuDong     * @date 2021/8/15 22:59     * @param data     * @return java.lang.String     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> String <span class="token function">MD5</span><span class="token punctuation">(</span>String data<span class="token punctuation">)</span>  <span class="token punctuation">{</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            java<span class="token punctuation">.</span>security<span class="token punctuation">.</span>MessageDigest md <span class="token operator">=</span> MessageDigest<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token string">"MD5"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array <span class="token operator">=</span> md<span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            StringBuilder sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">byte</span> item <span class="token operator">:</span> array<span class="token punctuation">)</span> <span class="token punctuation">{</span>                sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>Integer<span class="token punctuation">.</span><span class="token function">toHexString</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token number">0x100</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">return</span> sb<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> exception<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> null<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>用户微服务配置Redis</li></ul><pre class="line-numbers language-yml"><code class="language-yml">spring:  application:    name: xdclass-user-service  redis:    host: 112.74.55.160    password: 123456    port: 8000<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>common聚合工程依赖配置</li></ul><pre class="line-numbers language-xml"><code class="language-xml">       <span class="token comment" spellcheck="true">&lt;!--redis客户端--></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-data-redis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">></span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">></span></span>                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>io.lettuce<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>lettuce-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>redis.clients<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>jedis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>验证码接口开发</li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>controller<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>CommonUtil<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>code<span class="token punctuation">.</span>kaptcha<span class="token punctuation">.</span>Producer<span class="token punctuation">;</span><span class="token keyword">import</span> io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span>Api<span class="token punctuation">;</span><span class="token keyword">import</span> io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span>ApiOperation<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>Slf4j<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>core<span class="token punctuation">.</span>StringRedisTemplate<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RequestMapping<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RequestMethod<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RestController<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>imageio<span class="token punctuation">.</span>ImageIO<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletOutputStream<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>image<span class="token punctuation">.</span>BufferedImage<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>TimeUnit<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author LiuDong * @version 1.0 * @description 通知 * @date 2021年08月15日 22:10 */</span><span class="token annotation punctuation">@Api</span><span class="token punctuation">(</span>tags <span class="token operator">=</span> <span class="token string">"通知模块"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"api/notify/v1"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Slf4j</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NotifyController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> Producer captchaProducer<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> StringRedisTemplate redisTemplate<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 图形验证码有效期     */</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> CAPTCHA_CODE_EXPIRED <span class="token operator">=</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">30</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 获取图形验证码     * 输出图片流     *     * @param request     * @param response     * @author LiuDong     * @date 2021/8/15 22:14     */</span>    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span><span class="token string">"获取图形验证码"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"captcha"</span><span class="token punctuation">,</span> method <span class="token operator">=</span> RequestMethod<span class="token punctuation">.</span>GET<span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getCaptcha</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">/*String captchaText = captchaProducer.createText();        log.info("图形验证码：{}", captchaText);        //存储到redis        //TimeUnit 时间枚举类        redisTemplate.opsForValue().set(getCaptchaKey(request),captchaText,CAPTCHA_CODE_EXPIRED, TimeUnit.MILLISECONDS);        BufferedImage bufferedImage = captchaProducer.createImage(captchaText);        try (ServletOutputStream outputStream = response.getOutputStream()) {            ImageIO.write(bufferedImage, "jpg", outputStream);        } catch (IOException e) {            log.error("获取图形验证码异常：{}", e);        }*/</span>        String cacheKey <span class="token operator">=</span> <span class="token function">getCaptchaKey</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>        String capText <span class="token operator">=</span> captchaProducer<span class="token punctuation">.</span><span class="token function">createText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//存储</span>        redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>cacheKey<span class="token punctuation">,</span> capText<span class="token punctuation">,</span> CAPTCHA_CODE_EXPIRED<span class="token punctuation">,</span> TimeUnit<span class="token punctuation">.</span>MILLISECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span>        BufferedImage bufferedImage <span class="token operator">=</span> captchaProducer<span class="token punctuation">.</span><span class="token function">createImage</span><span class="token punctuation">(</span>capText<span class="token punctuation">)</span><span class="token punctuation">;</span>        ServletOutputStream outputStream <span class="token operator">=</span> null<span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            response<span class="token punctuation">.</span><span class="token function">setDateHeader</span><span class="token punctuation">(</span><span class="token string">"Expires"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Cache-Control"</span><span class="token punctuation">,</span> <span class="token string">"no-store, no-cache, must-revalidate"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            response<span class="token punctuation">.</span><span class="token function">addHeader</span><span class="token punctuation">(</span><span class="token string">"Cache-Control"</span><span class="token punctuation">,</span> <span class="token string">"create_date-check=0, pre-check=0"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Pragma"</span><span class="token punctuation">,</span> <span class="token string">"no-cache"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            outputStream <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            ImageIO<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>bufferedImage<span class="token punctuation">,</span> <span class="token string">"jpg"</span><span class="token punctuation">,</span> outputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>            outputStream<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            outputStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"获取验证码失败:{}"</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 获取缓存key     *     * @param request     * @return java.lang.String     * @author LiuDong     * @date 2021/8/15 23:03     */</span>    <span class="token keyword">private</span> String <span class="token function">getCaptchaKey</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">)</span> <span class="token punctuation">{</span>        String ip <span class="token operator">=</span> CommonUtil<span class="token punctuation">.</span><span class="token function">getIpAddr</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>        String userAgent <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token string">"user-Agent"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String key <span class="token operator">=</span> <span class="token string">"user-service:captcha:"</span> <span class="token operator">+</span> CommonUtil<span class="token punctuation">.</span><span class="token function">MD5</span><span class="token punctuation">(</span>ip <span class="token operator">+</span> userAgent<span class="token punctuation">)</span><span class="token punctuation">;</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"ip:{}"</span><span class="token punctuation">,</span> ip<span class="token punctuation">)</span><span class="token punctuation">;</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"userAgent:{}"</span><span class="token punctuation">,</span> userAgent<span class="token punctuation">)</span><span class="token punctuation">;</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"key:{}"</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> key<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;谷歌开源kaptcha图形验证码开发&quot;&gt;&lt;a href=&quot;#谷歌开源kaptcha图形验证码开发&quot; class=&quot;headerlink&quot; title=&quot;谷歌开源kaptcha图形验证码开发&quot;&gt;&lt;/a&gt;谷歌开源kaptcha图形验证码开发&lt;/h4&gt;
      
    
    </summary>
    
      <category term="1024" scheme="http://www.ldclass.club/categories/1024/"/>
    
    
      <category term="1024" scheme="http://www.ldclass.club/tags/1024/"/>
    
      <category term="Captcha" scheme="http://www.ldclass.club/tags/Captcha/"/>
    
  </entry>
  
  <entry>
    <title>集成单元测试</title>
    <link href="http://www.ldclass.club/2021/08/16/ji-cheng-dan-yuan-ce-shi/"/>
    <id>http://www.ldclass.club/2021/08/16/ji-cheng-dan-yuan-ce-shi/</id>
    <published>2021-08-15T21:23:13.000Z</published>
    <updated>2021-08-15T13:27:47.517Z</updated>
    
    <content type="html"><![CDATA[<ul><li>需求分析-&gt;设计-&gt;开发-&gt;测试-&gt;上线<ul><li>单元测试:  完成最小的软件设计单元的验证工作，目标是确保模块被正确的编码</li></ul></li></ul><ul><li>Spring Boot Test 是在Spring Test之上的再次封装,  使用@SpringBootTest后，Spring将加载所有被管理的bean，等同于启动了整个服务</li></ul><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>biz<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>UserApplication<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>model<span class="token punctuation">.</span>AddressDO<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>service<span class="token punctuation">.</span>AddressService<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>Slf4j<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>Assert<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>Test<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>runner<span class="token punctuation">.</span>RunWith<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>SpringBootTest<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>junit4<span class="token punctuation">.</span>SpringRunner<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author LiuDong * @version 1.0 * @description * @date 2021年08月15日 21:16 */</span><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span>SpringRunner<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@SpringBootTest</span><span class="token punctuation">(</span>classes <span class="token operator">=</span> UserApplication<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Slf4j</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AddressTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> AddressService addressService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testAddressDetail</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        AddressDO addressDO <span class="token operator">=</span> addressService<span class="token punctuation">.</span><span class="token function">detail</span><span class="token punctuation">(</span>1L<span class="token punctuation">)</span><span class="token punctuation">;</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>addressDO<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//断言</span>        Assert<span class="token punctuation">.</span><span class="token function">assertNotNull</span><span class="token punctuation">(</span>addressDO<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;需求分析-&amp;gt;设计-&amp;gt;开发-&amp;gt;测试-&amp;gt;上线&lt;ul&gt;
&lt;li&gt;单元测试:  完成最小的软件设计单元的验证工作，目标是确保模块被正确的编码&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Spring Boot Test 是在S
      
    
    </summary>
    
      <category term="1024" scheme="http://www.ldclass.club/categories/1024/"/>
    
    
      <category term="1024" scheme="http://www.ldclass.club/tags/1024/"/>
    
      <category term="SpringBootTest" scheme="http://www.ldclass.club/tags/SpringBootTest/"/>
    
  </entry>
  
  <entry>
    <title>自定义全局异常</title>
    <link href="http://www.ldclass.club/2021/08/16/zi-ding-yi-quan-ju-yi-chang/"/>
    <id>http://www.ldclass.club/2021/08/16/zi-ding-yi-quan-ju-yi-chang/</id>
    <published>2021-08-15T21:23:02.000Z</published>
    <updated>2021-08-15T13:27:46.407Z</updated>
    
    <content type="html"><![CDATA[<ul><li>自定义全局异常</li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>exception<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>enums<span class="token punctuation">.</span>BizCodeEnum<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>Data<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author LiuDong * @version 1.0 * @date 2021年08月15日 20:59 */</span><span class="token annotation punctuation">@Data</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BizException</span> <span class="token keyword">extends</span> <span class="token class-name">RuntimeException</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> code<span class="token punctuation">;</span>    <span class="token keyword">private</span> String msg<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token function">BizException</span><span class="token punctuation">(</span>Integer code<span class="token punctuation">,</span> String message<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>code <span class="token operator">=</span> code<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>msg <span class="token operator">=</span> message<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token function">BizException</span><span class="token punctuation">(</span>BizCodeEnum bizCodeEnum<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">(</span>bizCodeEnum<span class="token punctuation">.</span><span class="token function">getMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>code <span class="token operator">=</span> bizCodeEnum<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>msg <span class="token operator">=</span> bizCodeEnum<span class="token punctuation">.</span><span class="token function">getMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>自定义异常处理器</li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>exception<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>JsonData<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>Slf4j<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>ControllerAdvice<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>ExceptionHandler<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>ResponseBody<span class="token punctuation">;</span><span class="token keyword">import</span> springfox<span class="token punctuation">.</span>documentation<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>web<span class="token punctuation">.</span>json<span class="token punctuation">.</span>Json<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author LiuDong * @version 1.0 * @date 2021年08月15日 21:01 */</span><span class="token annotation punctuation">@ControllerAdvice</span><span class="token annotation punctuation">@Slf4j</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CustomExceptionHandler</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@ExceptionHandler</span><span class="token punctuation">(</span>value <span class="token operator">=</span> Exception<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ResponseBody</span>    <span class="token keyword">public</span> JsonData <span class="token function">handler</span><span class="token punctuation">(</span>Exception e<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//是不是自定义异常</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>e <span class="token keyword">instanceof</span> <span class="token class-name">BizException</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            BizException bizException <span class="token operator">=</span> <span class="token punctuation">(</span>BizException<span class="token punctuation">)</span> e<span class="token punctuation">;</span>            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"[业务异常{}]"</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> JsonData<span class="token punctuation">.</span><span class="token function">buildCodeAndMsg</span><span class="token punctuation">(</span>bizException<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> bizException<span class="token punctuation">.</span><span class="token function">getMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"[系统异常{}]"</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> JsonData<span class="token punctuation">.</span><span class="token function">buildError</span><span class="token punctuation">(</span><span class="token string">"全局异常，未知错误"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;自定义全局异常&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;line-numbers language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;package&lt;/span&gt; c
      
    
    </summary>
    
      <category term="1024" scheme="http://www.ldclass.club/categories/1024/"/>
    
    
      <category term="1024" scheme="http://www.ldclass.club/tags/1024/"/>
    
      <category term="BizException" scheme="http://www.ldclass.club/tags/BizException/"/>
    
  </entry>
  
  <entry>
    <title>统一接口响应</title>
    <link href="http://www.ldclass.club/2021/08/16/tong-yi-jie-kou-xiang-ying/"/>
    <id>http://www.ldclass.club/2021/08/16/tong-yi-jie-kou-xiang-ying/</id>
    <published>2021-08-15T21:22:51.000Z</published>
    <updated>2021-08-15T13:27:44.307Z</updated>
    
    <content type="html"><![CDATA[<ul><li>统一业务状态码 BizCodeEnum</li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>enums<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>Getter<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * 枚举类，统一状态码和错误信息 * 前三位是服务，后三位是接口 * @author LiuDong * @version 1.0 * @date 2021年08月15日 20:47 */</span><span class="token keyword">public</span> <span class="token keyword">enum</span> BizCodeEnum <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 通用操作码     */</span>    <span class="token function">OPS_REPEAT</span><span class="token punctuation">(</span><span class="token number">110001</span><span class="token punctuation">,</span><span class="token string">"重复操作"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">/**     *验证码     */</span>    <span class="token function">CODE_TO_ERROR</span><span class="token punctuation">(</span><span class="token number">240001</span><span class="token punctuation">,</span><span class="token string">"接收号码不合规"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">CODE_LIMITED</span><span class="token punctuation">(</span><span class="token number">240002</span><span class="token punctuation">,</span><span class="token string">"验证码发送过快"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">CODE_ERROR</span><span class="token punctuation">(</span><span class="token number">240003</span><span class="token punctuation">,</span><span class="token string">"验证码错误"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">CODE_CAPTCHA</span><span class="token punctuation">(</span><span class="token number">240101</span><span class="token punctuation">,</span><span class="token string">"图形验证码错误"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">/**     * 账号     */</span>    <span class="token function">ACCOUNT_REPEAT</span><span class="token punctuation">(</span><span class="token number">250001</span><span class="token punctuation">,</span><span class="token string">"账号已经存在"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">ACCOUNT_UNREGISTER</span><span class="token punctuation">(</span><span class="token number">250002</span><span class="token punctuation">,</span><span class="token string">"账号不存在"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">ACCOUNT_PWD_ERROR</span><span class="token punctuation">(</span><span class="token number">250003</span><span class="token punctuation">,</span><span class="token string">"账号或者密码错误"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Getter</span>    <span class="token keyword">private</span> String msg<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Getter</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> code<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token function">BizCodeEnum</span><span class="token punctuation">(</span><span class="token keyword">int</span> code<span class="token punctuation">,</span>String msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>msg <span class="token operator">=</span> msg<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>code <span class="token operator">=</span> code<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>接口统一协议 JsonData工具类</li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>utils<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>enums<span class="token punctuation">.</span>BizCodeEnum<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>AllArgsConstructor<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>Data<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>NoArgsConstructor<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author LiuDong * @version 1.0 * @date 2021年08月15日 20:51 */</span><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@AllArgsConstructor</span><span class="token annotation punctuation">@NoArgsConstructor</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JsonData</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 状态码 0 表示成功，1表示处理中，-1表示失败     */</span>    <span class="token keyword">private</span> Integer code<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 数据     */</span>    <span class="token keyword">private</span> Object data<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 描述     */</span>    <span class="token keyword">private</span> String msg<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 成功，传入数据     *     * @return     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> JsonData <span class="token function">buildSuccess</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">JsonData</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> null<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 成功，传入数据     *     * @param data     * @return     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> JsonData <span class="token function">buildSuccess</span><span class="token punctuation">(</span>Object data<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">JsonData</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> data<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 失败，传入描述信息     *     * @param msg     * @return     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> JsonData <span class="token function">buildError</span><span class="token punctuation">(</span>String msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">JsonData</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> null<span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 自定义状态码和错误信息     *     * @param code     * @param msg     * @return     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> JsonData <span class="token function">buildCodeAndMsg</span><span class="token punctuation">(</span><span class="token keyword">int</span> code<span class="token punctuation">,</span> String msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">JsonData</span><span class="token punctuation">(</span>code<span class="token punctuation">,</span> null<span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 传入枚举，返回信息     *     * @param codeEnum     * @return     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> JsonData <span class="token function">buildResult</span><span class="token punctuation">(</span>BizCodeEnum codeEnum<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> JsonData<span class="token punctuation">.</span><span class="token function">buildCodeAndMsg</span><span class="token punctuation">(</span>codeEnum<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> codeEnum<span class="token punctuation">.</span><span class="token function">getMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;统一业务状态码 BizCodeEnum&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;line-numbers language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;pack
      
    
    </summary>
    
      <category term="1024" scheme="http://www.ldclass.club/categories/1024/"/>
    
    
      <category term="1024" scheme="http://www.ldclass.club/tags/1024/"/>
    
      <category term="BizCodeEnum" scheme="http://www.ldclass.club/tags/BizCodeEnum/"/>
    
  </entry>
  
  <entry>
    <title>swagger3.0新全局配置</title>
    <link href="http://www.ldclass.club/2021/08/15/swagger3-0-xin-quan-ju-pei-zhi/"/>
    <id>http://www.ldclass.club/2021/08/15/swagger3-0-xin-quan-ju-pei-zhi/</id>
    <published>2021-08-14T16:20:59.000Z</published>
    <updated>2021-08-15T13:22:04.539Z</updated>
    
    <content type="html"><![CDATA[<ul><li>访问地址<ul><li><code>http://ip:port/swagger-ui/index.html#/</code></li></ul></li><li>新增全局配置</li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>config<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>Data<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Bean<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpMethod<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Component<span class="token punctuation">;</span><span class="token keyword">import</span> springfox<span class="token punctuation">.</span>documentation<span class="token punctuation">.</span>builders<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> springfox<span class="token punctuation">.</span>documentation<span class="token punctuation">.</span>oas<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span>EnableOpenApi<span class="token punctuation">;</span><span class="token keyword">import</span> springfox<span class="token punctuation">.</span>documentation<span class="token punctuation">.</span>schema<span class="token punctuation">.</span>ScalarType<span class="token punctuation">;</span><span class="token keyword">import</span> springfox<span class="token punctuation">.</span>documentation<span class="token punctuation">.</span>service<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> springfox<span class="token punctuation">.</span>documentation<span class="token punctuation">.</span>spi<span class="token punctuation">.</span>DocumentationType<span class="token punctuation">;</span><span class="token keyword">import</span> springfox<span class="token punctuation">.</span>documentation<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>web<span class="token punctuation">.</span>plugins<span class="token punctuation">.</span>Docket<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>ArrayList<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author LiuDong * @version 1.0 * @date 2021年08月14日 15:48 */</span><span class="token annotation punctuation">@Component</span><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@EnableOpenApi</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SwaggerConfiguration</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 对C端用户的接口文档     *     * @return springfox.documentation.spring.web.plugins.Docket     * @author LiuDong     * @date 2021/8/14 16:05     */</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> Docket <span class="token function">webApiDoc</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//采用3.0的配置</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Docket</span><span class="token punctuation">(</span>DocumentationType<span class="token punctuation">.</span>OAS_30<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">groupName</span><span class="token punctuation">(</span><span class="token string">"用户端接口文档"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">pathMapping</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">//定义是否开启Swagger,false是关闭，可以通过变量控制，线上关闭</span>                <span class="token punctuation">.</span><span class="token function">enable</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">//配置接口文档的元信息</span>                <span class="token punctuation">.</span><span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">// 选择哪些接口作为swagger的doc发布</span>                <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">apis</span><span class="token punctuation">(</span>RequestHandlerSelectors<span class="token punctuation">.</span><span class="token function">basePackage</span><span class="token punctuation">(</span><span class="token string">"club.ldclass"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">//正则匹配请求路径，并分配到当前分组</span>                <span class="token punctuation">.</span><span class="token function">paths</span><span class="token punctuation">(</span>PathSelectors<span class="token punctuation">.</span><span class="token function">ant</span><span class="token punctuation">(</span><span class="token string">"/api/**"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token operator">/</span><span class="token operator">/</span>新版swaggerUI3<span class="token number">.0</span>配置                <span class="token punctuation">.</span><span class="token function">globalRequestParameters</span><span class="token punctuation">(</span><span class="token function">globalRequestParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">globalResponses</span><span class="token punctuation">(</span>HttpMethod<span class="token punctuation">.</span>GET<span class="token punctuation">,</span><span class="token function">getGlobalResponseMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">globalResponses</span><span class="token punctuation">(</span>HttpMethod<span class="token punctuation">.</span>POST<span class="token punctuation">,</span><span class="token function">getGlobalResponseMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>     <span class="token operator">*</span> 对管理端的接口文档     <span class="token operator">*</span>     <span class="token operator">*</span> @<span class="token keyword">return</span> springfox<span class="token punctuation">.</span>documentation<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>web<span class="token punctuation">.</span>plugins<span class="token punctuation">.</span>Docket     <span class="token operator">*</span> <span class="token annotation punctuation">@author</span> LiuDong     <span class="token operator">*</span> <span class="token annotation punctuation">@date</span> <span class="token number">2021</span><span class="token operator">/</span><span class="token number">8</span><span class="token operator">/</span><span class="token number">14</span> <span class="token number">16</span><span class="token operator">:</span><span class="token number">05</span>     <span class="token operator">*</span><span class="token operator">/</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> Docket <span class="token function">adminApiDoc</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//采用3.0的配置</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Docket</span><span class="token punctuation">(</span>DocumentationType<span class="token punctuation">.</span>OAS_30<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">groupName</span><span class="token punctuation">(</span><span class="token string">"管理端接口文档"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">pathMapping</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">//定义是否开启Swagger,false是关闭，可以通过变量控制，线上关闭</span>                <span class="token punctuation">.</span><span class="token function">enable</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">//配置接口文档的元信息</span>                <span class="token punctuation">.</span><span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">// 选择哪些接口作为swagger的doc发布</span>                <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">apis</span><span class="token punctuation">(</span>RequestHandlerSelectors<span class="token punctuation">.</span><span class="token function">basePackage</span><span class="token punctuation">(</span><span class="token string">"club.ldclass"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">//正则匹配请求路径，并分配到当前分组</span>                <span class="token punctuation">.</span><span class="token function">paths</span><span class="token punctuation">(</span>PathSelectors<span class="token punctuation">.</span><span class="token function">ant</span><span class="token punctuation">(</span><span class="token string">"/admin/**"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> ApiInfo <span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ApiInfoBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string">"1024电商平台"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">"微服务接口文档"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">contact</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Contact</span><span class="token punctuation">(</span><span class="token string">"ld"</span><span class="token punctuation">,</span> <span class="token string">"https://blog.ldclass.club"</span><span class="token punctuation">,</span> <span class="token string">"873791226@qq.com"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token string">"v1.0"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>     <span class="token operator">*</span> 配置全局通用参数<span class="token punctuation">,</span> 支持配置多个响应参数     <span class="token operator">*</span>     <span class="token operator">*</span> @<span class="token keyword">return</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token operator">&lt;</span>springfox<span class="token punctuation">.</span>documentation<span class="token punctuation">.</span>service<span class="token punctuation">.</span>RequestParameter<span class="token operator">></span>     <span class="token operator">*</span> <span class="token annotation punctuation">@author</span> LiuDong     <span class="token operator">*</span> <span class="token annotation punctuation">@date</span> <span class="token number">2021</span><span class="token operator">/</span><span class="token number">8</span><span class="token operator">/</span><span class="token number">14</span> <span class="token number">16</span><span class="token operator">:</span><span class="token number">08</span>     <span class="token operator">*</span><span class="token operator">/</span>    <span class="token keyword">private</span> List<span class="token operator">&lt;</span>RequestParameter<span class="token operator">></span> <span class="token function">globalRequestParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        List<span class="token operator">&lt;</span>RequestParameter<span class="token operator">></span> parameters <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        parameters<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RequestParameterBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                 <span class="token comment" spellcheck="true">//增加token</span>                <span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string">"token"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">"登录令牌"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">in</span><span class="token punctuation">(</span>ParameterType<span class="token punctuation">.</span>HEADER<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>q <span class="token operator">-</span><span class="token operator">></span> q<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span>m <span class="token operator">-</span><span class="token operator">></span> m<span class="token punctuation">.</span><span class="token function">scalarModel</span><span class="token punctuation">(</span>ScalarType<span class="token punctuation">.</span>STRING<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">//是否开启</span>                <span class="token punctuation">.</span><span class="token function">required</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> parameters<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 生成通用响应信息     * @author LiuDong     * @date 2021/8/14 16:13     * @return java.util.List&lt;Response>     */</span>    <span class="token keyword">private</span> List<span class="token operator">&lt;</span>Response<span class="token operator">></span> <span class="token function">getGlobalResponseMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        List<span class="token operator">&lt;</span>Response<span class="token operator">></span> responseList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        responseList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ResponseBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">code</span><span class="token punctuation">(</span><span class="token string">"4xx"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">"请求错误，根据code和msg检查"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> responseList<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;访问地址&lt;ul&gt;
&lt;li&gt;&lt;code&gt;http://ip:port/swagger-ui/index.html#/&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;新增全局配置&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;line-numbers la
      
    
    </summary>
    
      <category term="swagger" scheme="http://www.ldclass.club/categories/swagger/"/>
    
    
      <category term="1024" scheme="http://www.ldclass.club/tags/1024/"/>
    
      <category term="swagger" scheme="http://www.ldclass.club/tags/swagger/"/>
    
  </entry>
  
  <entry>
    <title>postman配置多环境操作</title>
    <link href="http://www.ldclass.club/2021/08/14/postman-pei-zhi-duo-huan-jing-cao-zuo/"/>
    <id>http://www.ldclass.club/2021/08/14/postman-pei-zhi-duo-huan-jing-cao-zuo/</id>
    <published>2021-08-14T15:43:40.000Z</published>
    <updated>2021-08-14T08:21:23.030Z</updated>
    
    <content type="html"><![CDATA[<ul><li>Postman配置多环境操作<ul><li>方便未来切换环境<ul><li>开发</li><li>测试</li><li>预发布</li><li>线上</li></ul></li></ul></li></ul><img src="/2021/08/14/postman-pei-zhi-duo-huan-jing-cao-zuo/1.png" title="Postman配置多环境操作"><img src="/2021/08/14/postman-pei-zhi-duo-huan-jing-cao-zuo/2.png" title="Postman配置多环境操作"><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;Postman配置多环境操作&lt;ul&gt;
&lt;li&gt;方便未来切换环境&lt;ul&gt;
&lt;li&gt;开发&lt;/li&gt;
&lt;li&gt;测试&lt;/li&gt;
&lt;li&gt;预发布&lt;/li&gt;
&lt;li&gt;线上&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&quot;/2021/
      
    
    </summary>
    
      <category term="postman" scheme="http://www.ldclass.club/categories/postman/"/>
    
    
      <category term="1024" scheme="http://www.ldclass.club/tags/1024/"/>
    
      <category term="postman" scheme="http://www.ldclass.club/tags/postman/"/>
    
  </entry>
  
  <entry>
    <title>项目编码规范</title>
    <link href="http://www.ldclass.club/2021/08/14/xiang-mu-bian-ma-gui-fan/"/>
    <id>http://www.ldclass.club/2021/08/14/xiang-mu-bian-ma-gui-fan/</id>
    <published>2021-08-14T15:09:46.000Z</published>
    <updated>2021-08-14T09:25:20.042Z</updated>
    
    <content type="html"><![CDATA[<ul><li><h3 id="N方库"><a href="#N方库" class="headerlink" title="N方库"></a>N方库</h3><ul><li>一方库: 本工程内部子项目模块依赖的库(jar 包)。<ul><li>自己项目中的module</li></ul></li><li>二方库: 公司内部发布到中央仓库，可供公司内部其它应用依赖的库(jar包)。<ul><li>公司内部其他项目开发的公共包</li></ul></li><li>三方库: 公司之外的开源库(jar 包)。<ul><li>第三方的包</li></ul></li></ul></li><li><h3 id="POJO实体类"><a href="#POJO实体类" class="headerlink" title="POJO实体类"></a>POJO实体类</h3><ul><li>POJO(Plain Ordinary Java Object): 在手册中，POJO 专指只有 setter / getter / toString的简单类，包括DO/DTO/BO/VO等, 禁止命名成xxxPOJO<ul><li>DO：数据库映射，一一对应</li><li>DTO：服务层之间的通讯</li><li>BO：业务对象</li><li>VO：值对象，业务层和前端交互</li></ul></li></ul></li><li><h3 id="各个层级约束规范"><a href="#各个层级约束规范" class="headerlink" title="各个层级约束规范"></a>各个层级约束规范</h3><ul><li>Service/DAO层方法命名规约<ul><li>获取单个对象的方法用get做前缀。</li><li>获取多个对象的方法用list做前缀，复数形式结尾如:listObjects。 </li><li>获取统计值的方法用count做前缀。</li><li>插入的方法用save/insert做前缀。</li><li>删除的方法用remove/delete做前缀。</li><li>修改的方法用update做前缀。</li></ul></li><li>领域模型命名规约<ul><li>数据对象:xxxDO，xxx即为数据表名。</li><li>一般数据传输对象:xxxDTO，xxx为业务领域相关的名称，项目里面也用VO。 </li><li>展示对象:xxxVO，也就是响应给前端的实体包装类。</li><li>接收前端json对象请求的命名为 XXXRequest</li></ul></li></ul></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;h3 id=&quot;N方库&quot;&gt;&lt;a href=&quot;#N方库&quot; class=&quot;headerlink&quot; title=&quot;N方库&quot;&gt;&lt;/a&gt;N方库&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;一方库: 本工程内部子项目模块依赖的库(jar 包)。&lt;ul&gt;
&lt;li&gt;自己项目中的module&lt;/l
      
    
    </summary>
    
      <category term="项目编码规范" scheme="http://www.ldclass.club/categories/%E9%A1%B9%E7%9B%AE%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83/"/>
    
    
      <category term="项目编码规范" scheme="http://www.ldclass.club/tags/%E9%A1%B9%E7%9B%AE%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83/"/>
    
  </entry>
  
  <entry>
    <title>微服务技术对比和选择</title>
    <link href="http://www.ldclass.club/2021/08/12/wei-fu-wu-ji-zhu-dui-bi-he-xuan-ze/"/>
    <id>http://www.ldclass.club/2021/08/12/wei-fu-wu-ji-zhu-dui-bi-he-xuan-ze/</id>
    <published>2021-08-11T23:15:51.000Z</published>
    <updated>2021-08-11T15:23:36.309Z</updated>
    
    <content type="html"><![CDATA[<ul><li><h3 id="SpringCloud"><a href="#SpringCloud" class="headerlink" title="SpringCloud"></a>SpringCloud</h3></li></ul><pre><code>全家桶+轻松嵌入第三方组件(Netflix 奈飞)官网：https://spring.io/projects/spring-cloud配套通信方式：http restful注册中心：eureka配置中心：config断路器：hystrix网关：zuul/gateway分布式追踪系统：sleuth+zipkin</code></pre><ul><li><h3 id="SpringCloudAlibaba"><a href="#SpringCloudAlibaba" class="headerlink" title="SpringCloudAlibaba"></a>SpringCloudAlibaba</h3></li></ul><pre><code>全家桶+阿里生态多个组件组合+SpringCloud支持官网 https://spring.io/projects/spring-cloud-alibaba配套通信方式：http restful服务注册发现：Nacos服务限流降级：Sentinel分布配置中心：Nacos服务网关：SpringCloud Gateway服务之间调用：Feign、Ribbon链路追踪：Sleuth+Zipkin</code></pre><ul><li><h3 id="为什么要选择SpringCloud和AlibabaCloud的区别"><a href="#为什么要选择SpringCloud和AlibabaCloud的区别" class="headerlink" title="为什么要选择SpringCloud和AlibabaCloud的区别"></a>为什么要选择SpringCloud和AlibabaCloud的区别</h3></li></ul><pre><code>官网 https://spring.io/projects/spring-cloud-alibaba#overviewSpringCloud和AlibabaCloud组件存在很大交集，互相配合SpringCloud很多组件是基于第三方整合，目前多个已经不更新了，比如zuul、eureka、hystrix等AlibabaCloud 提供一站式微服务解决方法，已经和SpringCloud进行了整合，组件互相支持我们也习惯称为 Spring Cloud Alibaba详细介绍：https://mp.weixin.qq.com/s/NMD52MLDY2Lq3LSeOcVwjA</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;h3 id=&quot;SpringCloud&quot;&gt;&lt;a href=&quot;#SpringCloud&quot; class=&quot;headerlink&quot; title=&quot;SpringCloud&quot;&gt;&lt;/a&gt;SpringCloud&lt;/h3&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;全家桶+轻
      
    
    </summary>
    
      <category term="实战项目" scheme="http://www.ldclass.club/categories/%E5%AE%9E%E6%88%98%E9%A1%B9%E7%9B%AE/"/>
    
    
      <category term="实战项目" scheme="http://www.ldclass.club/tags/%E5%AE%9E%E6%88%98%E9%A1%B9%E7%9B%AE/"/>
    
      <category term="SpringCloud" scheme="http://www.ldclass.club/tags/SpringCloud/"/>
    
      <category term="SpringCloudAlibaba" scheme="http://www.ldclass.club/tags/SpringCloudAlibaba/"/>
    
  </entry>
  
  <entry>
    <title>DevOps如何提效</title>
    <link href="http://www.ldclass.club/2021/08/10/devops-ru-he-ti-xiao/"/>
    <id>http://www.ldclass.club/2021/08/10/devops-ru-he-ti-xiao/</id>
    <published>2021-08-09T21:58:25.000Z</published>
    <updated>2021-08-09T14:50:01.024Z</updated>
    
    <content type="html"><![CDATA[<ul><li><h3 id="DevOps"><a href="#DevOps" class="headerlink" title="DevOps"></a>DevOps</h3><ul><li>什么是DevOps：开发+测试+运维 交集</li><li>一专多能，配合提效</li><li>核心：CI/CD（持续集成/持续交付） 多环境-构建-打包-测试-上线-监控</li><li>快速迭代产品，每次代码的改动都触发校验，每刻都可进行新版本的上线</li><li>持续开发、持续集成、持续测试、持续部署、持续监控</li></ul></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;h3 id=&quot;DevOps&quot;&gt;&lt;a href=&quot;#DevOps&quot; class=&quot;headerlink&quot; title=&quot;DevOps&quot;&gt;&lt;/a&gt;DevOps&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;什么是DevOps：开发+测试+运维 交集&lt;/li&gt;
&lt;li&gt;一专多能，配合提
      
    
    </summary>
    
      <category term="DevOps" scheme="http://www.ldclass.club/categories/DevOps/"/>
    
    
      <category term="DevOps" scheme="http://www.ldclass.club/tags/DevOps/"/>
    
  </entry>
  
  <entry>
    <title>DDD领域驱动设计</title>
    <link href="http://www.ldclass.club/2021/08/10/ddd-ling-yu-qu-dong-she-ji/"/>
    <id>http://www.ldclass.club/2021/08/10/ddd-ling-yu-qu-dong-she-ji/</id>
    <published>2021-08-09T21:51:36.000Z</published>
    <updated>2021-08-09T13:57:51.204Z</updated>
    
    <content type="html"><![CDATA[<ul><li><h3 id="DDD领域驱动设计"><a href="#DDD领域驱动设计" class="headerlink" title="DDD领域驱动设计"></a>DDD领域驱动设计</h3><ul><li>什么是DDD：领域驱动设计，领域专家—&gt;电商领域/支付领域/物流领域/在线教育等</li><li>步骤：领域分析—&gt;领域设计—&gt;领域实现—&gt;循环迭代优化</li><li>DDD是一套思想，不通团队实行DDD都有不同的理解，不是每个项目都适合</li></ul></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;h3 id=&quot;DDD领域驱动设计&quot;&gt;&lt;a href=&quot;#DDD领域驱动设计&quot; class=&quot;headerlink&quot; title=&quot;DDD领域驱动设计&quot;&gt;&lt;/a&gt;DDD领域驱动设计&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;什么是DDD：领域驱动设计，领域专家—&amp;gt;电商领域
      
    
    </summary>
    
      <category term="DDD" scheme="http://www.ldclass.club/categories/DDD/"/>
    
    
      <category term="DDD" scheme="http://www.ldclass.club/tags/DDD/"/>
    
  </entry>
  
  <entry>
    <title>解决方案分析方法论SWOT</title>
    <link href="http://www.ldclass.club/2021/08/10/jie-jue-fang-an-fen-xi-fang-fa-lun-swot/"/>
    <id>http://www.ldclass.club/2021/08/10/jie-jue-fang-an-fen-xi-fang-fa-lun-swot/</id>
    <published>2021-08-09T21:41:14.000Z</published>
    <updated>2021-08-09T13:48:12.124Z</updated>
    
    <content type="html"><![CDATA[<ul><li><h3 id="SWOT"><a href="#SWOT" class="headerlink" title="SWOT"></a>SWOT</h3><ul><li>S(strengths)是优势</li><li>W(weaknesses)是劣势</li><li>O(opportunities)是机会</li><li>T(threats)是威胁</li></ul></li><li><h3 id="SMART"><a href="#SMART" class="headerlink" title="SMART"></a>SMART</h3><ul><li><p>SMART原则【目标管理、设置】</p><ul><li><p><strong>Specific</strong>：目标要具体</p></li><li><p><strong>Measurable</strong>：目标成果要可衡量（量化）</p></li><li><p><strong>Attainable</strong>：目标要可实现，避免过高/过低</p></li><li><p><strong>Relevant</strong>：与其他目标有一定的相关性</p></li><li><p><strong>Time bound</strong>：目标必须有明确的期限</p></li><li><p><strong>意义</strong>：在制定工作目标或者任务目标时，考虑一下目标与计划是不是SMART化的。只有具备SMART化的计划才是具有良好可实施性的，也才能指导保证计划得以实现</p></li><li><p><strong>OKR</strong>：绩效考核 </p></li></ul></li></ul></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;h3 id=&quot;SWOT&quot;&gt;&lt;a href=&quot;#SWOT&quot; class=&quot;headerlink&quot; title=&quot;SWOT&quot;&gt;&lt;/a&gt;SWOT&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;S(strengths)是优势&lt;/li&gt;
&lt;li&gt;W(weaknesses)是劣势&lt;/li&gt;

      
    
    </summary>
    
      <category term="SWOT" scheme="http://www.ldclass.club/categories/SWOT/"/>
    
    
      <category term="SWOT" scheme="http://www.ldclass.club/tags/SWOT/"/>
    
  </entry>
  
  <entry>
    <title>Mysql主从复制</title>
    <link href="http://www.ldclass.club/2021/07/14/mysql-zhu-cong-fu-zhi/"/>
    <id>http://www.ldclass.club/2021/07/14/mysql-zhu-cong-fu-zhi/</id>
    <published>2021-07-13T17:45:07.000Z</published>
    <updated>2021-07-13T09:55:43.585Z</updated>
    
    <content type="html"><![CDATA[<ul><li><h4 id="主从同步复制有以下几种方式："><a href="#主从同步复制有以下几种方式：" class="headerlink" title="主从同步复制有以下几种方式："></a>主从同步复制有以下几种方式：</h4><ul><li>同步复制，master的变化，必须等待slave-1,slave-2,…,slave-n完成后才能返回。</li><li>异步复制，master只需要完成自己的数据库操作即可，至于slaves是否收到二进制日志，是否完成操作，不用关心。MYSQL的默认设置。</li><li>半同步复制，master只保证slaves中的一个操作成功，就返回，其他slave不管。这个功能，是由google为MYSQL引入的。</li></ul></li><li><h4 id="分别在两台centos-7系统上安装mysql-5-7"><a href="#分别在两台centos-7系统上安装mysql-5-7" class="headerlink" title="分别在两台centos 7系统上安装mysql 5.7"></a>分别在两台centos 7系统上安装mysql 5.7</h4></li><li><h4 id="master主服务器的配置"><a href="#master主服务器的配置" class="headerlink" title="master主服务器的配置"></a>master主服务器的配置</h4><ul><li>配置文件my.cnf的修改</li></ul><pre class="line-numbers language-cnf"><code class="language-cnf">#编辑my.cnf文件[root@localhost mysql]# vim /etc/my.cnf#在[mysqld]中添加：server-id=1log_bin=master-binlog_bin_index=master-bin.indexbinlog_do_db=test#备注：#server-id 服务器唯一标识。#log_bin 启动MySQL二进制日志，即数据同步语句，从数据库会一条一条的执行这些语句。#binlog_do_db 指定记录二进制日志的数据库，即需要复制的数据库名，如果复制多个数据库，重复设置这个选项即可。#binlog_ignore_db 指定不记录二进制日志的数据库，即不需要复制的数据库名，如果有多个数据库，重复设置这个选项即可。#其中需要注意的是，binlog_do_db和binlog_ignore_db为互斥选项，一般只需要一个即可。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>创建从服务器的用户和权限</li></ul><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#进入mysql数据库</span><span class="token punctuation">[</span>root<span class="token variable">@localhost</span> mysql<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># mysql -uroot -p</span>Enter password:<span class="token comment" spellcheck="true">#创建从数据库的masterbackup用户和权限</span>mysql<span class="token operator">></span> <span class="token keyword">grant</span> <span class="token keyword">replication</span> slave <span class="token keyword">on</span> <span class="token operator">*</span><span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">to</span> masterbackup@'<span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">17</span><span class="token punctuation">.</span><span class="token operator">%</span><span class="token string">' identified by '</span><span class="token number">123456</span>'<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#备注</span><span class="token comment" spellcheck="true">#192.168.17.%通配符，表示0-255的IP都可访问主服务器，正式环境请配置指定从服务器IP</span><span class="token comment" spellcheck="true">#若将 192.168.17.% 改为 %，则任何ip均可作为其从数据库来访问主服务器</span><span class="token comment" spellcheck="true">#退出mysql</span>mysql<span class="token operator">></span> <span class="token keyword">exit</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>重启mysql服务</li></ul><pre class="line-numbers language-shell"><code class="language-shell">[root@localhost mysql]# systemctl restart mysql.service<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>查看主服务器状态</li></ul><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#进入mysql数据库</span><span class="token punctuation">[</span>root<span class="token variable">@localhost</span> mysql<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># mysql -uroot -p</span>Enter password:<span class="token comment" spellcheck="true">#查看主服务器状态</span>mysql<span class="token operator">></span> <span class="token keyword">show</span> master <span class="token keyword">status</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------------------+----------+--------------+------------------+-------------------+</span><span class="token operator">|</span> <span class="token keyword">File</span>              <span class="token operator">|</span> Position <span class="token operator">|</span> Binlog_Do_DB <span class="token operator">|</span> Binlog_Ignore_DB <span class="token operator">|</span> Executed_Gtid_Set <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------------------+----------+--------------+------------------+-------------------+</span><span class="token operator">|</span> master<span class="token operator">-</span>bin<span class="token number">.000001</span> <span class="token operator">|</span>      <span class="token number">154</span> <span class="token operator">|</span> test         <span class="token operator">|</span>                  <span class="token operator">|</span>                   <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------------------+----------+--------------+------------------+-------------------+</span><span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><h4 id="slave从服务器的配置"><a href="#slave从服务器的配置" class="headerlink" title="slave从服务器的配置"></a>slave从服务器的配置</h4><ul><li>配置文件my.cnf的修改</li></ul><pre class="line-numbers language-cnf"><code class="language-cnf">#根据上一篇文章，编辑my.cnf文件[root@localhost mysql]# vim /etc/my.cnf#在[mysqld]中添加：server-id=2relay-log=slave-relay-binrelay-log-index=slave-relay-bin.index#replicate-do-db=test#备注：#server-id 服务器唯一标识，如果有多个从服务器，每个服务器的server-id不能重复，跟IP一样是唯一标识，如果你没设置server-id或者设置为0，则从服务器不会连接到主服务器。#relay-log 启动MySQL二进制日志，可以用来做数据备份和崩溃恢复，或主服务器挂掉了，将此从服务器作为其他从服务器的主服务器。#replicate-do-db 指定同步的数据库，如果复制多个数据库，重复设置这个选项即可。若在master端不指定binlog-do-db，则在slave端可用replication-do-db来过滤。#replicate-ignore-db 不需要同步的数据库，如果有多个数据库，重复设置这个选项即可。#其中需要注意的是，replicate-do-db和replicate-ignore-db为互斥选项，一般只需要一个即可。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>重启mysql服务</li></ul><pre class="line-numbers language-shell"><code class="language-shell">[root@localhost mysql]# systemctl restart mysql.service<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>连接master主服务器</li></ul><pre class="line-numbers language-mysql"><code class="language-mysql">#进入mysql数据库[root@localhost mysql]# mysql -uroot -pEnter password:#连接master主服务器mysql> change master to master_host='192.168.17.130',master_port=3306,master_user='masterbackup',master_password='123456',master_log_file='master-bin.000001',master_log_pos=154;#备注：#master_host对应主服务器的IP地址。#master_port对应主服务器的端口。#master_log_file对应show master status显示的File列：master-bin.000001。#master_log_pos对应show master status显示的Position列：154。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>启动slave数据同步</li></ul><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#启动slave数据同步</span>mysql<span class="token operator">></span> <span class="token keyword">start</span> slave<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#停止slave数据同步（若有需要）</span>mysql<span class="token operator">></span> stop slave<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li>查看slave信息，Slave_IO_Running和Slave_SQL_Running都为yes，则表示同步成功。</li></ul><pre class="line-numbers language-sql"><code class="language-sql">mysql<span class="token operator">></span> <span class="token keyword">show</span> slave <span class="token keyword">status</span>\G<span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token number">1</span><span class="token punctuation">.</span> <span class="token keyword">row</span> <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>               Slave_IO_State: Waiting <span class="token keyword">for</span> master <span class="token keyword">to</span> send event                  Master_Host: <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">70.129</span>                  Master_User: <span class="token keyword">backup</span>                  Master_Port: <span class="token number">13306</span>                Connect_Retry: <span class="token number">60</span>              Master_Log_File: master<span class="token operator">-</span>bin<span class="token number">.000001</span>          Read_Master_Log_Pos: <span class="token number">154</span>               Relay_Log_File: slave<span class="token operator">-</span>relay<span class="token operator">-</span>bin<span class="token number">.000003</span>                Relay_Log_Pos: <span class="token number">321</span>        Relay_Master_Log_File: master<span class="token operator">-</span>bin<span class="token number">.000001</span>             Slave_IO_Running: Yes            Slave_SQL_Running: Yes              Replicate_Do_DB:          Replicate_Ignore_DB:           Replicate_Do_Table:       Replicate_Ignore_Table:      Replicate_Wild_Do_Table:  Replicate_Wild_Ignore_Table:                   Last_Errno: <span class="token number">0</span>                   Last_Error:                 Skip_Counter: <span class="token number">0</span>          Exec_Master_Log_Pos: <span class="token number">154</span>              Relay_Log_Space: <span class="token number">528</span>              Until_Condition: None               Until_Log_File:                Until_Log_Pos: <span class="token number">0</span>           Master_SSL_Allowed: <span class="token keyword">No</span>           Master_SSL_CA_File:           Master_SSL_CA_Path:              Master_SSL_Cert:            Master_SSL_Cipher:               Master_SSL_Key:        Seconds_Behind_Master: <span class="token number">0</span>Master_SSL_Verify_Server_Cert: <span class="token keyword">No</span>                Last_IO_Errno: <span class="token number">0</span>                Last_IO_Error:               Last_SQL_Errno: <span class="token number">0</span>               Last_SQL_Error:  Replicate_Ignore_Server_Ids:             Master_Server_Id: <span class="token number">1</span>                  Master_UUID: <span class="token number">8ffb067d</span><span class="token operator">-</span><span class="token number">b7bb</span><span class="token operator">-</span><span class="token number">11eb</span><span class="token operator">-</span><span class="token number">8ced</span><span class="token operator">-</span><span class="token number">000c291e5989</span>             Master_Info_File: <span class="token operator">/</span>usr<span class="token operator">/</span><span class="token keyword">local</span><span class="token operator">/</span>mysql<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>master<span class="token punctuation">.</span>info                    SQL_Delay: <span class="token number">0</span>          SQL_Remaining_Delay: <span class="token boolean">NULL</span>      Slave_SQL_Running_State: Slave has <span class="token keyword">read</span> <span class="token keyword">all</span> relay log<span class="token punctuation">;</span> waiting <span class="token keyword">for</span> more updates           Master_Retry_Count: <span class="token number">86400</span>                  Master_Bind:      Last_IO_Error_Timestamp:     Last_SQL_Error_Timestamp:               Master_SSL_Crl:           Master_SSL_Crlpath:           Retrieved_Gtid_Set:            Executed_Gtid_Set:                Auto_Position: <span class="token number">0</span>         Replicate_Rewrite_DB:                 Channel_Name:           Master_TLS_Version:<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;主从同步复制有以下几种方式：&quot;&gt;&lt;a href=&quot;#主从同步复制有以下几种方式：&quot; class=&quot;headerlink&quot; title=&quot;主从同步复制有以下几种方式：&quot;&gt;&lt;/a&gt;主从同步复制有以下几种方式：&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;同步复制，ma
      
    
    </summary>
    
      <category term="MYSQL" scheme="http://www.ldclass.club/categories/MYSQL/"/>
    
    
      <category term="MYSQL" scheme="http://www.ldclass.club/tags/MYSQL/"/>
    
  </entry>
  
  <entry>
    <title>Springboot静态资源加载</title>
    <link href="http://www.ldclass.club/2021/06/26/springboot-jing-tai-zi-yuan-jia-zai/"/>
    <id>http://www.ldclass.club/2021/06/26/springboot-jing-tai-zi-yuan-jia-zai/</id>
    <published>2021-06-25T22:53:10.000Z</published>
    <updated>2021-06-25T14:57:28.773Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>静态资源加载顺序</p><pre class="line-numbers language-yml"><code class="language-yml">classpath:/META-INF/resources/, classpath:/resources/, classpath:/static/, classpath:/public/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>spring boot配置文件中 <code>spring.mvc.static-path-pattern</code> 配置项</p><pre class="line-numbers language-yml"><code class="language-yml">spring:    mvc:        static-path-pattern: /static/**<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>项目中<code>application.yml</code>配置文件中，存在如上配置项时，访问静态资源文件要加<code>static</code>才行，当把这个配置项除掉时，不用加static作为前缀亦可进行正常访问。</p></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;p&gt;静态资源加载顺序&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-yml&quot;&gt;&lt;code class=&quot;language-yml&quot;&gt;classpath:/META-INF/resources/, classpath:/resour
      
    
    </summary>
    
      <category term="SpringBoot" scheme="http://www.ldclass.club/categories/SpringBoot/"/>
    
    
      <category term="SpringBoot" scheme="http://www.ldclass.club/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>数据库定时备份</title>
    <link href="http://www.ldclass.club/2021/06/25/shu-ju-ku-ding-shi-bei-fen/"/>
    <id>http://www.ldclass.club/2021/06/25/shu-ju-ku-ding-shi-bei-fen/</id>
    <published>2021-06-24T18:06:45.000Z</published>
    <updated>2021-06-24T10:24:15.079Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Windows</p></blockquote><ul><li>mysql</li></ul><pre class="line-numbers language-bat"><code class="language-bat">rem ******MySQL backup start********@echo offset "Ymd=%DATE:~,4%%DATE:~5,2%%DATE:~8,2%%time:~0,2%%time:~3,2%""C:\mysql5.7\bin\mysqldump" -uroot -pRoot@123 -h127.0.0.1 --databases plat > C:\mysqldata\plat_%Ymd%.sql@echo onrem ******MySQL backup end********<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>oracle</li></ul><pre class="line-numbers language-bat"><code class="language-bat">rem ******MySQL backup start********@echo offset adir=%DATE:~,4%%DATE:~5,2%%DATE:~8,2%%time:~0,2%%time:~3,2%exp rjm/rjm@orcl owner=rjm file=C:\oracledata\rjm_%adir%.dmp log='C:\oracledata\rjm_%adir%.log'@echo onrem ******MySQL backup end********<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>配置定时任务</p><ul><li>首先是创建一个任务，在附件–&gt;系统工具中可以看到任务计划程序： </li></ul><img src="/2021/06/25/shu-ju-ku-ding-shi-bei-fen/1.png" title="配置定时任务"><ul><li>点击打开后可以看到主界面： </li></ul><img src="/2021/06/25/shu-ju-ku-ding-shi-bei-fen/2.png" title="配置定时任务"><ul><li>点击右侧的创建基本任务，随便输入一个名称后点击【下一步】： </li></ul><img src="/2021/06/25/shu-ju-ku-ding-shi-bei-fen/3.png" title="配置定时任务"><ul><li>然后是选择执行频率，我这里选择每天，然后点击【下一步】： </li></ul><img src="/2021/06/25/shu-ju-ku-ding-shi-bei-fen/4.png" title="配置定时任务"><ul><li>接着是设置开始时间和具体几点执行，我这里选择每天18点执行，从今天开始，然后点击【下一步】： </li></ul><img src="/2021/06/25/shu-ju-ku-ding-shi-bei-fen/5.png" title="配置定时任务"><ul><li>由于我们执行的是批处理脚本，所以直接选择【启动程序】即可，然后点击【下一步】： </li></ul><img src="/2021/06/25/shu-ju-ku-ding-shi-bei-fen/6.png" title="配置定时任务"><ul><li>接着就是选择我们脚本的位置，如果有参数的话填上参数，点击【下一步】： </li></ul><img src="/2021/06/25/shu-ju-ku-ding-shi-bei-fen/7.png" title="配置定时任务"><ul><li>最后确认一下配置无误，点击【完成】： </li></ul><img src="/2021/06/25/shu-ju-ku-ding-shi-bei-fen/8.png" title="配置定时任务"><ul><li>由于我们勾选了当点击【完成】时打开任务属性对话框，所以接下来我们看到的就是任务属性对话框，我们在这里还要再做一些设置：</li></ul><img src="/2021/06/25/shu-ju-ku-ding-shi-bei-fen/9.png" title="配置定时任务"><ul><li>如上图所示，这个配置非常重要，即选中“不管用户是否登录都要运行”和“使用最高权限运行”，注意这一点尤为重要，如果不选中这两项那么批处理脚本就无法自动执行完毕。最后点击【确定】并输入密码即可： </li></ul><img src="/2021/06/25/shu-ju-ku-ding-shi-bei-fen/10.png" title="配置定时任务"><ul><li>最后在首页就可以看到刚才添加的任务了： </li></ul><ul><li>双击该任务即可进入任务详情页面，也就能看到上次和下次的执行时间以及上次的执行结果： </li></ul><img src="/2021/06/25/shu-ju-ku-ding-shi-bei-fen/12.png" title="配置定时任务"></li></ul><blockquote><p>Linux</p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;Windows&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;mysql&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;line-numbers language-bat&quot;&gt;&lt;code class=&quot;language-bat&quot;&gt;rem **
      
    
    </summary>
    
      <category term="数据库" scheme="http://www.ldclass.club/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="数据库" scheme="http://www.ldclass.club/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
</feed>
