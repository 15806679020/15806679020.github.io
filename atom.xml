<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>陌生的小窝</title>
  
  <subtitle>学无止境</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.ldclass.club/"/>
  <updated>2021-08-15T14:36:51.944Z</updated>
  <id>http://www.ldclass.club/</id>
  
  <author>
    <name>Dong Liu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>项目整合spring邮箱starter</title>
    <link href="http://www.ldclass.club/2021/08/16/xiang-mu-zheng-he-spring-you-xiang-starter/"/>
    <id>http://www.ldclass.club/2021/08/16/xiang-mu-zheng-he-spring-you-xiang-starter/</id>
    <published>2021-08-15T22:36:51.000Z</published>
    <updated>2021-08-15T14:36:51.944Z</updated>
    
    <content type="html"><![CDATA[<script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script&gt;
        document.querySelectorAll(&#39;.github-emoji&#39;)
          .forEach(el =&gt; {
            if (!el.dataset.src) { return; }
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>docker部署redis</title>
    <link href="http://www.ldclass.club/2021/08/16/docker-bu-shu-redis/"/>
    <id>http://www.ldclass.club/2021/08/16/docker-bu-shu-redis/</id>
    <published>2021-08-15T22:35:57.000Z</published>
    <updated>2021-08-15T15:31:48.556Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>docker部署redis 并配置密码</p><ul><li>如果访问不了，记得看防火墙/网络安全组端口是否开放</li><li>源码安装redis的话默认不能远程访问</li><li>docker安装redis可以远程访问</li></ul></li><li><p><code>docker run -itd --name ldclass-redis -p 8000:6379 redis --requirepass 123456</code></p></li></ul><pre class="line-numbers language-shell"><code class="language-shell">-i 以交互模式运行容器，通常与 -t 同时使用；-t 为容器重新分配一个伪输入终端，通常与 -i 同时使用；-d 后台运行容器，并返回容器ID；redis --requirepass 配置密码-p 8000:6379 宿主机端口，用于外部访问:docker容器内端口<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;p&gt;docker部署redis 并配置密码&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果访问不了，记得看防火墙/网络安全组端口是否开放&lt;/li&gt;
&lt;li&gt;源码安装redis的话默认不能远程访问&lt;/li&gt;
&lt;li&gt;docker安装redis可以远程访问&lt;/li&gt;
&lt;/ul&gt;

      
    
    </summary>
    
      <category term="1024" scheme="http://www.ldclass.club/categories/1024/"/>
    
    
      <category term="1024" scheme="http://www.ldclass.club/tags/1024/"/>
    
      <category term="Redis" scheme="http://www.ldclass.club/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>Linux安装docker</title>
    <link href="http://www.ldclass.club/2021/08/16/linux-an-zhuang-docker/"/>
    <id>http://www.ldclass.club/2021/08/16/linux-an-zhuang-docker/</id>
    <published>2021-08-15T22:35:37.000Z</published>
    <updated>2021-08-15T15:29:14.929Z</updated>
    
    <content type="html"><![CDATA[<ul><li>Linux环境下安装Docker</li></ul><pre class="line-numbers language-shell"><code class="language-shell">#依次运行以下命令添加yum源yum updateyum install epel-release -yyum clean allyum list#安装并运行Docker。yum install docker-io -ysystemctl start docker#检查安装结果。docker info#启动使用Dockersystemctl start docker     #运行Docker守护进程systemctl stop docker      #停止Docker守护进程systemctl restart docker   #重启Docker守护进程#修改镜像仓库vim /etc/docker/daemon.json#改为下面内容(自己的镜像地址，阿里云有)，然后重启docker{"debug":true,"experimental":true,"registry-mirrors":["https://pb5bklzr.mirror.aliyuncs.com","https://hub-mirror.c.163.com","https://docker.mirrors.ustc.edu.cn"]}#查看信息docker info<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;Linux环境下安装Docker&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;line-numbers language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;#依次运行以下命令添加yum源
yum update
yum in
      
    
    </summary>
    
      <category term="1024" scheme="http://www.ldclass.club/categories/1024/"/>
    
    
      <category term="Docker" scheme="http://www.ldclass.club/tags/Docker/"/>
    
      <category term="1024" scheme="http://www.ldclass.club/tags/1024/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot集成Captcha验证码</title>
    <link href="http://www.ldclass.club/2021/08/16/springboot-ji-cheng-captcha-yan-zheng-ma/"/>
    <id>http://www.ldclass.club/2021/08/16/springboot-ji-cheng-captcha-yan-zheng-ma/</id>
    <published>2021-08-15T22:26:48.000Z</published>
    <updated>2021-08-15T15:43:11.810Z</updated>
    
    <content type="html"><![CDATA[<ul><li><h4 id="谷歌开源kaptcha图形验证码开发"><a href="#谷歌开源kaptcha图形验证码开发" class="headerlink" title="谷歌开源kaptcha图形验证码开发"></a>谷歌开源kaptcha图形验证码开发</h4><ul><li><p>Kaptcha 框架介绍 谷歌开源的一个可高度配置的实用验证码生成工具</p><ul><li>验证码的字体/大小/颜色</li><li>验证码内容的范围(数字，字母，中文汉字！)</li><li>验证码图片的大小，边框，边框粗细，边框颜色</li><li>验证码的干扰线</li><li>验证码的样式(鱼眼样式、3D、普通模糊)</li></ul></li><li><p>聚合工程依赖添加（使用国内baomidou二次封装的springboot整合starter）</p><pre class="line-numbers language-xml"><code class="language-xml">  <span class="token comment" spellcheck="true">&lt;!--kaptcha依赖包--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.baomidou<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>kaptcha-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.1.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>子服务添加依赖</p><pre class="line-numbers language-xml"><code class="language-xml">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.baomidou<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>kaptcha-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>开发配置</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>config<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>code<span class="token punctuation">.</span>kaptcha<span class="token punctuation">.</span>Constants<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>code<span class="token punctuation">.</span>kaptcha<span class="token punctuation">.</span>impl<span class="token punctuation">.</span>DefaultKaptcha<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>code<span class="token punctuation">.</span>kaptcha<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Config<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Qualifier<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Bean<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Configuration<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Properties<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author LiuDong * @version 1.0 * @description 验证码配置类 * @date 2021年08月15日 22:04 */</span><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CaptchaConfig</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token annotation punctuation">@Qualifier</span><span class="token punctuation">(</span><span class="token string">"captchaProducer"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> DefaultKaptcha <span class="token function">defaultKaptcha</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        DefaultKaptcha defaultKaptcha <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultKaptcha</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Properties properties <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//        properties.setProperty(Constants.KAPTCHA_BORDER, "yes");</span><span class="token comment" spellcheck="true">//        properties.setProperty(Constants.KAPTCHA_BORDER_COLOR, "220,220,220");</span><span class="token comment" spellcheck="true">//        //properties.setProperty(Constants.KAPTCHA_TEXTPRODUCER_FONT_COLOR, "38,29,12");</span><span class="token comment" spellcheck="true">//        properties.setProperty(Constants.KAPTCHA_IMAGE_WIDTH, "147");</span><span class="token comment" spellcheck="true">//        properties.setProperty(Constants.KAPTCHA_IMAGE_HEIGHT, "34");</span><span class="token comment" spellcheck="true">//        properties.setProperty(Constants.KAPTCHA_TEXTPRODUCER_FONT_SIZE, "25");</span><span class="token comment" spellcheck="true">//        //properties.setProperty(Constants.KAPTCHA_SESSION_KEY, "code");</span>        <span class="token comment" spellcheck="true">//验证码个数</span>        properties<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span>Constants<span class="token punctuation">.</span>KAPTCHA_TEXTPRODUCER_CHAR_LENGTH<span class="token punctuation">,</span> <span class="token string">"4"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//        properties.setProperty(Constants.KAPTCHA_TEXTPRODUCER_FONT_NAMES, "Courier");</span>        <span class="token comment" spellcheck="true">//字体间隔</span>        properties<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span>Constants<span class="token punctuation">.</span>KAPTCHA_TEXTPRODUCER_CHAR_SPACE<span class="token punctuation">,</span> <span class="token string">"8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//干扰线颜色</span><span class="token comment" spellcheck="true">//        properties.setProperty(Constants.KAPTCHA_NOISE_COLOR, "white");</span>        <span class="token comment" spellcheck="true">//干扰实现类</span>        properties<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span>Constants<span class="token punctuation">.</span>KAPTCHA_NOISE_IMPL<span class="token punctuation">,</span> <span class="token string">"com.google.code.kaptcha.impl.NoNoise"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//图片样式</span>        properties<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span>Constants<span class="token punctuation">.</span>KAPTCHA_OBSCURIFICATOR_IMPL<span class="token punctuation">,</span> <span class="token string">"com.google.code.kaptcha.impl.ShadowGimpy"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//文字来源</span>        properties<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span>Constants<span class="token punctuation">.</span>KAPTCHA_TEXTPRODUCER_CHAR_STRING<span class="token punctuation">,</span> <span class="token string">"0123456789"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Config config <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Config</span><span class="token punctuation">(</span>properties<span class="token punctuation">)</span><span class="token punctuation">;</span>        defaultKaptcha<span class="token punctuation">.</span><span class="token function">setConfig</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> defaultKaptcha<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><h4 id="用户微服务开发图形验证码加入缓存"><a href="#用户微服务开发图形验证码加入缓存" class="headerlink" title="用户微服务开发图形验证码加入缓存"></a>用户微服务开发图形验证码加入缓存</h4><ul><li>redis做隔离, 多集群：核心集群和非核心集群，高并发集群和非高并发集群<ul><li>资源隔离</li><li>数据保护</li><li>提高性能</li><li>key规范：业务划分，冒号隔离<ul><li>user-service:captcha:MD5加密后的（ip+user-agent）</li><li>长度不能过长</li><li>浏览器指纹:ip+user-agent</li></ul></li></ul></li><li>工具集</li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>utils<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>net<span class="token punctuation">.</span>InetAddress<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>net<span class="token punctuation">.</span>UnknownHostException<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>security<span class="token punctuation">.</span>MessageDigest<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author LiuDong * @version 1.0 * @description * @date 2021年08月15日 22:58 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CommonUtil</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 获取ip     * @author LiuDong     * @date 2021/8/15 22:59     * @param request     * @return java.lang.String     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> String <span class="token function">getIpAddr</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">)</span> <span class="token punctuation">{</span>        String ipAddress <span class="token operator">=</span> null<span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//在nginx配置头信息，透传客户端IP</span>            ipAddress <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token string">"x-forwarded-for"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>ipAddress <span class="token operator">==</span> null <span class="token operator">||</span> ipAddress<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token string">"unknown"</span><span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span>ipAddress<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                ipAddress <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token string">"Proxy-Client-IP"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>ipAddress <span class="token operator">==</span> null <span class="token operator">||</span> ipAddress<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token string">"unknown"</span><span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span>ipAddress<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                ipAddress <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token string">"WL-Proxy-Client-IP"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>ipAddress <span class="token operator">==</span> null <span class="token operator">||</span> ipAddress<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token string">"unknown"</span><span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span>ipAddress<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                ipAddress <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getRemoteAddr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>ipAddress<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"127.0.0.1"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token comment" spellcheck="true">// 根据网卡取本机配置的IP</span>                    InetAddress inet <span class="token operator">=</span> null<span class="token punctuation">;</span>                    <span class="token keyword">try</span> <span class="token punctuation">{</span>                        inet <span class="token operator">=</span> InetAddress<span class="token punctuation">.</span><span class="token function">getLocalHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">UnknownHostException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    ipAddress <span class="token operator">=</span> inet<span class="token punctuation">.</span><span class="token function">getHostAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">// 对于通过多个代理的情况，第一个IP为客户端真实IP,多个IP按照','分割</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>ipAddress <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> ipAddress<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">15</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// "***.***.***.***".length()</span>                <span class="token comment" spellcheck="true">// = 15</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>ipAddress<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    ipAddress <span class="token operator">=</span> ipAddress<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> ipAddress<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            ipAddress<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> ipAddress<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><pre><code>  /**   * MD5加密   * @author LiuDong   * @date 2021/8/15 22:59   * @param data   * @return java.lang.String   */  public static String MD5(String data)  {      try {          java.security.MessageDigest md = MessageDigest.getInstance("MD5");          byte[] array = md.digest(data.getBytes("UTF-8"));          StringBuilder sb = new StringBuilder();          for (byte item : array) {              sb.append(Integer.toHexString((item &amp; 0xFF) | 0x100).substring(1, 3));          }          return sb.toString().toUpperCase();      } catch (Exception exception) {      }      return null;  }</code></pre><p>  }</p><pre><code>  - 用户微服务配置Redis  ```yml  spring:    application:      name: xdclass-user-service    redis:      host: 112.74.55.160      password: 123456      port: 8000</code></pre><ul><li><p>common聚合工程依赖配置</p><pre class="line-numbers language-xml"><code class="language-xml">     <span class="token comment" spellcheck="true">&lt;!--redis客户端--></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-data-redis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">></span></span>                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>io.lettuce<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>lettuce-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>redis.clients<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>jedis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>验证码接口开发</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>controller<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>CommonUtil<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>code<span class="token punctuation">.</span>kaptcha<span class="token punctuation">.</span>Producer<span class="token punctuation">;</span><span class="token keyword">import</span> io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span>Api<span class="token punctuation">;</span><span class="token keyword">import</span> io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span>ApiOperation<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>Slf4j<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>core<span class="token punctuation">.</span>StringRedisTemplate<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RequestMapping<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RequestMethod<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RestController<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>imageio<span class="token punctuation">.</span>ImageIO<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletOutputStream<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>image<span class="token punctuation">.</span>BufferedImage<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>TimeUnit<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*** @author LiuDong* @version 1.0* @description 通知* @date 2021年08月15日 22:10*/</span><span class="token annotation punctuation">@Api</span><span class="token punctuation">(</span>tags <span class="token operator">=</span> <span class="token string">"通知模块"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"api/notify/v1"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Slf4j</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NotifyController</span> <span class="token punctuation">{</span>  <span class="token annotation punctuation">@Autowired</span>  <span class="token keyword">private</span> Producer captchaProducer<span class="token punctuation">;</span>  <span class="token annotation punctuation">@Autowired</span>  <span class="token keyword">private</span> StringRedisTemplate redisTemplate<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/**   * 图形验证码有效期   */</span>  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> CAPTCHA_CODE_EXPIRED <span class="token operator">=</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">30</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/**   * 获取图形验证码   * 输出图片流   *   * @param request   * @param response   * @author LiuDong   * @date 2021/8/15 22:14   */</span>  <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span><span class="token string">"获取图形验证码"</span><span class="token punctuation">)</span>  <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"captcha"</span><span class="token punctuation">,</span> method <span class="token operator">=</span> RequestMethod<span class="token punctuation">.</span>GET<span class="token punctuation">)</span>  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getCaptcha</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">/*String captchaText = captchaProducer.createText();      log.info("图形验证码：{}", captchaText);      //存储到redis      //TimeUnit 时间枚举类      redisTemplate.opsForValue().set(getCaptchaKey(request),captchaText,CAPTCHA_CODE_EXPIRED, TimeUnit.MILLISECONDS);      BufferedImage bufferedImage = captchaProducer.createImage(captchaText);      try (ServletOutputStream outputStream = response.getOutputStream()) {          ImageIO.write(bufferedImage, "jpg", outputStream);      } catch (IOException e) {          log.error("获取图形验证码异常：{}", e);      }*/</span>      String cacheKey <span class="token operator">=</span> <span class="token function">getCaptchaKey</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>      String capText <span class="token operator">=</span> captchaProducer<span class="token punctuation">.</span><span class="token function">createText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//存储</span>      redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>cacheKey<span class="token punctuation">,</span> capText<span class="token punctuation">,</span> CAPTCHA_CODE_EXPIRED<span class="token punctuation">,</span> TimeUnit<span class="token punctuation">.</span>MILLISECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span>      BufferedImage bufferedImage <span class="token operator">=</span> captchaProducer<span class="token punctuation">.</span><span class="token function">createImage</span><span class="token punctuation">(</span>capText<span class="token punctuation">)</span><span class="token punctuation">;</span>      ServletOutputStream outputStream <span class="token operator">=</span> null<span class="token punctuation">;</span>      <span class="token keyword">try</span> <span class="token punctuation">{</span>          response<span class="token punctuation">.</span><span class="token function">setDateHeader</span><span class="token punctuation">(</span><span class="token string">"Expires"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Cache-Control"</span><span class="token punctuation">,</span> <span class="token string">"no-store, no-cache, must-revalidate"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          response<span class="token punctuation">.</span><span class="token function">addHeader</span><span class="token punctuation">(</span><span class="token string">"Cache-Control"</span><span class="token punctuation">,</span> <span class="token string">"create_date-check=0, pre-check=0"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Pragma"</span><span class="token punctuation">,</span> <span class="token string">"no-cache"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          outputStream <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          ImageIO<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>bufferedImage<span class="token punctuation">,</span> <span class="token string">"jpg"</span><span class="token punctuation">,</span> outputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>          outputStream<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          outputStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>          log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"获取验证码失败:{}"</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">/**   * 获取缓存key   *   * @param request   * @return java.lang.String   * @author LiuDong   * @date 2021/8/15 23:03   */</span>  <span class="token keyword">private</span> String <span class="token function">getCaptchaKey</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">)</span> <span class="token punctuation">{</span>      String ip <span class="token operator">=</span> CommonUtil<span class="token punctuation">.</span><span class="token function">getIpAddr</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>      String userAgent <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token string">"user-Agent"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      String key <span class="token operator">=</span> <span class="token string">"user-service:captcha:"</span> <span class="token operator">+</span> CommonUtil<span class="token punctuation">.</span><span class="token function">MD5</span><span class="token punctuation">(</span>ip <span class="token operator">+</span> userAgent<span class="token punctuation">)</span><span class="token punctuation">;</span>      log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"ip:{}"</span><span class="token punctuation">,</span> ip<span class="token punctuation">)</span><span class="token punctuation">;</span>      log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"userAgent:{}"</span><span class="token punctuation">,</span> userAgent<span class="token punctuation">)</span><span class="token punctuation">;</span>      log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"key:{}"</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> key<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;谷歌开源kaptcha图形验证码开发&quot;&gt;&lt;a href=&quot;#谷歌开源kaptcha图形验证码开发&quot; class=&quot;headerlink&quot; title=&quot;谷歌开源kaptcha图形验证码开发&quot;&gt;&lt;/a&gt;谷歌开源kaptcha图形验证码开发&lt;/h4&gt;
      
    
    </summary>
    
      <category term="1024" scheme="http://www.ldclass.club/categories/1024/"/>
    
    
      <category term="1024" scheme="http://www.ldclass.club/tags/1024/"/>
    
      <category term="Captcha" scheme="http://www.ldclass.club/tags/Captcha/"/>
    
  </entry>
  
  <entry>
    <title>集成单元测试</title>
    <link href="http://www.ldclass.club/2021/08/16/ji-cheng-dan-yuan-ce-shi/"/>
    <id>http://www.ldclass.club/2021/08/16/ji-cheng-dan-yuan-ce-shi/</id>
    <published>2021-08-15T21:23:13.000Z</published>
    <updated>2021-08-15T13:27:47.517Z</updated>
    
    <content type="html"><![CDATA[<ul><li>需求分析-&gt;设计-&gt;开发-&gt;测试-&gt;上线<ul><li>单元测试:  完成最小的软件设计单元的验证工作，目标是确保模块被正确的编码</li></ul></li></ul><ul><li>Spring Boot Test 是在Spring Test之上的再次封装,  使用@SpringBootTest后，Spring将加载所有被管理的bean，等同于启动了整个服务</li></ul><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>biz<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>UserApplication<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>model<span class="token punctuation">.</span>AddressDO<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>service<span class="token punctuation">.</span>AddressService<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>Slf4j<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>Assert<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>Test<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>runner<span class="token punctuation">.</span>RunWith<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>SpringBootTest<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>junit4<span class="token punctuation">.</span>SpringRunner<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author LiuDong * @version 1.0 * @description * @date 2021年08月15日 21:16 */</span><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span>SpringRunner<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@SpringBootTest</span><span class="token punctuation">(</span>classes <span class="token operator">=</span> UserApplication<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Slf4j</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AddressTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> AddressService addressService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testAddressDetail</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        AddressDO addressDO <span class="token operator">=</span> addressService<span class="token punctuation">.</span><span class="token function">detail</span><span class="token punctuation">(</span>1L<span class="token punctuation">)</span><span class="token punctuation">;</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>addressDO<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//断言</span>        Assert<span class="token punctuation">.</span><span class="token function">assertNotNull</span><span class="token punctuation">(</span>addressDO<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;需求分析-&amp;gt;设计-&amp;gt;开发-&amp;gt;测试-&amp;gt;上线&lt;ul&gt;
&lt;li&gt;单元测试:  完成最小的软件设计单元的验证工作，目标是确保模块被正确的编码&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Spring Boot Test 是在S
      
    
    </summary>
    
      <category term="1024" scheme="http://www.ldclass.club/categories/1024/"/>
    
    
      <category term="1024" scheme="http://www.ldclass.club/tags/1024/"/>
    
      <category term="SpringBootTest" scheme="http://www.ldclass.club/tags/SpringBootTest/"/>
    
  </entry>
  
  <entry>
    <title>自定义全局异常</title>
    <link href="http://www.ldclass.club/2021/08/16/zi-ding-yi-quan-ju-yi-chang/"/>
    <id>http://www.ldclass.club/2021/08/16/zi-ding-yi-quan-ju-yi-chang/</id>
    <published>2021-08-15T21:23:02.000Z</published>
    <updated>2021-08-15T13:27:46.407Z</updated>
    
    <content type="html"><![CDATA[<ul><li>自定义全局异常</li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>exception<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>enums<span class="token punctuation">.</span>BizCodeEnum<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>Data<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author LiuDong * @version 1.0 * @date 2021年08月15日 20:59 */</span><span class="token annotation punctuation">@Data</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BizException</span> <span class="token keyword">extends</span> <span class="token class-name">RuntimeException</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> code<span class="token punctuation">;</span>    <span class="token keyword">private</span> String msg<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token function">BizException</span><span class="token punctuation">(</span>Integer code<span class="token punctuation">,</span> String message<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>code <span class="token operator">=</span> code<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>msg <span class="token operator">=</span> message<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token function">BizException</span><span class="token punctuation">(</span>BizCodeEnum bizCodeEnum<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">(</span>bizCodeEnum<span class="token punctuation">.</span><span class="token function">getMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>code <span class="token operator">=</span> bizCodeEnum<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>msg <span class="token operator">=</span> bizCodeEnum<span class="token punctuation">.</span><span class="token function">getMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>自定义异常处理器</li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>exception<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>JsonData<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>Slf4j<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>ControllerAdvice<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>ExceptionHandler<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>ResponseBody<span class="token punctuation">;</span><span class="token keyword">import</span> springfox<span class="token punctuation">.</span>documentation<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>web<span class="token punctuation">.</span>json<span class="token punctuation">.</span>Json<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author LiuDong * @version 1.0 * @date 2021年08月15日 21:01 */</span><span class="token annotation punctuation">@ControllerAdvice</span><span class="token annotation punctuation">@Slf4j</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CustomExceptionHandler</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@ExceptionHandler</span><span class="token punctuation">(</span>value <span class="token operator">=</span> Exception<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ResponseBody</span>    <span class="token keyword">public</span> JsonData <span class="token function">handler</span><span class="token punctuation">(</span>Exception e<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//是不是自定义异常</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>e <span class="token keyword">instanceof</span> <span class="token class-name">BizException</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            BizException bizException <span class="token operator">=</span> <span class="token punctuation">(</span>BizException<span class="token punctuation">)</span> e<span class="token punctuation">;</span>            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"[业务异常{}]"</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> JsonData<span class="token punctuation">.</span><span class="token function">buildCodeAndMsg</span><span class="token punctuation">(</span>bizException<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> bizException<span class="token punctuation">.</span><span class="token function">getMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"[系统异常{}]"</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> JsonData<span class="token punctuation">.</span><span class="token function">buildError</span><span class="token punctuation">(</span><span class="token string">"全局异常，未知错误"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;自定义全局异常&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;line-numbers language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;package&lt;/span&gt; c
      
    
    </summary>
    
      <category term="1024" scheme="http://www.ldclass.club/categories/1024/"/>
    
    
      <category term="1024" scheme="http://www.ldclass.club/tags/1024/"/>
    
      <category term="BizException" scheme="http://www.ldclass.club/tags/BizException/"/>
    
  </entry>
  
  <entry>
    <title>统一接口响应</title>
    <link href="http://www.ldclass.club/2021/08/16/tong-yi-jie-kou-xiang-ying/"/>
    <id>http://www.ldclass.club/2021/08/16/tong-yi-jie-kou-xiang-ying/</id>
    <published>2021-08-15T21:22:51.000Z</published>
    <updated>2021-08-15T13:27:44.307Z</updated>
    
    <content type="html"><![CDATA[<ul><li>统一业务状态码 BizCodeEnum</li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>enums<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>Getter<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * 枚举类，统一状态码和错误信息 * 前三位是服务，后三位是接口 * @author LiuDong * @version 1.0 * @date 2021年08月15日 20:47 */</span><span class="token keyword">public</span> <span class="token keyword">enum</span> BizCodeEnum <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 通用操作码     */</span>    <span class="token function">OPS_REPEAT</span><span class="token punctuation">(</span><span class="token number">110001</span><span class="token punctuation">,</span><span class="token string">"重复操作"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">/**     *验证码     */</span>    <span class="token function">CODE_TO_ERROR</span><span class="token punctuation">(</span><span class="token number">240001</span><span class="token punctuation">,</span><span class="token string">"接收号码不合规"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">CODE_LIMITED</span><span class="token punctuation">(</span><span class="token number">240002</span><span class="token punctuation">,</span><span class="token string">"验证码发送过快"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">CODE_ERROR</span><span class="token punctuation">(</span><span class="token number">240003</span><span class="token punctuation">,</span><span class="token string">"验证码错误"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">CODE_CAPTCHA</span><span class="token punctuation">(</span><span class="token number">240101</span><span class="token punctuation">,</span><span class="token string">"图形验证码错误"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">/**     * 账号     */</span>    <span class="token function">ACCOUNT_REPEAT</span><span class="token punctuation">(</span><span class="token number">250001</span><span class="token punctuation">,</span><span class="token string">"账号已经存在"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">ACCOUNT_UNREGISTER</span><span class="token punctuation">(</span><span class="token number">250002</span><span class="token punctuation">,</span><span class="token string">"账号不存在"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">ACCOUNT_PWD_ERROR</span><span class="token punctuation">(</span><span class="token number">250003</span><span class="token punctuation">,</span><span class="token string">"账号或者密码错误"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Getter</span>    <span class="token keyword">private</span> String msg<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Getter</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> code<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token function">BizCodeEnum</span><span class="token punctuation">(</span><span class="token keyword">int</span> code<span class="token punctuation">,</span>String msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>msg <span class="token operator">=</span> msg<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>code <span class="token operator">=</span> code<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>接口统一协议 JsonData工具类</li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>utils<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>enums<span class="token punctuation">.</span>BizCodeEnum<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>AllArgsConstructor<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>Data<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>NoArgsConstructor<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author LiuDong * @version 1.0 * @date 2021年08月15日 20:51 */</span><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@AllArgsConstructor</span><span class="token annotation punctuation">@NoArgsConstructor</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JsonData</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 状态码 0 表示成功，1表示处理中，-1表示失败     */</span>    <span class="token keyword">private</span> Integer code<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 数据     */</span>    <span class="token keyword">private</span> Object data<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 描述     */</span>    <span class="token keyword">private</span> String msg<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 成功，传入数据     *     * @return     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> JsonData <span class="token function">buildSuccess</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">JsonData</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> null<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 成功，传入数据     *     * @param data     * @return     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> JsonData <span class="token function">buildSuccess</span><span class="token punctuation">(</span>Object data<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">JsonData</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> data<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 失败，传入描述信息     *     * @param msg     * @return     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> JsonData <span class="token function">buildError</span><span class="token punctuation">(</span>String msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">JsonData</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> null<span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 自定义状态码和错误信息     *     * @param code     * @param msg     * @return     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> JsonData <span class="token function">buildCodeAndMsg</span><span class="token punctuation">(</span><span class="token keyword">int</span> code<span class="token punctuation">,</span> String msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">JsonData</span><span class="token punctuation">(</span>code<span class="token punctuation">,</span> null<span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 传入枚举，返回信息     *     * @param codeEnum     * @return     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> JsonData <span class="token function">buildResult</span><span class="token punctuation">(</span>BizCodeEnum codeEnum<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> JsonData<span class="token punctuation">.</span><span class="token function">buildCodeAndMsg</span><span class="token punctuation">(</span>codeEnum<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> codeEnum<span class="token punctuation">.</span><span class="token function">getMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;统一业务状态码 BizCodeEnum&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;line-numbers language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;pack
      
    
    </summary>
    
      <category term="1024" scheme="http://www.ldclass.club/categories/1024/"/>
    
    
      <category term="1024" scheme="http://www.ldclass.club/tags/1024/"/>
    
      <category term="BizCodeEnum" scheme="http://www.ldclass.club/tags/BizCodeEnum/"/>
    
  </entry>
  
  <entry>
    <title>swagger3.0新全局配置</title>
    <link href="http://www.ldclass.club/2021/08/15/swagger3-0-xin-quan-ju-pei-zhi/"/>
    <id>http://www.ldclass.club/2021/08/15/swagger3-0-xin-quan-ju-pei-zhi/</id>
    <published>2021-08-14T16:20:59.000Z</published>
    <updated>2021-08-15T13:22:04.539Z</updated>
    
    <content type="html"><![CDATA[<ul><li>访问地址<ul><li><code>http://ip:port/swagger-ui/index.html#/</code></li></ul></li><li>新增全局配置</li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>config<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>Data<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Bean<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpMethod<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Component<span class="token punctuation">;</span><span class="token keyword">import</span> springfox<span class="token punctuation">.</span>documentation<span class="token punctuation">.</span>builders<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> springfox<span class="token punctuation">.</span>documentation<span class="token punctuation">.</span>oas<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span>EnableOpenApi<span class="token punctuation">;</span><span class="token keyword">import</span> springfox<span class="token punctuation">.</span>documentation<span class="token punctuation">.</span>schema<span class="token punctuation">.</span>ScalarType<span class="token punctuation">;</span><span class="token keyword">import</span> springfox<span class="token punctuation">.</span>documentation<span class="token punctuation">.</span>service<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> springfox<span class="token punctuation">.</span>documentation<span class="token punctuation">.</span>spi<span class="token punctuation">.</span>DocumentationType<span class="token punctuation">;</span><span class="token keyword">import</span> springfox<span class="token punctuation">.</span>documentation<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>web<span class="token punctuation">.</span>plugins<span class="token punctuation">.</span>Docket<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>ArrayList<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author LiuDong * @version 1.0 * @date 2021年08月14日 15:48 */</span><span class="token annotation punctuation">@Component</span><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@EnableOpenApi</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SwaggerConfiguration</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 对C端用户的接口文档     *     * @return springfox.documentation.spring.web.plugins.Docket     * @author LiuDong     * @date 2021/8/14 16:05     */</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> Docket <span class="token function">webApiDoc</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//采用3.0的配置</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Docket</span><span class="token punctuation">(</span>DocumentationType<span class="token punctuation">.</span>OAS_30<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">groupName</span><span class="token punctuation">(</span><span class="token string">"用户端接口文档"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">pathMapping</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">//定义是否开启Swagger,false是关闭，可以通过变量控制，线上关闭</span>                <span class="token punctuation">.</span><span class="token function">enable</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">//配置接口文档的元信息</span>                <span class="token punctuation">.</span><span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">// 选择哪些接口作为swagger的doc发布</span>                <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">apis</span><span class="token punctuation">(</span>RequestHandlerSelectors<span class="token punctuation">.</span><span class="token function">basePackage</span><span class="token punctuation">(</span><span class="token string">"club.ldclass"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">//正则匹配请求路径，并分配到当前分组</span>                <span class="token punctuation">.</span><span class="token function">paths</span><span class="token punctuation">(</span>PathSelectors<span class="token punctuation">.</span><span class="token function">ant</span><span class="token punctuation">(</span><span class="token string">"/api/**"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token operator">/</span><span class="token operator">/</span>新版swaggerUI3<span class="token number">.0</span>配置                <span class="token punctuation">.</span><span class="token function">globalRequestParameters</span><span class="token punctuation">(</span><span class="token function">globalRequestParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">globalResponses</span><span class="token punctuation">(</span>HttpMethod<span class="token punctuation">.</span>GET<span class="token punctuation">,</span><span class="token function">getGlobalResponseMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">globalResponses</span><span class="token punctuation">(</span>HttpMethod<span class="token punctuation">.</span>POST<span class="token punctuation">,</span><span class="token function">getGlobalResponseMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>     <span class="token operator">*</span> 对管理端的接口文档     <span class="token operator">*</span>     <span class="token operator">*</span> @<span class="token keyword">return</span> springfox<span class="token punctuation">.</span>documentation<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>web<span class="token punctuation">.</span>plugins<span class="token punctuation">.</span>Docket     <span class="token operator">*</span> <span class="token annotation punctuation">@author</span> LiuDong     <span class="token operator">*</span> <span class="token annotation punctuation">@date</span> <span class="token number">2021</span><span class="token operator">/</span><span class="token number">8</span><span class="token operator">/</span><span class="token number">14</span> <span class="token number">16</span><span class="token operator">:</span><span class="token number">05</span>     <span class="token operator">*</span><span class="token operator">/</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> Docket <span class="token function">adminApiDoc</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//采用3.0的配置</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Docket</span><span class="token punctuation">(</span>DocumentationType<span class="token punctuation">.</span>OAS_30<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">groupName</span><span class="token punctuation">(</span><span class="token string">"管理端接口文档"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">pathMapping</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">//定义是否开启Swagger,false是关闭，可以通过变量控制，线上关闭</span>                <span class="token punctuation">.</span><span class="token function">enable</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">//配置接口文档的元信息</span>                <span class="token punctuation">.</span><span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">// 选择哪些接口作为swagger的doc发布</span>                <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">apis</span><span class="token punctuation">(</span>RequestHandlerSelectors<span class="token punctuation">.</span><span class="token function">basePackage</span><span class="token punctuation">(</span><span class="token string">"club.ldclass"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">//正则匹配请求路径，并分配到当前分组</span>                <span class="token punctuation">.</span><span class="token function">paths</span><span class="token punctuation">(</span>PathSelectors<span class="token punctuation">.</span><span class="token function">ant</span><span class="token punctuation">(</span><span class="token string">"/admin/**"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> ApiInfo <span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ApiInfoBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string">"1024电商平台"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">"微服务接口文档"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">contact</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Contact</span><span class="token punctuation">(</span><span class="token string">"ld"</span><span class="token punctuation">,</span> <span class="token string">"https://blog.ldclass.club"</span><span class="token punctuation">,</span> <span class="token string">"873791226@qq.com"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token string">"v1.0"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>     <span class="token operator">*</span> 配置全局通用参数<span class="token punctuation">,</span> 支持配置多个响应参数     <span class="token operator">*</span>     <span class="token operator">*</span> @<span class="token keyword">return</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token operator">&lt;</span>springfox<span class="token punctuation">.</span>documentation<span class="token punctuation">.</span>service<span class="token punctuation">.</span>RequestParameter<span class="token operator">></span>     <span class="token operator">*</span> <span class="token annotation punctuation">@author</span> LiuDong     <span class="token operator">*</span> <span class="token annotation punctuation">@date</span> <span class="token number">2021</span><span class="token operator">/</span><span class="token number">8</span><span class="token operator">/</span><span class="token number">14</span> <span class="token number">16</span><span class="token operator">:</span><span class="token number">08</span>     <span class="token operator">*</span><span class="token operator">/</span>    <span class="token keyword">private</span> List<span class="token operator">&lt;</span>RequestParameter<span class="token operator">></span> <span class="token function">globalRequestParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        List<span class="token operator">&lt;</span>RequestParameter<span class="token operator">></span> parameters <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        parameters<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RequestParameterBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                 <span class="token comment" spellcheck="true">//增加token</span>                <span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string">"token"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">"登录令牌"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">in</span><span class="token punctuation">(</span>ParameterType<span class="token punctuation">.</span>HEADER<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>q <span class="token operator">-</span><span class="token operator">></span> q<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span>m <span class="token operator">-</span><span class="token operator">></span> m<span class="token punctuation">.</span><span class="token function">scalarModel</span><span class="token punctuation">(</span>ScalarType<span class="token punctuation">.</span>STRING<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">//是否开启</span>                <span class="token punctuation">.</span><span class="token function">required</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> parameters<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 生成通用响应信息     * @author LiuDong     * @date 2021/8/14 16:13     * @return java.util.List&lt;Response>     */</span>    <span class="token keyword">private</span> List<span class="token operator">&lt;</span>Response<span class="token operator">></span> <span class="token function">getGlobalResponseMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        List<span class="token operator">&lt;</span>Response<span class="token operator">></span> responseList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        responseList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ResponseBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">code</span><span class="token punctuation">(</span><span class="token string">"4xx"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">"请求错误，根据code和msg检查"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> responseList<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;访问地址&lt;ul&gt;
&lt;li&gt;&lt;code&gt;http://ip:port/swagger-ui/index.html#/&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;新增全局配置&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;line-numbers la
      
    
    </summary>
    
      <category term="swagger" scheme="http://www.ldclass.club/categories/swagger/"/>
    
    
      <category term="1024" scheme="http://www.ldclass.club/tags/1024/"/>
    
      <category term="swagger" scheme="http://www.ldclass.club/tags/swagger/"/>
    
  </entry>
  
  <entry>
    <title>postman配置多环境操作</title>
    <link href="http://www.ldclass.club/2021/08/14/postman-pei-zhi-duo-huan-jing-cao-zuo/"/>
    <id>http://www.ldclass.club/2021/08/14/postman-pei-zhi-duo-huan-jing-cao-zuo/</id>
    <published>2021-08-14T15:43:40.000Z</published>
    <updated>2021-08-14T08:21:23.030Z</updated>
    
    <content type="html"><![CDATA[<ul><li>Postman配置多环境操作<ul><li>方便未来切换环境<ul><li>开发</li><li>测试</li><li>预发布</li><li>线上</li></ul></li></ul></li></ul><img src="/2021/08/14/postman-pei-zhi-duo-huan-jing-cao-zuo/1.png" title="Postman配置多环境操作"><img src="/2021/08/14/postman-pei-zhi-duo-huan-jing-cao-zuo/2.png" title="Postman配置多环境操作"><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;Postman配置多环境操作&lt;ul&gt;
&lt;li&gt;方便未来切换环境&lt;ul&gt;
&lt;li&gt;开发&lt;/li&gt;
&lt;li&gt;测试&lt;/li&gt;
&lt;li&gt;预发布&lt;/li&gt;
&lt;li&gt;线上&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&quot;/2021/
      
    
    </summary>
    
      <category term="postman" scheme="http://www.ldclass.club/categories/postman/"/>
    
    
      <category term="1024" scheme="http://www.ldclass.club/tags/1024/"/>
    
      <category term="postman" scheme="http://www.ldclass.club/tags/postman/"/>
    
  </entry>
  
  <entry>
    <title>项目编码规范</title>
    <link href="http://www.ldclass.club/2021/08/14/xiang-mu-bian-ma-gui-fan/"/>
    <id>http://www.ldclass.club/2021/08/14/xiang-mu-bian-ma-gui-fan/</id>
    <published>2021-08-14T15:09:46.000Z</published>
    <updated>2021-08-14T09:25:20.042Z</updated>
    
    <content type="html"><![CDATA[<ul><li><h3 id="N方库"><a href="#N方库" class="headerlink" title="N方库"></a>N方库</h3><ul><li>一方库: 本工程内部子项目模块依赖的库(jar 包)。<ul><li>自己项目中的module</li></ul></li><li>二方库: 公司内部发布到中央仓库，可供公司内部其它应用依赖的库(jar包)。<ul><li>公司内部其他项目开发的公共包</li></ul></li><li>三方库: 公司之外的开源库(jar 包)。<ul><li>第三方的包</li></ul></li></ul></li><li><h3 id="POJO实体类"><a href="#POJO实体类" class="headerlink" title="POJO实体类"></a>POJO实体类</h3><ul><li>POJO(Plain Ordinary Java Object): 在手册中，POJO 专指只有 setter / getter / toString的简单类，包括DO/DTO/BO/VO等, 禁止命名成xxxPOJO<ul><li>DO：数据库映射，一一对应</li><li>DTO：服务层之间的通讯</li><li>BO：业务对象</li><li>VO：值对象，业务层和前端交互</li></ul></li></ul></li><li><h3 id="各个层级约束规范"><a href="#各个层级约束规范" class="headerlink" title="各个层级约束规范"></a>各个层级约束规范</h3><ul><li>Service/DAO层方法命名规约<ul><li>获取单个对象的方法用get做前缀。</li><li>获取多个对象的方法用list做前缀，复数形式结尾如:listObjects。 </li><li>获取统计值的方法用count做前缀。</li><li>插入的方法用save/insert做前缀。</li><li>删除的方法用remove/delete做前缀。</li><li>修改的方法用update做前缀。</li></ul></li><li>领域模型命名规约<ul><li>数据对象:xxxDO，xxx即为数据表名。</li><li>一般数据传输对象:xxxDTO，xxx为业务领域相关的名称，项目里面也用VO。 </li><li>展示对象:xxxVO，也就是响应给前端的实体包装类。</li><li>接收前端json对象请求的命名为 XXXRequest</li></ul></li></ul></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;h3 id=&quot;N方库&quot;&gt;&lt;a href=&quot;#N方库&quot; class=&quot;headerlink&quot; title=&quot;N方库&quot;&gt;&lt;/a&gt;N方库&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;一方库: 本工程内部子项目模块依赖的库(jar 包)。&lt;ul&gt;
&lt;li&gt;自己项目中的module&lt;/l
      
    
    </summary>
    
      <category term="项目编码规范" scheme="http://www.ldclass.club/categories/%E9%A1%B9%E7%9B%AE%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83/"/>
    
    
      <category term="项目编码规范" scheme="http://www.ldclass.club/tags/%E9%A1%B9%E7%9B%AE%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83/"/>
    
  </entry>
  
  <entry>
    <title>微服务技术对比和选择</title>
    <link href="http://www.ldclass.club/2021/08/12/wei-fu-wu-ji-zhu-dui-bi-he-xuan-ze/"/>
    <id>http://www.ldclass.club/2021/08/12/wei-fu-wu-ji-zhu-dui-bi-he-xuan-ze/</id>
    <published>2021-08-11T23:15:51.000Z</published>
    <updated>2021-08-11T15:23:36.309Z</updated>
    
    <content type="html"><![CDATA[<ul><li><h3 id="SpringCloud"><a href="#SpringCloud" class="headerlink" title="SpringCloud"></a>SpringCloud</h3></li></ul><pre><code>全家桶+轻松嵌入第三方组件(Netflix 奈飞)官网：https://spring.io/projects/spring-cloud配套通信方式：http restful注册中心：eureka配置中心：config断路器：hystrix网关：zuul/gateway分布式追踪系统：sleuth+zipkin</code></pre><ul><li><h3 id="SpringCloudAlibaba"><a href="#SpringCloudAlibaba" class="headerlink" title="SpringCloudAlibaba"></a>SpringCloudAlibaba</h3></li></ul><pre><code>全家桶+阿里生态多个组件组合+SpringCloud支持官网 https://spring.io/projects/spring-cloud-alibaba配套通信方式：http restful服务注册发现：Nacos服务限流降级：Sentinel分布配置中心：Nacos服务网关：SpringCloud Gateway服务之间调用：Feign、Ribbon链路追踪：Sleuth+Zipkin</code></pre><ul><li><h3 id="为什么要选择SpringCloud和AlibabaCloud的区别"><a href="#为什么要选择SpringCloud和AlibabaCloud的区别" class="headerlink" title="为什么要选择SpringCloud和AlibabaCloud的区别"></a>为什么要选择SpringCloud和AlibabaCloud的区别</h3></li></ul><pre><code>官网 https://spring.io/projects/spring-cloud-alibaba#overviewSpringCloud和AlibabaCloud组件存在很大交集，互相配合SpringCloud很多组件是基于第三方整合，目前多个已经不更新了，比如zuul、eureka、hystrix等AlibabaCloud 提供一站式微服务解决方法，已经和SpringCloud进行了整合，组件互相支持我们也习惯称为 Spring Cloud Alibaba详细介绍：https://mp.weixin.qq.com/s/NMD52MLDY2Lq3LSeOcVwjA</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;h3 id=&quot;SpringCloud&quot;&gt;&lt;a href=&quot;#SpringCloud&quot; class=&quot;headerlink&quot; title=&quot;SpringCloud&quot;&gt;&lt;/a&gt;SpringCloud&lt;/h3&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;全家桶+轻
      
    
    </summary>
    
      <category term="实战项目" scheme="http://www.ldclass.club/categories/%E5%AE%9E%E6%88%98%E9%A1%B9%E7%9B%AE/"/>
    
    
      <category term="实战项目" scheme="http://www.ldclass.club/tags/%E5%AE%9E%E6%88%98%E9%A1%B9%E7%9B%AE/"/>
    
      <category term="SpringCloud" scheme="http://www.ldclass.club/tags/SpringCloud/"/>
    
      <category term="SpringCloudAlibaba" scheme="http://www.ldclass.club/tags/SpringCloudAlibaba/"/>
    
  </entry>
  
  <entry>
    <title>DevOps如何提效</title>
    <link href="http://www.ldclass.club/2021/08/10/devops-ru-he-ti-xiao/"/>
    <id>http://www.ldclass.club/2021/08/10/devops-ru-he-ti-xiao/</id>
    <published>2021-08-09T21:58:25.000Z</published>
    <updated>2021-08-09T14:50:01.024Z</updated>
    
    <content type="html"><![CDATA[<ul><li><h3 id="DevOps"><a href="#DevOps" class="headerlink" title="DevOps"></a>DevOps</h3><ul><li>什么是DevOps：开发+测试+运维 交集</li><li>一专多能，配合提效</li><li>核心：CI/CD（持续集成/持续交付） 多环境-构建-打包-测试-上线-监控</li><li>快速迭代产品，每次代码的改动都触发校验，每刻都可进行新版本的上线</li><li>持续开发、持续集成、持续测试、持续部署、持续监控</li></ul></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;h3 id=&quot;DevOps&quot;&gt;&lt;a href=&quot;#DevOps&quot; class=&quot;headerlink&quot; title=&quot;DevOps&quot;&gt;&lt;/a&gt;DevOps&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;什么是DevOps：开发+测试+运维 交集&lt;/li&gt;
&lt;li&gt;一专多能，配合提
      
    
    </summary>
    
      <category term="DevOps" scheme="http://www.ldclass.club/categories/DevOps/"/>
    
    
      <category term="DevOps" scheme="http://www.ldclass.club/tags/DevOps/"/>
    
  </entry>
  
  <entry>
    <title>DDD领域驱动设计</title>
    <link href="http://www.ldclass.club/2021/08/10/ddd-ling-yu-qu-dong-she-ji/"/>
    <id>http://www.ldclass.club/2021/08/10/ddd-ling-yu-qu-dong-she-ji/</id>
    <published>2021-08-09T21:51:36.000Z</published>
    <updated>2021-08-09T13:57:51.204Z</updated>
    
    <content type="html"><![CDATA[<ul><li><h3 id="DDD领域驱动设计"><a href="#DDD领域驱动设计" class="headerlink" title="DDD领域驱动设计"></a>DDD领域驱动设计</h3><ul><li>什么是DDD：领域驱动设计，领域专家—&gt;电商领域/支付领域/物流领域/在线教育等</li><li>步骤：领域分析—&gt;领域设计—&gt;领域实现—&gt;循环迭代优化</li><li>DDD是一套思想，不通团队实行DDD都有不同的理解，不是每个项目都适合</li></ul></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;h3 id=&quot;DDD领域驱动设计&quot;&gt;&lt;a href=&quot;#DDD领域驱动设计&quot; class=&quot;headerlink&quot; title=&quot;DDD领域驱动设计&quot;&gt;&lt;/a&gt;DDD领域驱动设计&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;什么是DDD：领域驱动设计，领域专家—&amp;gt;电商领域
      
    
    </summary>
    
      <category term="DDD" scheme="http://www.ldclass.club/categories/DDD/"/>
    
    
      <category term="DDD" scheme="http://www.ldclass.club/tags/DDD/"/>
    
  </entry>
  
  <entry>
    <title>解决方案分析方法论SWOT</title>
    <link href="http://www.ldclass.club/2021/08/10/jie-jue-fang-an-fen-xi-fang-fa-lun-swot/"/>
    <id>http://www.ldclass.club/2021/08/10/jie-jue-fang-an-fen-xi-fang-fa-lun-swot/</id>
    <published>2021-08-09T21:41:14.000Z</published>
    <updated>2021-08-09T13:48:12.124Z</updated>
    
    <content type="html"><![CDATA[<ul><li><h3 id="SWOT"><a href="#SWOT" class="headerlink" title="SWOT"></a>SWOT</h3><ul><li>S(strengths)是优势</li><li>W(weaknesses)是劣势</li><li>O(opportunities)是机会</li><li>T(threats)是威胁</li></ul></li><li><h3 id="SMART"><a href="#SMART" class="headerlink" title="SMART"></a>SMART</h3><ul><li><p>SMART原则【目标管理、设置】</p><ul><li><p><strong>Specific</strong>：目标要具体</p></li><li><p><strong>Measurable</strong>：目标成果要可衡量（量化）</p></li><li><p><strong>Attainable</strong>：目标要可实现，避免过高/过低</p></li><li><p><strong>Relevant</strong>：与其他目标有一定的相关性</p></li><li><p><strong>Time bound</strong>：目标必须有明确的期限</p></li><li><p><strong>意义</strong>：在制定工作目标或者任务目标时，考虑一下目标与计划是不是SMART化的。只有具备SMART化的计划才是具有良好可实施性的，也才能指导保证计划得以实现</p></li><li><p><strong>OKR</strong>：绩效考核 </p></li></ul></li></ul></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;h3 id=&quot;SWOT&quot;&gt;&lt;a href=&quot;#SWOT&quot; class=&quot;headerlink&quot; title=&quot;SWOT&quot;&gt;&lt;/a&gt;SWOT&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;S(strengths)是优势&lt;/li&gt;
&lt;li&gt;W(weaknesses)是劣势&lt;/li&gt;

      
    
    </summary>
    
      <category term="SWOT" scheme="http://www.ldclass.club/categories/SWOT/"/>
    
    
      <category term="SWOT" scheme="http://www.ldclass.club/tags/SWOT/"/>
    
  </entry>
  
  <entry>
    <title>Mysql主从复制</title>
    <link href="http://www.ldclass.club/2021/07/14/mysql-zhu-cong-fu-zhi/"/>
    <id>http://www.ldclass.club/2021/07/14/mysql-zhu-cong-fu-zhi/</id>
    <published>2021-07-13T17:45:07.000Z</published>
    <updated>2021-07-13T09:55:43.585Z</updated>
    
    <content type="html"><![CDATA[<ul><li><h4 id="主从同步复制有以下几种方式："><a href="#主从同步复制有以下几种方式：" class="headerlink" title="主从同步复制有以下几种方式："></a>主从同步复制有以下几种方式：</h4><ul><li>同步复制，master的变化，必须等待slave-1,slave-2,…,slave-n完成后才能返回。</li><li>异步复制，master只需要完成自己的数据库操作即可，至于slaves是否收到二进制日志，是否完成操作，不用关心。MYSQL的默认设置。</li><li>半同步复制，master只保证slaves中的一个操作成功，就返回，其他slave不管。这个功能，是由google为MYSQL引入的。</li></ul></li><li><h4 id="分别在两台centos-7系统上安装mysql-5-7"><a href="#分别在两台centos-7系统上安装mysql-5-7" class="headerlink" title="分别在两台centos 7系统上安装mysql 5.7"></a>分别在两台centos 7系统上安装mysql 5.7</h4></li><li><h4 id="master主服务器的配置"><a href="#master主服务器的配置" class="headerlink" title="master主服务器的配置"></a>master主服务器的配置</h4><ul><li>配置文件my.cnf的修改</li></ul><pre class="line-numbers language-cnf"><code class="language-cnf">#编辑my.cnf文件[root@localhost mysql]# vim /etc/my.cnf#在[mysqld]中添加：server-id=1log_bin=master-binlog_bin_index=master-bin.indexbinlog_do_db=test#备注：#server-id 服务器唯一标识。#log_bin 启动MySQL二进制日志，即数据同步语句，从数据库会一条一条的执行这些语句。#binlog_do_db 指定记录二进制日志的数据库，即需要复制的数据库名，如果复制多个数据库，重复设置这个选项即可。#binlog_ignore_db 指定不记录二进制日志的数据库，即不需要复制的数据库名，如果有多个数据库，重复设置这个选项即可。#其中需要注意的是，binlog_do_db和binlog_ignore_db为互斥选项，一般只需要一个即可。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>创建从服务器的用户和权限</li></ul><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#进入mysql数据库</span><span class="token punctuation">[</span>root<span class="token variable">@localhost</span> mysql<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># mysql -uroot -p</span>Enter password:<span class="token comment" spellcheck="true">#创建从数据库的masterbackup用户和权限</span>mysql<span class="token operator">></span> <span class="token keyword">grant</span> <span class="token keyword">replication</span> slave <span class="token keyword">on</span> <span class="token operator">*</span><span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">to</span> masterbackup@'<span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">17</span><span class="token punctuation">.</span><span class="token operator">%</span><span class="token string">' identified by '</span><span class="token number">123456</span>'<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#备注</span><span class="token comment" spellcheck="true">#192.168.17.%通配符，表示0-255的IP都可访问主服务器，正式环境请配置指定从服务器IP</span><span class="token comment" spellcheck="true">#若将 192.168.17.% 改为 %，则任何ip均可作为其从数据库来访问主服务器</span><span class="token comment" spellcheck="true">#退出mysql</span>mysql<span class="token operator">></span> <span class="token keyword">exit</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>重启mysql服务</li></ul><pre class="line-numbers language-shell"><code class="language-shell">[root@localhost mysql]# systemctl restart mysql.service<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>查看主服务器状态</li></ul><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#进入mysql数据库</span><span class="token punctuation">[</span>root<span class="token variable">@localhost</span> mysql<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># mysql -uroot -p</span>Enter password:<span class="token comment" spellcheck="true">#查看主服务器状态</span>mysql<span class="token operator">></span> <span class="token keyword">show</span> master <span class="token keyword">status</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------------------+----------+--------------+------------------+-------------------+</span><span class="token operator">|</span> <span class="token keyword">File</span>              <span class="token operator">|</span> Position <span class="token operator">|</span> Binlog_Do_DB <span class="token operator">|</span> Binlog_Ignore_DB <span class="token operator">|</span> Executed_Gtid_Set <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------------------+----------+--------------+------------------+-------------------+</span><span class="token operator">|</span> master<span class="token operator">-</span>bin<span class="token number">.000001</span> <span class="token operator">|</span>      <span class="token number">154</span> <span class="token operator">|</span> test         <span class="token operator">|</span>                  <span class="token operator">|</span>                   <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------------------+----------+--------------+------------------+-------------------+</span><span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><h4 id="slave从服务器的配置"><a href="#slave从服务器的配置" class="headerlink" title="slave从服务器的配置"></a>slave从服务器的配置</h4><ul><li>配置文件my.cnf的修改</li></ul><pre class="line-numbers language-cnf"><code class="language-cnf">#根据上一篇文章，编辑my.cnf文件[root@localhost mysql]# vim /etc/my.cnf#在[mysqld]中添加：server-id=2relay-log=slave-relay-binrelay-log-index=slave-relay-bin.index#replicate-do-db=test#备注：#server-id 服务器唯一标识，如果有多个从服务器，每个服务器的server-id不能重复，跟IP一样是唯一标识，如果你没设置server-id或者设置为0，则从服务器不会连接到主服务器。#relay-log 启动MySQL二进制日志，可以用来做数据备份和崩溃恢复，或主服务器挂掉了，将此从服务器作为其他从服务器的主服务器。#replicate-do-db 指定同步的数据库，如果复制多个数据库，重复设置这个选项即可。若在master端不指定binlog-do-db，则在slave端可用replication-do-db来过滤。#replicate-ignore-db 不需要同步的数据库，如果有多个数据库，重复设置这个选项即可。#其中需要注意的是，replicate-do-db和replicate-ignore-db为互斥选项，一般只需要一个即可。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>重启mysql服务</li></ul><pre class="line-numbers language-shell"><code class="language-shell">[root@localhost mysql]# systemctl restart mysql.service<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>连接master主服务器</li></ul><pre class="line-numbers language-mysql"><code class="language-mysql">#进入mysql数据库[root@localhost mysql]# mysql -uroot -pEnter password:#连接master主服务器mysql> change master to master_host='192.168.17.130',master_port=3306,master_user='masterbackup',master_password='123456',master_log_file='master-bin.000001',master_log_pos=154;#备注：#master_host对应主服务器的IP地址。#master_port对应主服务器的端口。#master_log_file对应show master status显示的File列：master-bin.000001。#master_log_pos对应show master status显示的Position列：154。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>启动slave数据同步</li></ul><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#启动slave数据同步</span>mysql<span class="token operator">></span> <span class="token keyword">start</span> slave<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#停止slave数据同步（若有需要）</span>mysql<span class="token operator">></span> stop slave<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li>查看slave信息，Slave_IO_Running和Slave_SQL_Running都为yes，则表示同步成功。</li></ul><pre class="line-numbers language-sql"><code class="language-sql">mysql<span class="token operator">></span> <span class="token keyword">show</span> slave <span class="token keyword">status</span>\G<span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token number">1</span><span class="token punctuation">.</span> <span class="token keyword">row</span> <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>               Slave_IO_State: Waiting <span class="token keyword">for</span> master <span class="token keyword">to</span> send event                  Master_Host: <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">70.129</span>                  Master_User: <span class="token keyword">backup</span>                  Master_Port: <span class="token number">13306</span>                Connect_Retry: <span class="token number">60</span>              Master_Log_File: master<span class="token operator">-</span>bin<span class="token number">.000001</span>          Read_Master_Log_Pos: <span class="token number">154</span>               Relay_Log_File: slave<span class="token operator">-</span>relay<span class="token operator">-</span>bin<span class="token number">.000003</span>                Relay_Log_Pos: <span class="token number">321</span>        Relay_Master_Log_File: master<span class="token operator">-</span>bin<span class="token number">.000001</span>             Slave_IO_Running: Yes            Slave_SQL_Running: Yes              Replicate_Do_DB:          Replicate_Ignore_DB:           Replicate_Do_Table:       Replicate_Ignore_Table:      Replicate_Wild_Do_Table:  Replicate_Wild_Ignore_Table:                   Last_Errno: <span class="token number">0</span>                   Last_Error:                 Skip_Counter: <span class="token number">0</span>          Exec_Master_Log_Pos: <span class="token number">154</span>              Relay_Log_Space: <span class="token number">528</span>              Until_Condition: None               Until_Log_File:                Until_Log_Pos: <span class="token number">0</span>           Master_SSL_Allowed: <span class="token keyword">No</span>           Master_SSL_CA_File:           Master_SSL_CA_Path:              Master_SSL_Cert:            Master_SSL_Cipher:               Master_SSL_Key:        Seconds_Behind_Master: <span class="token number">0</span>Master_SSL_Verify_Server_Cert: <span class="token keyword">No</span>                Last_IO_Errno: <span class="token number">0</span>                Last_IO_Error:               Last_SQL_Errno: <span class="token number">0</span>               Last_SQL_Error:  Replicate_Ignore_Server_Ids:             Master_Server_Id: <span class="token number">1</span>                  Master_UUID: <span class="token number">8ffb067d</span><span class="token operator">-</span><span class="token number">b7bb</span><span class="token operator">-</span><span class="token number">11eb</span><span class="token operator">-</span><span class="token number">8ced</span><span class="token operator">-</span><span class="token number">000c291e5989</span>             Master_Info_File: <span class="token operator">/</span>usr<span class="token operator">/</span><span class="token keyword">local</span><span class="token operator">/</span>mysql<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>master<span class="token punctuation">.</span>info                    SQL_Delay: <span class="token number">0</span>          SQL_Remaining_Delay: <span class="token boolean">NULL</span>      Slave_SQL_Running_State: Slave has <span class="token keyword">read</span> <span class="token keyword">all</span> relay log<span class="token punctuation">;</span> waiting <span class="token keyword">for</span> more updates           Master_Retry_Count: <span class="token number">86400</span>                  Master_Bind:      Last_IO_Error_Timestamp:     Last_SQL_Error_Timestamp:               Master_SSL_Crl:           Master_SSL_Crlpath:           Retrieved_Gtid_Set:            Executed_Gtid_Set:                Auto_Position: <span class="token number">0</span>         Replicate_Rewrite_DB:                 Channel_Name:           Master_TLS_Version:<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;主从同步复制有以下几种方式：&quot;&gt;&lt;a href=&quot;#主从同步复制有以下几种方式：&quot; class=&quot;headerlink&quot; title=&quot;主从同步复制有以下几种方式：&quot;&gt;&lt;/a&gt;主从同步复制有以下几种方式：&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;同步复制，ma
      
    
    </summary>
    
      <category term="MYSQL" scheme="http://www.ldclass.club/categories/MYSQL/"/>
    
    
      <category term="MYSQL" scheme="http://www.ldclass.club/tags/MYSQL/"/>
    
  </entry>
  
  <entry>
    <title>Springboot静态资源加载</title>
    <link href="http://www.ldclass.club/2021/06/26/springboot-jing-tai-zi-yuan-jia-zai/"/>
    <id>http://www.ldclass.club/2021/06/26/springboot-jing-tai-zi-yuan-jia-zai/</id>
    <published>2021-06-25T22:53:10.000Z</published>
    <updated>2021-06-25T14:57:28.773Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>静态资源加载顺序</p><pre class="line-numbers language-yml"><code class="language-yml">classpath:/META-INF/resources/, classpath:/resources/, classpath:/static/, classpath:/public/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>spring boot配置文件中 <code>spring.mvc.static-path-pattern</code> 配置项</p><pre class="line-numbers language-yml"><code class="language-yml">spring:    mvc:        static-path-pattern: /static/**<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>项目中<code>application.yml</code>配置文件中，存在如上配置项时，访问静态资源文件要加<code>static</code>才行，当把这个配置项除掉时，不用加static作为前缀亦可进行正常访问。</p></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;p&gt;静态资源加载顺序&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-yml&quot;&gt;&lt;code class=&quot;language-yml&quot;&gt;classpath:/META-INF/resources/, classpath:/resour
      
    
    </summary>
    
      <category term="SpringBoot" scheme="http://www.ldclass.club/categories/SpringBoot/"/>
    
    
      <category term="SpringBoot" scheme="http://www.ldclass.club/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>数据库定时备份</title>
    <link href="http://www.ldclass.club/2021/06/25/shu-ju-ku-ding-shi-bei-fen/"/>
    <id>http://www.ldclass.club/2021/06/25/shu-ju-ku-ding-shi-bei-fen/</id>
    <published>2021-06-24T18:06:45.000Z</published>
    <updated>2021-06-24T10:24:15.079Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Windows</p></blockquote><ul><li>mysql</li></ul><pre class="line-numbers language-bat"><code class="language-bat">rem ******MySQL backup start********@echo offset "Ymd=%DATE:~,4%%DATE:~5,2%%DATE:~8,2%%time:~0,2%%time:~3,2%""C:\mysql5.7\bin\mysqldump" -uroot -pRoot@123 -h127.0.0.1 --databases plat > C:\mysqldata\plat_%Ymd%.sql@echo onrem ******MySQL backup end********<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>oracle</li></ul><pre class="line-numbers language-bat"><code class="language-bat">rem ******MySQL backup start********@echo offset adir=%DATE:~,4%%DATE:~5,2%%DATE:~8,2%%time:~0,2%%time:~3,2%exp rjm/rjm@orcl owner=rjm file=C:\oracledata\rjm_%adir%.dmp log='C:\oracledata\rjm_%adir%.log'@echo onrem ******MySQL backup end********<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>配置定时任务</p><ul><li>首先是创建一个任务，在附件–&gt;系统工具中可以看到任务计划程序： </li></ul><img src="/2021/06/25/shu-ju-ku-ding-shi-bei-fen/1.png" title="配置定时任务"><ul><li>点击打开后可以看到主界面： </li></ul><img src="/2021/06/25/shu-ju-ku-ding-shi-bei-fen/2.png" title="配置定时任务"><ul><li>点击右侧的创建基本任务，随便输入一个名称后点击【下一步】： </li></ul><img src="/2021/06/25/shu-ju-ku-ding-shi-bei-fen/3.png" title="配置定时任务"><ul><li>然后是选择执行频率，我这里选择每天，然后点击【下一步】： </li></ul><img src="/2021/06/25/shu-ju-ku-ding-shi-bei-fen/4.png" title="配置定时任务"><ul><li>接着是设置开始时间和具体几点执行，我这里选择每天18点执行，从今天开始，然后点击【下一步】： </li></ul><img src="/2021/06/25/shu-ju-ku-ding-shi-bei-fen/5.png" title="配置定时任务"><ul><li>由于我们执行的是批处理脚本，所以直接选择【启动程序】即可，然后点击【下一步】： </li></ul><img src="/2021/06/25/shu-ju-ku-ding-shi-bei-fen/6.png" title="配置定时任务"><ul><li>接着就是选择我们脚本的位置，如果有参数的话填上参数，点击【下一步】： </li></ul><img src="/2021/06/25/shu-ju-ku-ding-shi-bei-fen/7.png" title="配置定时任务"><ul><li>最后确认一下配置无误，点击【完成】： </li></ul><img src="/2021/06/25/shu-ju-ku-ding-shi-bei-fen/8.png" title="配置定时任务"><ul><li>由于我们勾选了当点击【完成】时打开任务属性对话框，所以接下来我们看到的就是任务属性对话框，我们在这里还要再做一些设置：</li></ul><img src="/2021/06/25/shu-ju-ku-ding-shi-bei-fen/9.png" title="配置定时任务"><ul><li>如上图所示，这个配置非常重要，即选中“不管用户是否登录都要运行”和“使用最高权限运行”，注意这一点尤为重要，如果不选中这两项那么批处理脚本就无法自动执行完毕。最后点击【确定】并输入密码即可： </li></ul><img src="/2021/06/25/shu-ju-ku-ding-shi-bei-fen/10.png" title="配置定时任务"><ul><li>最后在首页就可以看到刚才添加的任务了： </li></ul><ul><li>双击该任务即可进入任务详情页面，也就能看到上次和下次的执行时间以及上次的执行结果： </li></ul><img src="/2021/06/25/shu-ju-ku-ding-shi-bei-fen/12.png" title="配置定时任务"></li></ul><blockquote><p>Linux</p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;Windows&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;mysql&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;line-numbers language-bat&quot;&gt;&lt;code class=&quot;language-bat&quot;&gt;rem **
      
    
    </summary>
    
      <category term="数据库" scheme="http://www.ldclass.club/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="数据库" scheme="http://www.ldclass.club/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>pom配置使用lib下的jar包</title>
    <link href="http://www.ldclass.club/2021/06/25/pom-pei-zhi-shi-yong-lib-xia-de-jar-bao/"/>
    <id>http://www.ldclass.club/2021/06/25/pom-pei-zhi-shi-yong-lib-xia-de-jar-bao/</id>
    <published>2021-06-24T16:04:08.000Z</published>
    <updated>2021-06-24T08:51:26.503Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>问题描述</p><ul><li>在Maven项目中，jar包的管理一般情况下都可以使用pom.xml来配置管理，但也有一些时候：我们项目中使用了一个内部jar文件，可是这个文件我们又没有开放到maven库中，还有就是在使用BCM或者docker的时候，项目的构建是实时同步GIt的，需要将本地引入的jar包上传到Git，这样导入到Git上的jar包，才能在构建的时候，被正确识别。这时我们会将jar包放到我们项目的src/main/webapp/WEB-INF/lib中。 如果我们不对pom.xml进行特殊配置的话，maven打包是不会自动去引用和编译lib中的jar文件的，所以需要我们修改下pom.xml文件。</li></ul></li><li><p>解决</p><ul><li>备注：如果不在src前加入${project.basedir}有可能在使用BCM或者Docker部署的时候，无法成功构建，本地和部署运行时候，识别的路径是有差异的。 </li></ul><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-compiler-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span><span class="token punctuation">></span></span>1.7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>source</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>target</span><span class="token punctuation">></span></span>1.7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>target</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>encoding</span><span class="token punctuation">></span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>encoding</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>compilerArguments</span><span class="token punctuation">></span></span>                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>extdirs</span><span class="token punctuation">></span></span>${project.basedir}/src/main/webapp/WEB-INF/lib<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>extdirs</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>compilerArguments</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;p&gt;问题描述&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在Maven项目中，jar包的管理一般情况下都可以使用pom.xml来配置管理，但也有一些时候：我们项目中使用了一个内部jar文件，可是这个文件我们又没有开放到maven库中，还有就是在使用BCM或者docker的时候，
      
    
    </summary>
    
      <category term="Maven" scheme="http://www.ldclass.club/categories/Maven/"/>
    
    
      <category term="Maven" scheme="http://www.ldclass.club/tags/Maven/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot-GA/PRE/SNAPSHOT详解</title>
    <link href="http://www.ldclass.club/2021/06/24/springboot-ga-pre-snapshot-xiang-jie/"/>
    <id>http://www.ldclass.club/2021/06/24/springboot-ga-pre-snapshot-xiang-jie/</id>
    <published>2021-06-24T13:59:00.000Z</published>
    <updated>2021-06-24T08:41:37.548Z</updated>
    
    <content type="html"><![CDATA[<ul><li>GA/PRE/SNAPSHOT详解<ul><li>GA: General Availability,正式发布的版本，官方推荐使用该版本，国外很多项目都是使用GA来表示正式发布版本的</li><li>PRE： 预览版，主要是用来内部开发人员和测试人员测试使用，因此不建议使用</li><li>SNAPSHOT: 快照版，可以稳定使用，且该版本会一直进行小量的优化和改进</li></ul></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;GA/PRE/SNAPSHOT详解&lt;ul&gt;
&lt;li&gt;GA: General Availability,正式发布的版本，官方推荐使用该版本，国外很多项目都是使用GA来表示正式发布版本的&lt;/li&gt;
&lt;li&gt;PRE： 预览版，主要是用来内部开发人员和测试人员测试使用，
      
    
    </summary>
    
      <category term="SpringBoot" scheme="http://www.ldclass.club/categories/SpringBoot/"/>
    
    
      <category term="SpringBoot" scheme="http://www.ldclass.club/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>IDEA-properties中文乱码</title>
    <link href="http://www.ldclass.club/2021/06/24/idea-properties-zhong-wen-luan-ma/"/>
    <id>http://www.ldclass.club/2021/06/24/idea-properties-zhong-wen-luan-ma/</id>
    <published>2021-06-24T13:57:09.000Z</published>
    <updated>2021-06-24T08:49:21.775Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>问题描述</p><ul><li>打开<code>.properties</code>文件后，汉字都变成了<code>\u6295\u7968\u6210\u529f\uff0c\u8c22\u8c22\u53c2\u4e0e</code></li><li>这是汉字的<code>unicode</code>编码。</li></ul></li><li><p>解决：</p><p>在project settings - File Encoding，在标红的选项上打上勾，确定即可</p><img src="/2021/06/24/idea-properties-zhong-wen-luan-ma/1.png" title="IDEA配置"></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;p&gt;问题描述&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;打开&lt;code&gt;.properties&lt;/code&gt;文件后，汉字都变成了&lt;code&gt;\u6295\u7968\u6210\u529f\uff0c\u8c22\u8c22\u53c2\u4e0e&lt;/code&gt;&lt;/li&gt;
&lt;
      
    
    </summary>
    
      <category term="IDEA" scheme="http://www.ldclass.club/categories/IDEA/"/>
    
    
      <category term="IDEA" scheme="http://www.ldclass.club/tags/IDEA/"/>
    
  </entry>
  
</feed>
