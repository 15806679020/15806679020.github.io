<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>陌生的小窝</title>
  
  <subtitle>学无止境</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.ldclass.club/"/>
  <updated>2021-08-14T09:24:04.726Z</updated>
  <id>http://www.ldclass.club/</id>
  
  <author>
    <name>Dong Liu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>swagger3.0新全局配置</title>
    <link href="http://www.ldclass.club/2021/08/15/swagger3-0-xin-quan-ju-pei-zhi/"/>
    <id>http://www.ldclass.club/2021/08/15/swagger3-0-xin-quan-ju-pei-zhi/</id>
    <published>2021-08-14T16:20:59.000Z</published>
    <updated>2021-08-14T09:24:04.726Z</updated>
    
    <content type="html"><![CDATA[<ul><li>访问地址<ul><li><code>http://ip:port/swagger-ui/index.html#/</code></li></ul></li><li>新增全局配置</li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>config<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>Data<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Bean<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpMethod<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Component<span class="token punctuation">;</span><span class="token keyword">import</span> springfox<span class="token punctuation">.</span>documentation<span class="token punctuation">.</span>builders<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> springfox<span class="token punctuation">.</span>documentation<span class="token punctuation">.</span>oas<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span>EnableOpenApi<span class="token punctuation">;</span><span class="token keyword">import</span> springfox<span class="token punctuation">.</span>documentation<span class="token punctuation">.</span>schema<span class="token punctuation">.</span>ScalarType<span class="token punctuation">;</span><span class="token keyword">import</span> springfox<span class="token punctuation">.</span>documentation<span class="token punctuation">.</span>service<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> springfox<span class="token punctuation">.</span>documentation<span class="token punctuation">.</span>spi<span class="token punctuation">.</span>DocumentationType<span class="token punctuation">;</span><span class="token keyword">import</span> springfox<span class="token punctuation">.</span>documentation<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>web<span class="token punctuation">.</span>plugins<span class="token punctuation">.</span>Docket<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>ArrayList<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author LiuDong * @version 1.0 * @date 2021年08月14日 15:48 */</span><span class="token annotation punctuation">@Component</span><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@EnableOpenApi</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SwaggerConfiguration</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 对C端用户的接口文档     *     * @return springfox.documentation.spring.web.plugins.Docket     * @author LiuDong     * @date 2021/8/14 16:05     */</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> Docket <span class="token function">webApiDoc</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//采用3.0的配置</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Docket</span><span class="token punctuation">(</span>DocumentationType<span class="token punctuation">.</span>OAS_30<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">groupName</span><span class="token punctuation">(</span><span class="token string">"用户端接口文档"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">pathMapping</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">//定义是否开启Swagger,false是关闭，可以通过变量控制，线上关闭</span>                <span class="token punctuation">.</span><span class="token function">enable</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">//配置接口文档的元信息</span>                <span class="token punctuation">.</span><span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">// 选择哪些接口作为swagger的doc发布</span>                <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">apis</span><span class="token punctuation">(</span>RequestHandlerSelectors<span class="token punctuation">.</span><span class="token function">basePackage</span><span class="token punctuation">(</span><span class="token string">"club.ldclass"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">//正则匹配请求路径，并分配到当前分组</span>                <span class="token punctuation">.</span><span class="token function">paths</span><span class="token punctuation">(</span>PathSelectors<span class="token punctuation">.</span><span class="token function">ant</span><span class="token punctuation">(</span><span class="token string">"/api/**"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token operator">/</span><span class="token operator">/</span>新版swaggerUI3<span class="token number">.0</span>配置                <span class="token punctuation">.</span><span class="token function">globalRequestParameters</span><span class="token punctuation">(</span><span class="token function">globalRequestParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">globalResponses</span><span class="token punctuation">(</span>HttpMethod<span class="token punctuation">.</span>GET<span class="token punctuation">,</span><span class="token function">getGlobalResponseMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">globalResponses</span><span class="token punctuation">(</span>HttpMethod<span class="token punctuation">.</span>POST<span class="token punctuation">,</span><span class="token function">getGlobalResponseMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>     <span class="token operator">*</span> 对管理端的接口文档     <span class="token operator">*</span>     <span class="token operator">*</span> @<span class="token keyword">return</span> springfox<span class="token punctuation">.</span>documentation<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>web<span class="token punctuation">.</span>plugins<span class="token punctuation">.</span>Docket     <span class="token operator">*</span> <span class="token annotation punctuation">@author</span> LiuDong     <span class="token operator">*</span> <span class="token annotation punctuation">@date</span> <span class="token number">2021</span><span class="token operator">/</span><span class="token number">8</span><span class="token operator">/</span><span class="token number">14</span> <span class="token number">16</span><span class="token operator">:</span><span class="token number">05</span>     <span class="token operator">*</span><span class="token operator">/</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> Docket <span class="token function">adminApiDoc</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//采用3.0的配置</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Docket</span><span class="token punctuation">(</span>DocumentationType<span class="token punctuation">.</span>OAS_30<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">groupName</span><span class="token punctuation">(</span><span class="token string">"管理端接口文档"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">pathMapping</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">//定义是否开启Swagger,false是关闭，可以通过变量控制，线上关闭</span>                <span class="token punctuation">.</span><span class="token function">enable</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">//配置接口文档的元信息</span>                <span class="token punctuation">.</span><span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">// 选择哪些接口作为swagger的doc发布</span>                <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">apis</span><span class="token punctuation">(</span>RequestHandlerSelectors<span class="token punctuation">.</span><span class="token function">basePackage</span><span class="token punctuation">(</span><span class="token string">"club.ldclass"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">//正则匹配请求路径，并分配到当前分组</span>                <span class="token punctuation">.</span><span class="token function">paths</span><span class="token punctuation">(</span>PathSelectors<span class="token punctuation">.</span><span class="token function">ant</span><span class="token punctuation">(</span><span class="token string">"/admin/**"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> ApiInfo <span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ApiInfoBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string">"1024电商平台"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">"微服务接口文档"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">contact</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Contact</span><span class="token punctuation">(</span><span class="token string">"ld"</span><span class="token punctuation">,</span> <span class="token string">"https://blog.ldclass.club"</span><span class="token punctuation">,</span> <span class="token string">"873791226@qq.com"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token string">"v1.0"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>     <span class="token operator">*</span> 配置全局通用参数<span class="token punctuation">,</span> 支持配置多个响应参数     <span class="token operator">*</span>     <span class="token operator">*</span> @<span class="token keyword">return</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token operator">&lt;</span>springfox<span class="token punctuation">.</span>documentation<span class="token punctuation">.</span>service<span class="token punctuation">.</span>RequestParameter<span class="token operator">></span>     <span class="token operator">*</span> <span class="token annotation punctuation">@author</span> LiuDong     <span class="token operator">*</span> <span class="token annotation punctuation">@date</span> <span class="token number">2021</span><span class="token operator">/</span><span class="token number">8</span><span class="token operator">/</span><span class="token number">14</span> <span class="token number">16</span><span class="token operator">:</span><span class="token number">08</span>     <span class="token operator">*</span><span class="token operator">/</span>    <span class="token keyword">private</span> List<span class="token operator">&lt;</span>RequestParameter<span class="token operator">></span> <span class="token function">globalRequestParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        List<span class="token operator">&lt;</span>RequestParameter<span class="token operator">></span> parameters <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        parameters<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RequestParameterBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                 <span class="token comment" spellcheck="true">//增加token</span>                <span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string">"token"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">"登录令牌"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">in</span><span class="token punctuation">(</span>ParameterType<span class="token punctuation">.</span>HEADER<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>q <span class="token operator">-</span><span class="token operator">></span> q<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span>m <span class="token operator">-</span><span class="token operator">></span> m<span class="token punctuation">.</span><span class="token function">scalarModel</span><span class="token punctuation">(</span>ScalarType<span class="token punctuation">.</span>STRING<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">//是否开启</span>                <span class="token punctuation">.</span><span class="token function">required</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> parameters<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 生成通用响应信息     * @author LiuDong     * @date 2021/8/14 16:13     * @return java.util.List&lt;Response>     */</span>    <span class="token keyword">private</span> List<span class="token operator">&lt;</span>Response<span class="token operator">></span> <span class="token function">getGlobalResponseMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        List<span class="token operator">&lt;</span>Response<span class="token operator">></span> responseList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        responseList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ResponseBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">code</span><span class="token punctuation">(</span><span class="token string">"4xx"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">"请求错误，根据code和msg检查"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> responseList<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;访问地址&lt;ul&gt;
&lt;li&gt;&lt;code&gt;http://ip:port/swagger-ui/index.html#/&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;新增全局配置&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;line-numbers la
      
    
    </summary>
    
      <category term="swagger" scheme="http://www.ldclass.club/categories/swagger/"/>
    
      <category term="1024" scheme="http://www.ldclass.club/categories/swagger/1024/"/>
    
    
      <category term="swagger" scheme="http://www.ldclass.club/tags/swagger/"/>
    
      <category term="1024" scheme="http://www.ldclass.club/tags/1024/"/>
    
  </entry>
  
  <entry>
    <title>postman配置多环境操作</title>
    <link href="http://www.ldclass.club/2021/08/14/postman-pei-zhi-duo-huan-jing-cao-zuo/"/>
    <id>http://www.ldclass.club/2021/08/14/postman-pei-zhi-duo-huan-jing-cao-zuo/</id>
    <published>2021-08-14T15:43:40.000Z</published>
    <updated>2021-08-14T08:21:23.030Z</updated>
    
    <content type="html"><![CDATA[<ul><li>Postman配置多环境操作<ul><li>方便未来切换环境<ul><li>开发</li><li>测试</li><li>预发布</li><li>线上</li></ul></li></ul></li></ul><img src="/2021/08/14/postman-pei-zhi-duo-huan-jing-cao-zuo/1.png" title="Postman配置多环境操作"><img src="/2021/08/14/postman-pei-zhi-duo-huan-jing-cao-zuo/2.png" title="Postman配置多环境操作"><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;Postman配置多环境操作&lt;ul&gt;
&lt;li&gt;方便未来切换环境&lt;ul&gt;
&lt;li&gt;开发&lt;/li&gt;
&lt;li&gt;测试&lt;/li&gt;
&lt;li&gt;预发布&lt;/li&gt;
&lt;li&gt;线上&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&quot;/2021/
      
    
    </summary>
    
      <category term="postman" scheme="http://www.ldclass.club/categories/postman/"/>
    
    
      <category term="postman" scheme="http://www.ldclass.club/tags/postman/"/>
    
      <category term="1024" scheme="http://www.ldclass.club/tags/1024/"/>
    
  </entry>
  
  <entry>
    <title>项目编码规范</title>
    <link href="http://www.ldclass.club/2021/08/14/xiang-mu-bian-ma-gui-fan/"/>
    <id>http://www.ldclass.club/2021/08/14/xiang-mu-bian-ma-gui-fan/</id>
    <published>2021-08-14T15:09:46.000Z</published>
    <updated>2021-08-14T09:25:20.042Z</updated>
    
    <content type="html"><![CDATA[<ul><li><h3 id="N方库"><a href="#N方库" class="headerlink" title="N方库"></a>N方库</h3><ul><li>一方库: 本工程内部子项目模块依赖的库(jar 包)。<ul><li>自己项目中的module</li></ul></li><li>二方库: 公司内部发布到中央仓库，可供公司内部其它应用依赖的库(jar包)。<ul><li>公司内部其他项目开发的公共包</li></ul></li><li>三方库: 公司之外的开源库(jar 包)。<ul><li>第三方的包</li></ul></li></ul></li><li><h3 id="POJO实体类"><a href="#POJO实体类" class="headerlink" title="POJO实体类"></a>POJO实体类</h3><ul><li>POJO(Plain Ordinary Java Object): 在手册中，POJO 专指只有 setter / getter / toString的简单类，包括DO/DTO/BO/VO等, 禁止命名成xxxPOJO<ul><li>DO：数据库映射，一一对应</li><li>DTO：服务层之间的通讯</li><li>BO：业务对象</li><li>VO：值对象，业务层和前端交互</li></ul></li></ul></li><li><h3 id="各个层级约束规范"><a href="#各个层级约束规范" class="headerlink" title="各个层级约束规范"></a>各个层级约束规范</h3><ul><li>Service/DAO层方法命名规约<ul><li>获取单个对象的方法用get做前缀。</li><li>获取多个对象的方法用list做前缀，复数形式结尾如:listObjects。 </li><li>获取统计值的方法用count做前缀。</li><li>插入的方法用save/insert做前缀。</li><li>删除的方法用remove/delete做前缀。</li><li>修改的方法用update做前缀。</li></ul></li><li>领域模型命名规约<ul><li>数据对象:xxxDO，xxx即为数据表名。</li><li>一般数据传输对象:xxxDTO，xxx为业务领域相关的名称，项目里面也用VO。 </li><li>展示对象:xxxVO，也就是响应给前端的实体包装类。</li><li>接收前端json对象请求的命名为 XXXRequest</li></ul></li></ul></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;h3 id=&quot;N方库&quot;&gt;&lt;a href=&quot;#N方库&quot; class=&quot;headerlink&quot; title=&quot;N方库&quot;&gt;&lt;/a&gt;N方库&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;一方库: 本工程内部子项目模块依赖的库(jar 包)。&lt;ul&gt;
&lt;li&gt;自己项目中的module&lt;/l
      
    
    </summary>
    
      <category term="项目编码规范" scheme="http://www.ldclass.club/categories/%E9%A1%B9%E7%9B%AE%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83/"/>
    
    
      <category term="项目编码规范" scheme="http://www.ldclass.club/tags/%E9%A1%B9%E7%9B%AE%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83/"/>
    
  </entry>
  
  <entry>
    <title>微服务技术对比和选择</title>
    <link href="http://www.ldclass.club/2021/08/12/wei-fu-wu-ji-zhu-dui-bi-he-xuan-ze/"/>
    <id>http://www.ldclass.club/2021/08/12/wei-fu-wu-ji-zhu-dui-bi-he-xuan-ze/</id>
    <published>2021-08-11T23:15:51.000Z</published>
    <updated>2021-08-11T15:23:36.309Z</updated>
    
    <content type="html"><![CDATA[<ul><li><h3 id="SpringCloud"><a href="#SpringCloud" class="headerlink" title="SpringCloud"></a>SpringCloud</h3></li></ul><pre><code>全家桶+轻松嵌入第三方组件(Netflix 奈飞)官网：https://spring.io/projects/spring-cloud配套通信方式：http restful注册中心：eureka配置中心：config断路器：hystrix网关：zuul/gateway分布式追踪系统：sleuth+zipkin</code></pre><ul><li><h3 id="SpringCloudAlibaba"><a href="#SpringCloudAlibaba" class="headerlink" title="SpringCloudAlibaba"></a>SpringCloudAlibaba</h3></li></ul><pre><code>全家桶+阿里生态多个组件组合+SpringCloud支持官网 https://spring.io/projects/spring-cloud-alibaba配套通信方式：http restful服务注册发现：Nacos服务限流降级：Sentinel分布配置中心：Nacos服务网关：SpringCloud Gateway服务之间调用：Feign、Ribbon链路追踪：Sleuth+Zipkin</code></pre><ul><li><h3 id="为什么要选择SpringCloud和AlibabaCloud的区别"><a href="#为什么要选择SpringCloud和AlibabaCloud的区别" class="headerlink" title="为什么要选择SpringCloud和AlibabaCloud的区别"></a>为什么要选择SpringCloud和AlibabaCloud的区别</h3></li></ul><pre><code>官网 https://spring.io/projects/spring-cloud-alibaba#overviewSpringCloud和AlibabaCloud组件存在很大交集，互相配合SpringCloud很多组件是基于第三方整合，目前多个已经不更新了，比如zuul、eureka、hystrix等AlibabaCloud 提供一站式微服务解决方法，已经和SpringCloud进行了整合，组件互相支持我们也习惯称为 Spring Cloud Alibaba详细介绍：https://mp.weixin.qq.com/s/NMD52MLDY2Lq3LSeOcVwjA</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;h3 id=&quot;SpringCloud&quot;&gt;&lt;a href=&quot;#SpringCloud&quot; class=&quot;headerlink&quot; title=&quot;SpringCloud&quot;&gt;&lt;/a&gt;SpringCloud&lt;/h3&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;全家桶+轻
      
    
    </summary>
    
      <category term="实战项目" scheme="http://www.ldclass.club/categories/%E5%AE%9E%E6%88%98%E9%A1%B9%E7%9B%AE/"/>
    
    
      <category term="实战项目" scheme="http://www.ldclass.club/tags/%E5%AE%9E%E6%88%98%E9%A1%B9%E7%9B%AE/"/>
    
      <category term="SpringCloud" scheme="http://www.ldclass.club/tags/SpringCloud/"/>
    
      <category term="SpringCloudAlibaba" scheme="http://www.ldclass.club/tags/SpringCloudAlibaba/"/>
    
  </entry>
  
  <entry>
    <title>DevOps如何提效</title>
    <link href="http://www.ldclass.club/2021/08/10/devops-ru-he-ti-xiao/"/>
    <id>http://www.ldclass.club/2021/08/10/devops-ru-he-ti-xiao/</id>
    <published>2021-08-09T21:58:25.000Z</published>
    <updated>2021-08-09T14:50:01.024Z</updated>
    
    <content type="html"><![CDATA[<ul><li><h3 id="DevOps"><a href="#DevOps" class="headerlink" title="DevOps"></a>DevOps</h3><ul><li>什么是DevOps：开发+测试+运维 交集</li><li>一专多能，配合提效</li><li>核心：CI/CD（持续集成/持续交付） 多环境-构建-打包-测试-上线-监控</li><li>快速迭代产品，每次代码的改动都触发校验，每刻都可进行新版本的上线</li><li>持续开发、持续集成、持续测试、持续部署、持续监控</li></ul></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;h3 id=&quot;DevOps&quot;&gt;&lt;a href=&quot;#DevOps&quot; class=&quot;headerlink&quot; title=&quot;DevOps&quot;&gt;&lt;/a&gt;DevOps&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;什么是DevOps：开发+测试+运维 交集&lt;/li&gt;
&lt;li&gt;一专多能，配合提
      
    
    </summary>
    
      <category term="DevOps" scheme="http://www.ldclass.club/categories/DevOps/"/>
    
    
      <category term="DevOps" scheme="http://www.ldclass.club/tags/DevOps/"/>
    
  </entry>
  
  <entry>
    <title>DDD领域驱动设计</title>
    <link href="http://www.ldclass.club/2021/08/10/ddd-ling-yu-qu-dong-she-ji/"/>
    <id>http://www.ldclass.club/2021/08/10/ddd-ling-yu-qu-dong-she-ji/</id>
    <published>2021-08-09T21:51:36.000Z</published>
    <updated>2021-08-09T13:57:51.204Z</updated>
    
    <content type="html"><![CDATA[<ul><li><h3 id="DDD领域驱动设计"><a href="#DDD领域驱动设计" class="headerlink" title="DDD领域驱动设计"></a>DDD领域驱动设计</h3><ul><li>什么是DDD：领域驱动设计，领域专家—&gt;电商领域/支付领域/物流领域/在线教育等</li><li>步骤：领域分析—&gt;领域设计—&gt;领域实现—&gt;循环迭代优化</li><li>DDD是一套思想，不通团队实行DDD都有不同的理解，不是每个项目都适合</li></ul></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;h3 id=&quot;DDD领域驱动设计&quot;&gt;&lt;a href=&quot;#DDD领域驱动设计&quot; class=&quot;headerlink&quot; title=&quot;DDD领域驱动设计&quot;&gt;&lt;/a&gt;DDD领域驱动设计&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;什么是DDD：领域驱动设计，领域专家—&amp;gt;电商领域
      
    
    </summary>
    
      <category term="DDD" scheme="http://www.ldclass.club/categories/DDD/"/>
    
    
      <category term="DDD" scheme="http://www.ldclass.club/tags/DDD/"/>
    
  </entry>
  
  <entry>
    <title>解决方案分析方法论SWOT</title>
    <link href="http://www.ldclass.club/2021/08/10/jie-jue-fang-an-fen-xi-fang-fa-lun-swot/"/>
    <id>http://www.ldclass.club/2021/08/10/jie-jue-fang-an-fen-xi-fang-fa-lun-swot/</id>
    <published>2021-08-09T21:41:14.000Z</published>
    <updated>2021-08-09T13:48:12.124Z</updated>
    
    <content type="html"><![CDATA[<ul><li><h3 id="SWOT"><a href="#SWOT" class="headerlink" title="SWOT"></a>SWOT</h3><ul><li>S(strengths)是优势</li><li>W(weaknesses)是劣势</li><li>O(opportunities)是机会</li><li>T(threats)是威胁</li></ul></li><li><h3 id="SMART"><a href="#SMART" class="headerlink" title="SMART"></a>SMART</h3><ul><li><p>SMART原则【目标管理、设置】</p><ul><li><p><strong>Specific</strong>：目标要具体</p></li><li><p><strong>Measurable</strong>：目标成果要可衡量（量化）</p></li><li><p><strong>Attainable</strong>：目标要可实现，避免过高/过低</p></li><li><p><strong>Relevant</strong>：与其他目标有一定的相关性</p></li><li><p><strong>Time bound</strong>：目标必须有明确的期限</p></li><li><p><strong>意义</strong>：在制定工作目标或者任务目标时，考虑一下目标与计划是不是SMART化的。只有具备SMART化的计划才是具有良好可实施性的，也才能指导保证计划得以实现</p></li><li><p><strong>OKR</strong>：绩效考核 </p></li></ul></li></ul></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;h3 id=&quot;SWOT&quot;&gt;&lt;a href=&quot;#SWOT&quot; class=&quot;headerlink&quot; title=&quot;SWOT&quot;&gt;&lt;/a&gt;SWOT&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;S(strengths)是优势&lt;/li&gt;
&lt;li&gt;W(weaknesses)是劣势&lt;/li&gt;

      
    
    </summary>
    
      <category term="SWOT" scheme="http://www.ldclass.club/categories/SWOT/"/>
    
    
      <category term="SWOT" scheme="http://www.ldclass.club/tags/SWOT/"/>
    
  </entry>
  
  <entry>
    <title>Mysql主从复制</title>
    <link href="http://www.ldclass.club/2021/07/14/mysql-zhu-cong-fu-zhi/"/>
    <id>http://www.ldclass.club/2021/07/14/mysql-zhu-cong-fu-zhi/</id>
    <published>2021-07-13T17:45:07.000Z</published>
    <updated>2021-07-13T09:55:43.585Z</updated>
    
    <content type="html"><![CDATA[<ul><li><h4 id="主从同步复制有以下几种方式："><a href="#主从同步复制有以下几种方式：" class="headerlink" title="主从同步复制有以下几种方式："></a>主从同步复制有以下几种方式：</h4><ul><li>同步复制，master的变化，必须等待slave-1,slave-2,…,slave-n完成后才能返回。</li><li>异步复制，master只需要完成自己的数据库操作即可，至于slaves是否收到二进制日志，是否完成操作，不用关心。MYSQL的默认设置。</li><li>半同步复制，master只保证slaves中的一个操作成功，就返回，其他slave不管。这个功能，是由google为MYSQL引入的。</li></ul></li><li><h4 id="分别在两台centos-7系统上安装mysql-5-7"><a href="#分别在两台centos-7系统上安装mysql-5-7" class="headerlink" title="分别在两台centos 7系统上安装mysql 5.7"></a>分别在两台centos 7系统上安装mysql 5.7</h4></li><li><h4 id="master主服务器的配置"><a href="#master主服务器的配置" class="headerlink" title="master主服务器的配置"></a>master主服务器的配置</h4><ul><li>配置文件my.cnf的修改</li></ul><pre class="line-numbers language-cnf"><code class="language-cnf">#编辑my.cnf文件[root@localhost mysql]# vim /etc/my.cnf#在[mysqld]中添加：server-id=1log_bin=master-binlog_bin_index=master-bin.indexbinlog_do_db=test#备注：#server-id 服务器唯一标识。#log_bin 启动MySQL二进制日志，即数据同步语句，从数据库会一条一条的执行这些语句。#binlog_do_db 指定记录二进制日志的数据库，即需要复制的数据库名，如果复制多个数据库，重复设置这个选项即可。#binlog_ignore_db 指定不记录二进制日志的数据库，即不需要复制的数据库名，如果有多个数据库，重复设置这个选项即可。#其中需要注意的是，binlog_do_db和binlog_ignore_db为互斥选项，一般只需要一个即可。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>创建从服务器的用户和权限</li></ul><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#进入mysql数据库</span><span class="token punctuation">[</span>root<span class="token variable">@localhost</span> mysql<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># mysql -uroot -p</span>Enter password:<span class="token comment" spellcheck="true">#创建从数据库的masterbackup用户和权限</span>mysql<span class="token operator">></span> <span class="token keyword">grant</span> <span class="token keyword">replication</span> slave <span class="token keyword">on</span> <span class="token operator">*</span><span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">to</span> masterbackup@'<span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">17</span><span class="token punctuation">.</span><span class="token operator">%</span><span class="token string">' identified by '</span><span class="token number">123456</span>'<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#备注</span><span class="token comment" spellcheck="true">#192.168.17.%通配符，表示0-255的IP都可访问主服务器，正式环境请配置指定从服务器IP</span><span class="token comment" spellcheck="true">#若将 192.168.17.% 改为 %，则任何ip均可作为其从数据库来访问主服务器</span><span class="token comment" spellcheck="true">#退出mysql</span>mysql<span class="token operator">></span> <span class="token keyword">exit</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>重启mysql服务</li></ul><pre class="line-numbers language-shell"><code class="language-shell">[root@localhost mysql]# systemctl restart mysql.service<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>查看主服务器状态</li></ul><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#进入mysql数据库</span><span class="token punctuation">[</span>root<span class="token variable">@localhost</span> mysql<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># mysql -uroot -p</span>Enter password:<span class="token comment" spellcheck="true">#查看主服务器状态</span>mysql<span class="token operator">></span> <span class="token keyword">show</span> master <span class="token keyword">status</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------------------+----------+--------------+------------------+-------------------+</span><span class="token operator">|</span> <span class="token keyword">File</span>              <span class="token operator">|</span> Position <span class="token operator">|</span> Binlog_Do_DB <span class="token operator">|</span> Binlog_Ignore_DB <span class="token operator">|</span> Executed_Gtid_Set <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------------------+----------+--------------+------------------+-------------------+</span><span class="token operator">|</span> master<span class="token operator">-</span>bin<span class="token number">.000001</span> <span class="token operator">|</span>      <span class="token number">154</span> <span class="token operator">|</span> test         <span class="token operator">|</span>                  <span class="token operator">|</span>                   <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------------------+----------+--------------+------------------+-------------------+</span><span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><h4 id="slave从服务器的配置"><a href="#slave从服务器的配置" class="headerlink" title="slave从服务器的配置"></a>slave从服务器的配置</h4><ul><li>配置文件my.cnf的修改</li></ul><pre class="line-numbers language-cnf"><code class="language-cnf">#根据上一篇文章，编辑my.cnf文件[root@localhost mysql]# vim /etc/my.cnf#在[mysqld]中添加：server-id=2relay-log=slave-relay-binrelay-log-index=slave-relay-bin.index#replicate-do-db=test#备注：#server-id 服务器唯一标识，如果有多个从服务器，每个服务器的server-id不能重复，跟IP一样是唯一标识，如果你没设置server-id或者设置为0，则从服务器不会连接到主服务器。#relay-log 启动MySQL二进制日志，可以用来做数据备份和崩溃恢复，或主服务器挂掉了，将此从服务器作为其他从服务器的主服务器。#replicate-do-db 指定同步的数据库，如果复制多个数据库，重复设置这个选项即可。若在master端不指定binlog-do-db，则在slave端可用replication-do-db来过滤。#replicate-ignore-db 不需要同步的数据库，如果有多个数据库，重复设置这个选项即可。#其中需要注意的是，replicate-do-db和replicate-ignore-db为互斥选项，一般只需要一个即可。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>重启mysql服务</li></ul><pre class="line-numbers language-shell"><code class="language-shell">[root@localhost mysql]# systemctl restart mysql.service<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>连接master主服务器</li></ul><pre class="line-numbers language-mysql"><code class="language-mysql">#进入mysql数据库[root@localhost mysql]# mysql -uroot -pEnter password:#连接master主服务器mysql> change master to master_host='192.168.17.130',master_port=3306,master_user='masterbackup',master_password='123456',master_log_file='master-bin.000001',master_log_pos=154;#备注：#master_host对应主服务器的IP地址。#master_port对应主服务器的端口。#master_log_file对应show master status显示的File列：master-bin.000001。#master_log_pos对应show master status显示的Position列：154。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>启动slave数据同步</li></ul><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#启动slave数据同步</span>mysql<span class="token operator">></span> <span class="token keyword">start</span> slave<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#停止slave数据同步（若有需要）</span>mysql<span class="token operator">></span> stop slave<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li>查看slave信息，Slave_IO_Running和Slave_SQL_Running都为yes，则表示同步成功。</li></ul><pre class="line-numbers language-sql"><code class="language-sql">mysql<span class="token operator">></span> <span class="token keyword">show</span> slave <span class="token keyword">status</span>\G<span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token number">1</span><span class="token punctuation">.</span> <span class="token keyword">row</span> <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>               Slave_IO_State: Waiting <span class="token keyword">for</span> master <span class="token keyword">to</span> send event                  Master_Host: <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">70.129</span>                  Master_User: <span class="token keyword">backup</span>                  Master_Port: <span class="token number">13306</span>                Connect_Retry: <span class="token number">60</span>              Master_Log_File: master<span class="token operator">-</span>bin<span class="token number">.000001</span>          Read_Master_Log_Pos: <span class="token number">154</span>               Relay_Log_File: slave<span class="token operator">-</span>relay<span class="token operator">-</span>bin<span class="token number">.000003</span>                Relay_Log_Pos: <span class="token number">321</span>        Relay_Master_Log_File: master<span class="token operator">-</span>bin<span class="token number">.000001</span>             Slave_IO_Running: Yes            Slave_SQL_Running: Yes              Replicate_Do_DB:          Replicate_Ignore_DB:           Replicate_Do_Table:       Replicate_Ignore_Table:      Replicate_Wild_Do_Table:  Replicate_Wild_Ignore_Table:                   Last_Errno: <span class="token number">0</span>                   Last_Error:                 Skip_Counter: <span class="token number">0</span>          Exec_Master_Log_Pos: <span class="token number">154</span>              Relay_Log_Space: <span class="token number">528</span>              Until_Condition: None               Until_Log_File:                Until_Log_Pos: <span class="token number">0</span>           Master_SSL_Allowed: <span class="token keyword">No</span>           Master_SSL_CA_File:           Master_SSL_CA_Path:              Master_SSL_Cert:            Master_SSL_Cipher:               Master_SSL_Key:        Seconds_Behind_Master: <span class="token number">0</span>Master_SSL_Verify_Server_Cert: <span class="token keyword">No</span>                Last_IO_Errno: <span class="token number">0</span>                Last_IO_Error:               Last_SQL_Errno: <span class="token number">0</span>               Last_SQL_Error:  Replicate_Ignore_Server_Ids:             Master_Server_Id: <span class="token number">1</span>                  Master_UUID: <span class="token number">8ffb067d</span><span class="token operator">-</span><span class="token number">b7bb</span><span class="token operator">-</span><span class="token number">11eb</span><span class="token operator">-</span><span class="token number">8ced</span><span class="token operator">-</span><span class="token number">000c291e5989</span>             Master_Info_File: <span class="token operator">/</span>usr<span class="token operator">/</span><span class="token keyword">local</span><span class="token operator">/</span>mysql<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>master<span class="token punctuation">.</span>info                    SQL_Delay: <span class="token number">0</span>          SQL_Remaining_Delay: <span class="token boolean">NULL</span>      Slave_SQL_Running_State: Slave has <span class="token keyword">read</span> <span class="token keyword">all</span> relay log<span class="token punctuation">;</span> waiting <span class="token keyword">for</span> more updates           Master_Retry_Count: <span class="token number">86400</span>                  Master_Bind:      Last_IO_Error_Timestamp:     Last_SQL_Error_Timestamp:               Master_SSL_Crl:           Master_SSL_Crlpath:           Retrieved_Gtid_Set:            Executed_Gtid_Set:                Auto_Position: <span class="token number">0</span>         Replicate_Rewrite_DB:                 Channel_Name:           Master_TLS_Version:<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;主从同步复制有以下几种方式：&quot;&gt;&lt;a href=&quot;#主从同步复制有以下几种方式：&quot; class=&quot;headerlink&quot; title=&quot;主从同步复制有以下几种方式：&quot;&gt;&lt;/a&gt;主从同步复制有以下几种方式：&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;同步复制，ma
      
    
    </summary>
    
      <category term="MYSQL" scheme="http://www.ldclass.club/categories/MYSQL/"/>
    
    
      <category term="MYSQL" scheme="http://www.ldclass.club/tags/MYSQL/"/>
    
  </entry>
  
  <entry>
    <title>Springboot静态资源加载</title>
    <link href="http://www.ldclass.club/2021/06/26/springboot-jing-tai-zi-yuan-jia-zai/"/>
    <id>http://www.ldclass.club/2021/06/26/springboot-jing-tai-zi-yuan-jia-zai/</id>
    <published>2021-06-25T22:53:10.000Z</published>
    <updated>2021-06-25T14:57:28.773Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>静态资源加载顺序</p><pre class="line-numbers language-yml"><code class="language-yml">classpath:/META-INF/resources/, classpath:/resources/, classpath:/static/, classpath:/public/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>spring boot配置文件中 <code>spring.mvc.static-path-pattern</code> 配置项</p><pre class="line-numbers language-yml"><code class="language-yml">spring:    mvc:        static-path-pattern: /static/**<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>项目中<code>application.yml</code>配置文件中，存在如上配置项时，访问静态资源文件要加<code>static</code>才行，当把这个配置项除掉时，不用加static作为前缀亦可进行正常访问。</p></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;p&gt;静态资源加载顺序&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-yml&quot;&gt;&lt;code class=&quot;language-yml&quot;&gt;classpath:/META-INF/resources/, classpath:/resour
      
    
    </summary>
    
      <category term="SpringBoot" scheme="http://www.ldclass.club/categories/SpringBoot/"/>
    
    
      <category term="SpringBoot" scheme="http://www.ldclass.club/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>数据库定时备份</title>
    <link href="http://www.ldclass.club/2021/06/25/shu-ju-ku-ding-shi-bei-fen/"/>
    <id>http://www.ldclass.club/2021/06/25/shu-ju-ku-ding-shi-bei-fen/</id>
    <published>2021-06-24T18:06:45.000Z</published>
    <updated>2021-06-24T10:24:15.079Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Windows</p></blockquote><ul><li>mysql</li></ul><pre class="line-numbers language-bat"><code class="language-bat">rem ******MySQL backup start********@echo offset "Ymd=%DATE:~,4%%DATE:~5,2%%DATE:~8,2%%time:~0,2%%time:~3,2%""C:\mysql5.7\bin\mysqldump" -uroot -pRoot@123 -h127.0.0.1 --databases plat > C:\mysqldata\plat_%Ymd%.sql@echo onrem ******MySQL backup end********<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>oracle</li></ul><pre class="line-numbers language-bat"><code class="language-bat">rem ******MySQL backup start********@echo offset adir=%DATE:~,4%%DATE:~5,2%%DATE:~8,2%%time:~0,2%%time:~3,2%exp rjm/rjm@orcl owner=rjm file=C:\oracledata\rjm_%adir%.dmp log='C:\oracledata\rjm_%adir%.log'@echo onrem ******MySQL backup end********<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>配置定时任务</p><ul><li>首先是创建一个任务，在附件–&gt;系统工具中可以看到任务计划程序： </li></ul><img src="/2021/06/25/shu-ju-ku-ding-shi-bei-fen/1.png" title="配置定时任务"><ul><li>点击打开后可以看到主界面： </li></ul><img src="/2021/06/25/shu-ju-ku-ding-shi-bei-fen/2.png" title="配置定时任务"><ul><li>点击右侧的创建基本任务，随便输入一个名称后点击【下一步】： </li></ul><img src="/2021/06/25/shu-ju-ku-ding-shi-bei-fen/3.png" title="配置定时任务"><ul><li>然后是选择执行频率，我这里选择每天，然后点击【下一步】： </li></ul><img src="/2021/06/25/shu-ju-ku-ding-shi-bei-fen/4.png" title="配置定时任务"><ul><li>接着是设置开始时间和具体几点执行，我这里选择每天18点执行，从今天开始，然后点击【下一步】： </li></ul><img src="/2021/06/25/shu-ju-ku-ding-shi-bei-fen/5.png" title="配置定时任务"><ul><li>由于我们执行的是批处理脚本，所以直接选择【启动程序】即可，然后点击【下一步】： </li></ul><img src="/2021/06/25/shu-ju-ku-ding-shi-bei-fen/6.png" title="配置定时任务"><ul><li>接着就是选择我们脚本的位置，如果有参数的话填上参数，点击【下一步】： </li></ul><img src="/2021/06/25/shu-ju-ku-ding-shi-bei-fen/7.png" title="配置定时任务"><ul><li>最后确认一下配置无误，点击【完成】： </li></ul><img src="/2021/06/25/shu-ju-ku-ding-shi-bei-fen/8.png" title="配置定时任务"><ul><li>由于我们勾选了当点击【完成】时打开任务属性对话框，所以接下来我们看到的就是任务属性对话框，我们在这里还要再做一些设置：</li></ul><img src="/2021/06/25/shu-ju-ku-ding-shi-bei-fen/9.png" title="配置定时任务"><ul><li>如上图所示，这个配置非常重要，即选中“不管用户是否登录都要运行”和“使用最高权限运行”，注意这一点尤为重要，如果不选中这两项那么批处理脚本就无法自动执行完毕。最后点击【确定】并输入密码即可： </li></ul><img src="/2021/06/25/shu-ju-ku-ding-shi-bei-fen/10.png" title="配置定时任务"><ul><li>最后在首页就可以看到刚才添加的任务了： </li></ul><ul><li>双击该任务即可进入任务详情页面，也就能看到上次和下次的执行时间以及上次的执行结果： </li></ul><img src="/2021/06/25/shu-ju-ku-ding-shi-bei-fen/12.png" title="配置定时任务"></li></ul><blockquote><p>Linux</p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;Windows&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;mysql&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;line-numbers language-bat&quot;&gt;&lt;code class=&quot;language-bat&quot;&gt;rem **
      
    
    </summary>
    
      <category term="数据库" scheme="http://www.ldclass.club/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="数据库" scheme="http://www.ldclass.club/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>pom配置使用lib下的jar包</title>
    <link href="http://www.ldclass.club/2021/06/25/pom-pei-zhi-shi-yong-lib-xia-de-jar-bao/"/>
    <id>http://www.ldclass.club/2021/06/25/pom-pei-zhi-shi-yong-lib-xia-de-jar-bao/</id>
    <published>2021-06-24T16:04:08.000Z</published>
    <updated>2021-06-24T08:51:26.503Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>问题描述</p><ul><li>在Maven项目中，jar包的管理一般情况下都可以使用pom.xml来配置管理，但也有一些时候：我们项目中使用了一个内部jar文件，可是这个文件我们又没有开放到maven库中，还有就是在使用BCM或者docker的时候，项目的构建是实时同步GIt的，需要将本地引入的jar包上传到Git，这样导入到Git上的jar包，才能在构建的时候，被正确识别。这时我们会将jar包放到我们项目的src/main/webapp/WEB-INF/lib中。 如果我们不对pom.xml进行特殊配置的话，maven打包是不会自动去引用和编译lib中的jar文件的，所以需要我们修改下pom.xml文件。</li></ul></li><li><p>解决</p><ul><li>备注：如果不在src前加入${project.basedir}有可能在使用BCM或者Docker部署的时候，无法成功构建，本地和部署运行时候，识别的路径是有差异的。 </li></ul><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-compiler-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span><span class="token punctuation">></span></span>1.7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>source</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>target</span><span class="token punctuation">></span></span>1.7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>target</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>encoding</span><span class="token punctuation">></span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>encoding</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>compilerArguments</span><span class="token punctuation">></span></span>                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>extdirs</span><span class="token punctuation">></span></span>${project.basedir}/src/main/webapp/WEB-INF/lib<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>extdirs</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>compilerArguments</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;p&gt;问题描述&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在Maven项目中，jar包的管理一般情况下都可以使用pom.xml来配置管理，但也有一些时候：我们项目中使用了一个内部jar文件，可是这个文件我们又没有开放到maven库中，还有就是在使用BCM或者docker的时候，
      
    
    </summary>
    
      <category term="Maven" scheme="http://www.ldclass.club/categories/Maven/"/>
    
    
      <category term="Maven" scheme="http://www.ldclass.club/tags/Maven/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot-GA/PRE/SNAPSHOT详解</title>
    <link href="http://www.ldclass.club/2021/06/24/springboot-ga-pre-snapshot-xiang-jie/"/>
    <id>http://www.ldclass.club/2021/06/24/springboot-ga-pre-snapshot-xiang-jie/</id>
    <published>2021-06-24T13:59:00.000Z</published>
    <updated>2021-06-24T08:41:37.548Z</updated>
    
    <content type="html"><![CDATA[<ul><li>GA/PRE/SNAPSHOT详解<ul><li>GA: General Availability,正式发布的版本，官方推荐使用该版本，国外很多项目都是使用GA来表示正式发布版本的</li><li>PRE： 预览版，主要是用来内部开发人员和测试人员测试使用，因此不建议使用</li><li>SNAPSHOT: 快照版，可以稳定使用，且该版本会一直进行小量的优化和改进</li></ul></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;GA/PRE/SNAPSHOT详解&lt;ul&gt;
&lt;li&gt;GA: General Availability,正式发布的版本，官方推荐使用该版本，国外很多项目都是使用GA来表示正式发布版本的&lt;/li&gt;
&lt;li&gt;PRE： 预览版，主要是用来内部开发人员和测试人员测试使用，
      
    
    </summary>
    
      <category term="SpringBoot" scheme="http://www.ldclass.club/categories/SpringBoot/"/>
    
    
      <category term="SpringBoot" scheme="http://www.ldclass.club/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>IDEA-properties中文乱码</title>
    <link href="http://www.ldclass.club/2021/06/24/idea-properties-zhong-wen-luan-ma/"/>
    <id>http://www.ldclass.club/2021/06/24/idea-properties-zhong-wen-luan-ma/</id>
    <published>2021-06-24T13:57:09.000Z</published>
    <updated>2021-06-24T08:49:21.775Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>问题描述</p><ul><li>打开<code>.properties</code>文件后，汉字都变成了<code>\u6295\u7968\u6210\u529f\uff0c\u8c22\u8c22\u53c2\u4e0e</code></li><li>这是汉字的<code>unicode</code>编码。</li></ul></li><li><p>解决：</p><p>在project settings - File Encoding，在标红的选项上打上勾，确定即可</p><img src="/2021/06/24/idea-properties-zhong-wen-luan-ma/1.png" title="IDEA配置"></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;p&gt;问题描述&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;打开&lt;code&gt;.properties&lt;/code&gt;文件后，汉字都变成了&lt;code&gt;\u6295\u7968\u6210\u529f\uff0c\u8c22\u8c22\u53c2\u4e0e&lt;/code&gt;&lt;/li&gt;
&lt;
      
    
    </summary>
    
      <category term="IDEA" scheme="http://www.ldclass.club/categories/IDEA/"/>
    
    
      <category term="IDEA" scheme="http://www.ldclass.club/tags/IDEA/"/>
    
  </entry>
  
  <entry>
    <title>Oracle10g安装</title>
    <link href="http://www.ldclass.club/2021/06/24/oracle10g-an-zhuang/"/>
    <id>http://www.ldclass.club/2021/06/24/oracle10g-an-zhuang/</id>
    <published>2021-06-23T18:30:24.000Z</published>
    <updated>2021-06-24T09:06:29.742Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p><strong>问题一</strong></p><ul><li><p>描述</p><ul><li>oracle安装中出现：检查操作系统版本必须是5.0,5.1,or 6.0。实际为6.1</li></ul></li><li><p>解决</p><ul><li>更改install文件夹下的配置文件<code>oraparam.ini</code></li></ul><pre class="line-numbers language-ini"><code class="language-ini"><span class="token selector">[Certified Versions]</span>#You can customise error message shown for failure, provide value for CERTIFIED_VERSION_FAILURE_MESSAGE<span class="token constant">Windows</span><span class="token attr-value"><span class="token punctuation">=</span>5.0,5.1,5.2,6.0,6.1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-ini"><code class="language-ini">#[Windows-6.1-required]#Minimum display colours for OUI to run<span class="token constant">MIN_DISPLAY_COLORS</span><span class="token attr-value"><span class="token punctuation">=</span>256</span>#Minimum CPU speed required for OUI<span class="token constant">#CPU</span><span class="token attr-value"><span class="token punctuation">=</span>300</span>#[Windows-6.1-optional]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;问题一&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;描述&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;oracle安装中出现：检查操作系统版本必须是5.0,5.1,or 6.0。实际为6.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;解决&lt;/p&gt;
      
    
    </summary>
    
      <category term="Oracle" scheme="http://www.ldclass.club/categories/Oracle/"/>
    
    
      <category term="Oracle" scheme="http://www.ldclass.club/tags/Oracle/"/>
    
  </entry>
  
  <entry>
    <title>oracle10g配置远程连接</title>
    <link href="http://www.ldclass.club/2021/06/24/oracle10g-pei-zhi-yuan-cheng-lian-jie/"/>
    <id>http://www.ldclass.club/2021/06/24/oracle10g-pei-zhi-yuan-cheng-lian-jie/</id>
    <published>2021-06-23T18:29:32.000Z</published>
    <updated>2021-06-24T09:13:22.407Z</updated>
    
    <content type="html"><![CDATA[<ul><li>采用图形化工具</li></ul><p>​    <img src="/2021/06/24/oracle10g-pei-zhi-yuan-cheng-lian-jie/1.png" title="配置"></p><p>​    <img src="/2021/06/24/oracle10g-pei-zhi-yuan-cheng-lian-jie/2.png" title="配置"></p><p>​    <img src="/2021/06/24/oracle10g-pei-zhi-yuan-cheng-lian-jie/3.png" title="配置"></p><p>​    <img src="/2021/06/24/oracle10g-pei-zhi-yuan-cheng-lian-jie/4.png" title="配置"></p><p>​    <img src="/2021/06/24/oracle10g-pei-zhi-yuan-cheng-lian-jie/5.png" title="配置"></p><p>​    <img src="/2021/06/24/oracle10g-pei-zhi-yuan-cheng-lian-jie/6.png" title="配置"></p><p>​    <img src="/2021/06/24/oracle10g-pei-zhi-yuan-cheng-lian-jie/7.png" title="配置"></p><ul><li><p>可以用命令直接配</p><ul><li>在oracle安装目录下找到tnsnames.ora</li></ul><img src="/2021/06/24/oracle10g-pei-zhi-yuan-cheng-lian-jie/8.png" title="配置"><ul><li>添加以下配置</li></ul><pre class="line-numbers language-ora"><code class="language-ora">test=(DESCRIPTION =    (ADDRESS_LIST =        (ADDRESS = (PROTOCOL = TCP)(HOST = 本机ip4地址)(PORT = 1521))    )    (CONNECT_DATA =        (SERVICE_NAME = orcl)    ))<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;采用图形化工具&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;​    &lt;img src=&quot;/2021/06/24/oracle10g-pei-zhi-yuan-cheng-lian-jie/1.png&quot; title=&quot;配置&quot;&gt;&lt;/p&gt;
&lt;p&gt;​    &lt;img src=&quot;/20
      
    
    </summary>
    
      <category term="Oracle" scheme="http://www.ldclass.club/categories/Oracle/"/>
    
    
      <category term="Oracle" scheme="http://www.ldclass.club/tags/Oracle/"/>
    
  </entry>
  
  <entry>
    <title>MYSQL免安装版配置</title>
    <link href="http://www.ldclass.club/2021/06/24/mysql-mian-an-zhuang-ban-pei-zhi/"/>
    <id>http://www.ldclass.club/2021/06/24/mysql-mian-an-zhuang-ban-pei-zhi/</id>
    <published>2021-06-23T16:03:12.000Z</published>
    <updated>2021-06-23T18:33:13.043Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>下载</p><ul><li>下载地址：<code>https://dev.mysql.com/downloads/mysql/</code>·</li></ul></li><li><p>解压</p></li><li><p>配置</p><ul><li>在文件目录 中新建一个<code>my.ini</code>的文件，代码如下，把其中的两处工作路径改为自己的按照路径即可。</li></ul><pre class="line-numbers language-ini"><code class="language-ini"><span class="token selector">[mysqld]</span># 设置3306端口<span class="token constant">port</span><span class="token attr-value"><span class="token punctuation">=</span>3306</span># 设置mysql的安装目录<span class="token constant">basedir</span><span class="token attr-value"><span class="token punctuation">=</span>D:\Mylargeprogram\Mysql\mysql-8.0.12-winx64</span># 设置mysql数据库的数据的存放目录<span class="token constant">datadir</span><span class="token attr-value"><span class="token punctuation">=</span>D:\Mylargeprogram\Mysql\mysql-8.0.12-winx64\data</span># 允许最大连接数<span class="token constant">max_connections</span><span class="token attr-value"><span class="token punctuation">=</span>200</span># 允许连接失败的次数。这是为了防止有人从该主机试图攻击数据库系统<span class="token constant">max_connect_errors</span><span class="token attr-value"><span class="token punctuation">=</span>10</span># 服务端使用的字符集默认为UTF8<span class="token constant">character-set-server</span><span class="token attr-value"><span class="token punctuation">=</span>utf8</span># 创建新表时将使用的默认存储引擎<span class="token constant">default-storage-engine</span><span class="token attr-value"><span class="token punctuation">=</span>INNODB</span># 默认使用“mysql_native_password”插件认证<span class="token constant">default_authentication_plugin</span><span class="token attr-value"><span class="token punctuation">=</span>mysql_native_password</span><span class="token selector">[mysql]</span># 设置mysql客户端默认字符集<span class="token constant">default-character-set</span><span class="token attr-value"><span class="token punctuation">=</span>utf8</span><span class="token selector">[client]</span># 设置mysql客户端连接服务端时默认使用的端口<span class="token constant">port</span><span class="token attr-value"><span class="token punctuation">=</span>3306</span><span class="token constant">default-character-set</span><span class="token attr-value"><span class="token punctuation">=</span>utf8</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;p&gt;下载&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;下载地址：&lt;code&gt;https://dev.mysql.com/downloads/mysql/&lt;/code&gt;·&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;解压&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;配置&lt;/p&gt;
&lt;ul
      
    
    </summary>
    
      <category term="MYSQL" scheme="http://www.ldclass.club/categories/MYSQL/"/>
    
    
      <category term="MYSQL" scheme="http://www.ldclass.club/tags/MYSQL/"/>
    
  </entry>
  
  <entry>
    <title>Windows2012R2安装Oracle</title>
    <link href="http://www.ldclass.club/2021/06/21/windows2012r2-an-zhuang-oracle/"/>
    <id>http://www.ldclass.club/2021/06/21/windows2012r2-an-zhuang-oracle/</id>
    <published>2021-06-20T19:19:53.000Z</published>
    <updated>2021-06-20T13:39:37.344Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>安装</p></blockquote><ul><li><p>下载oracle11g的安装文件</p><img src="/2021/06/21/windows2012r2-an-zhuang-oracle/1.png" title="安装文件"></li><li><p>将两个压缩文件解压到同一目录下，尽量不要出现中文</p></li><li><p>解压后出现database文件夹，点击文件夹中setup启动安装</p><img src="/2021/06/21/windows2012r2-an-zhuang-oracle/2.png" title="安装文件"></li><li><p>如果在启动安装时报错，提示环境满足最低要求，错误代码NS-13001,则修改配置文件</p><ul><li>位置：C:\Oracle\database\stage\cvu\cvu_prereq.xml</li></ul><pre class="line-numbers language-xml"><code class="language-xml">     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>OPERATING_SYSTEM</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>OPERATING_SYSTEM</span> <span class="token attr-name">RELEASE</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>6.2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>VERSION</span> <span class="token attr-name">VALUE</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ARCHITECTURE</span> <span class="token attr-name">VALUE</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>64-bit<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>NAME</span> <span class="token attr-name">VALUE</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>WindowsServer2012R2<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ENV_VAR_LIST</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ENV_VAR</span> <span class="token attr-name">NAME</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>PATH<span class="token punctuation">"</span></span> <span class="token attr-name">MAX_LENGTH</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1023<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ENV_VAR_LIST</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>OPERATING_SYSTEM</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="/2021/06/21/windows2012r2-an-zhuang-oracle/3.png" title="配置"><ul><li>这是因为windows12对oracle11g不兼容，添加上图配置文件即可</li></ul></li><li><p>安装</p><img src="/2021/06/21/windows2012r2-an-zhuang-oracle/4.png" title="配置"><img src="/2021/06/21/windows2012r2-an-zhuang-oracle/5.png" title="配置"><img src="/2021/06/21/windows2012r2-an-zhuang-oracle/6.png" title="配置"><img src="/2021/06/21/windows2012r2-an-zhuang-oracle/7.png" title="配置"><p>这一步记好设置的口令 ，是之后sys账户的口令，不设置的话sys账户的默认口令是manager。</p><img src="/2021/06/21/windows2012r2-an-zhuang-oracle/8.png" title="配置"><img src="/2021/06/21/windows2012r2-an-zhuang-oracle/9.png" title="配置"><img src="/2021/06/21/windows2012r2-an-zhuang-oracle/10.png" title="配置"><img src="/2021/06/21/windows2012r2-an-zhuang-oracle/11.png" title="配置"></li><li><p>配置环境变量</p><ul><li>Oracle语言：<code>NLS_LANG = SIMPLIFIED CHINESE_CHINA.ZHS16GBK</code></li></ul><img src="/2021/06/21/windows2012r2-an-zhuang-oracle/12.png" title="配置"><ul><li>监听：<code>TNS_ADMIN = C:\app\Administrator\product\11.2.0\dbhome_1\NETWORK\ADMIN</code></li></ul><img src="/2021/06/21/windows2012r2-an-zhuang-oracle/13.png" title="配置"></li><li><p>至此，oracle的安装就完成了</p></li></ul><blockquote><p>开放远程连接</p></blockquote><ul><li><p>安装完之后，oracle默认配置的监听是localhost，如果不仅仅是本地访问，需要其他机器能访问到的话，需要修改监听的地址</p></li><li><p>Oracle11g安装后只有本地可以连接，远程无法连接，而且本地只能配置成localhost配置成IP地址也无法连接。这是因为安装oracle的时候没有配置远程的监听，默认的监听是localhost</p></li><li><p>解决方法1：（简单，不用修改配置文件）</p><ul><li><p>打开net manager</p><img src="/2021/06/21/windows2012r2-an-zhuang-oracle/14.png" title="配置"></li><li><p>按照下图找到配置监听的地方，点击添加新地址</p><img src="/2021/06/21/windows2012r2-an-zhuang-oracle/15.png" title="配置"></li><li><p>我们需要配置IP地址访问的监听才能使数据库可以被远程访问</p><ul><li><strong>这个IP地址要写对，写成本机IP4的地址</strong></li></ul><img src="/2021/06/21/windows2012r2-an-zhuang-oracle/16.png" title="配置"></li><li><p>这样远程就可以连接了。</p></li><li><p>修改之后可能会有延迟，不会立刻生效。如果还是无法连接，可以将oracle服务重启。</p><img src="/2021/06/21/windows2012r2-an-zhuang-oracle/17.png" title="配置"></li><li><p>此时在你数据库安装目录下找到下面的配置文件</p><ul><li>该配置文件里面就新增了一条我们刚刚增加的IP和端口</li><li>其实我们也可以直接修改该配置文件来达到上面的效果</li></ul><img src="/2021/06/21/windows2012r2-an-zhuang-oracle/18.png" title="配置"><img src="/2021/06/21/windows2012r2-an-zhuang-oracle/19.png" title="配置"></li></ul></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;安装&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;下载oracle11g的安装文件&lt;/p&gt;
&lt;img src=&quot;/2021/06/21/windows2012r2-an-zhuang-oracle/1.png&quot; title=&quot;安装文
      
    
    </summary>
    
      <category term="Oracle" scheme="http://www.ldclass.club/categories/Oracle/"/>
    
    
      <category term="Oracle" scheme="http://www.ldclass.club/tags/Oracle/"/>
    
  </entry>
  
  <entry>
    <title>Oracle-system用户忘记密码的解决方法</title>
    <link href="http://www.ldclass.club/2021/06/18/oracle-system-yong-hu-wang-ji-mi-ma-de-jie-jue-fang-fa/"/>
    <id>http://www.ldclass.club/2021/06/18/oracle-system-yong-hu-wang-ji-mi-ma-de-jie-jue-fang-fa/</id>
    <published>2021-06-18T12:49:02.000Z</published>
    <updated>2021-06-18T04:57:06.275Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>依次输入以下命令</p><ul><li><code>sqlplus /nolog</code></li><li><code>conn / as sysdba</code></li></ul></li><li><p>查询下是否能看到实例的用户</p><ul><li><code>select username,password from dba_users;</code></li></ul></li><li><p>修改指定用户密码</p><ul><li><code>alter user system identified by system;</code></li></ul></li><li><p><strong>注意</strong>： </p><ul><li><p>密码第一位不能为数字。</p></li><li><p>不能有@</p><ul><li>比如我的密码是<code>system@123</code>，那使用<code>sqlplus</code>登录的时候就理解成<code>sqlplus system/system@123</code>,这样<code>sqlplus</code>就理解成<code>system</code>后面的就是数据库的连接字符串，这样自然就报错并提示<code>TNS: 无法解析指定的连接标识符或no listener</code></li></ul></li><li><p>不能有空格</p></li></ul></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;p&gt;依次输入以下命令&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sqlplus /nolog&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;conn / as sysdba&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;查询下是否能看到实例的用户&lt;/
      
    
    </summary>
    
      <category term="Oracle" scheme="http://www.ldclass.club/categories/Oracle/"/>
    
    
      <category term="Oracle" scheme="http://www.ldclass.club/tags/Oracle/"/>
    
  </entry>
  
  <entry>
    <title>解决任意文件上传漏洞</title>
    <link href="http://www.ldclass.club/2021/06/17/jie-jue-ren-yi-wen-jian-shang-chuan-lou-dong/"/>
    <id>http://www.ldclass.club/2021/06/17/jie-jue-ren-yi-wen-jian-shang-chuan-lou-dong/</id>
    <published>2021-06-17T15:16:23.000Z</published>
    <updated>2021-06-17T08:24:36.067Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p><strong>问题描述</strong>：</p><ul><li>文件上传漏洞通常由于代码中对文件上传功能所上传的文件过滤不严或web服务器相关解析漏洞未修复而造成的，如果文件上传功能代码没有严格限制和验证用户上传的文件后缀、类型等，攻击者可通过文件上传点上传任意文件，包括网站后门文件（webshell）控制整个网站。</li></ul></li><li><p><strong>安全建议</strong></p><ul><li>对上传文件类型进行验证，除在前端验证外在后端依然要做验证，后端可以进行扩展名检测，重命名文件，MIME类型检测以及限制上传文件的大小等限制来防御，或是将上传的文件其他文件存储服务器中。</li><li>对上传文件内容进行过滤和校验。</li></ul></li><li><p><strong>解决方法</strong></p><ul><li>判断文件是否含有木马（读取流）</li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">/**     * 判断文件是否含有木马(读取流)     * @param inputStream     * @return     * @throws IOException     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">isFile</span><span class="token punctuation">(</span>InputStream inputStream<span class="token punctuation">)</span> <span class="token keyword">throws</span> IOException <span class="token punctuation">{</span>        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> byteArray <span class="token operator">=</span> IOUtils<span class="token punctuation">.</span><span class="token function">toByteArray</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>        String str <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>byteArray<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 匹配16进制中的 &lt;% ( ) %></span>        <span class="token comment" spellcheck="true">// 匹配16进制中的 &lt;? ( ) ?></span>        <span class="token comment" spellcheck="true">// 匹配16进制中的 &lt;script | /script> 大小写亦可</span>        <span class="token comment" spellcheck="true">// 通过匹配十六进制代码检测是否存在木马脚本</span>        String pattern <span class="token operator">=</span> <span class="token string">"(&lt;%.*%>)|(&lt;\\?.*\\?>)|(&lt;script.*/script>)"</span><span class="token punctuation">;</span>        Pattern mPattern <span class="token operator">=</span> Pattern<span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span>pattern<span class="token punctuation">)</span><span class="token punctuation">;</span>        Matcher mMatcher <span class="token operator">=</span> mPattern<span class="token punctuation">.</span><span class="token function">matcher</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 查找相应的字符串</span>        <span class="token keyword">boolean</span> flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>mMatcher<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//过滤java关键字(java import String print write( read() php request alert system)</span>            String keywordPattern <span class="token operator">=</span> <span class="token string">"(@eval\\()|(java)|(import)|(String)|(print)|(write)|(read\\(\\))|(php)|(request)|(alert)|(system)"</span><span class="token punctuation">;</span>            Pattern keywordmPattern <span class="token operator">=</span> Pattern<span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span>keywordPattern<span class="token punctuation">)</span><span class="token punctuation">;</span>            String keywordStr <span class="token operator">=</span> mMatcher<span class="token punctuation">.</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            Matcher keywordmMatcher <span class="token operator">=</span> keywordmPattern<span class="token punctuation">.</span><span class="token function">matcher</span><span class="token punctuation">(</span>keywordStr<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>keywordmMatcher<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> flag<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java"><code class="language-java">            InputStream inputStream <span class="token operator">=</span> file<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>ImageUtil<span class="token punctuation">.</span><span class="token function">isFile</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//TODO </span>            <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li>判断文件类型是否支持—–白名单</li></ul><pre class="line-numbers language-java"><code class="language-java">String houzhui <span class="token operator">=</span> fileName<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>fileName<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token function">suffixJudgement</span><span class="token punctuation">(</span>houzhui<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>num <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//TODO</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java"><code class="language-java">  <span class="token comment" spellcheck="true">/**     * 后缀判断     * @param fileType    文件类型     * @return     * @throws Exception     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">suffixJudgement</span><span class="token punctuation">(</span>String fileType<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//全部转换为小写</span>        fileType <span class="token operator">=</span> fileType<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//1.图片  2.文档 3.视频 5.音频 6.其他</span>        <span class="token keyword">int</span> type <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//其他</span>        String other <span class="token operator">=</span> <span class="token string">"txt,html,zip,cvs,rtf"</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//常见文档类型</span>        String file <span class="token operator">=</span> <span class="token string">"doc,docx,ppt,pptx,xls,xlsx,pdf"</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//常见视频格式</span>        String video <span class="token operator">=</span> <span class="token string">"mp4,flv,avi,mpg,wmv,mov,asx,asf,3gp"</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//图片</span>        String photo <span class="token operator">=</span> <span class="token string">"bmp,jpg,wbmp,jpeg,png,gif,psd,ico"</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//音频</span>        String audio <span class="token operator">=</span> <span class="token string">"mp3,wav"</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>photo<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>fileType<span class="token punctuation">)</span><span class="token punctuation">)</span>            type <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>fileType<span class="token punctuation">)</span><span class="token punctuation">)</span>            type <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>video<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>fileType<span class="token punctuation">)</span><span class="token punctuation">)</span>            type <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>audio<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>fileType<span class="token punctuation">)</span><span class="token punctuation">)</span>            type <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>other<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>fileType<span class="token punctuation">)</span><span class="token punctuation">)</span>            type <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> type<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>判断上传文件后缀——黑名单</li></ul><pre class="line-numbers language-java"><code class="language-java">    <span class="token comment" spellcheck="true">/**     * 比较上传文件是否合法     * @param type    文件类型     * @return     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> Boolean <span class="token function">IsIllegalFile</span><span class="token punctuation">(</span>String type<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//默认上传文件不非法</span>        Boolean IsIllegal <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//默认转换为小写进行对比</span>        type <span class="token operator">=</span> type<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//进行比较</span>        <span class="token keyword">switch</span> <span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">case</span> <span class="token string">"jsp"</span><span class="token operator">:</span>            IsIllegal <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">"php"</span><span class="token operator">:</span>            IsIllegal <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">"aspx"</span><span class="token operator">:</span>            IsIllegal <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">"html"</span><span class="token operator">:</span>            IsIllegal <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">"exe"</span><span class="token operator">:</span>            IsIllegal <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">"bat"</span><span class="token operator">:</span>            IsIllegal <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">"sh"</span><span class="token operator">:</span>            IsIllegal <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">"py"</span><span class="token operator">:</span>            IsIllegal <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">"csh"</span><span class="token operator">:</span>            IsIllegal <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">"asp"</span><span class="token operator">:</span>            IsIllegal <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">default</span><span class="token operator">:</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> IsIllegal<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">boolean</span> IsIllegal <span class="token operator">=</span> <span class="token function">IsIllegalFile</span><span class="token punctuation">(</span>houzhui<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>IsIllegal<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//TODO</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li>魔术数字</li></ul><pre class="line-numbers language-java"><code class="language-java">    <span class="token comment" spellcheck="true">/**      * 判断文件类型 (并返回文件的类型编号)     * @param path   文件路径     * @return 文件类型      */</span>      <span class="token keyword">public</span> <span class="token keyword">static</span> Integer <span class="token function">getTypeNum</span><span class="token punctuation">(</span>String path<span class="token punctuation">)</span> <span class="token keyword">throws</span> IOException<span class="token punctuation">,</span>Exception <span class="token punctuation">{</span>          FileInputStream is <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>        Integer typeNum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        String fileHead <span class="token operator">=</span> <span class="token function">getFileContent</span><span class="token punctuation">(</span>is<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span>fileHead <span class="token operator">==</span> null <span class="token operator">||</span> fileHead<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token keyword">return</span> null<span class="token punctuation">;</span>          <span class="token punctuation">}</span>          fileHead <span class="token operator">=</span> fileHead<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          FileType<span class="token punctuation">[</span><span class="token punctuation">]</span> fileTypes <span class="token operator">=</span> FileType<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">for</span> <span class="token punctuation">(</span>FileType type <span class="token operator">:</span> fileTypes<span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token keyword">if</span> <span class="token punctuation">(</span>fileHead<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span>type<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                  typeNum <span class="token operator">=</span> <span class="token function">isFileType</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> typeNum<span class="token punctuation">;</span>            <span class="token punctuation">}</span>          <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//判断上传文件类型是否为0，如果是将其记录下来</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>typeNum <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//将内容输出到日志中</span>            LogUtils<span class="token punctuation">.</span><span class="token function">WriteLog</span><span class="token punctuation">(</span><span class="token string">"illegalFile"</span><span class="token punctuation">,</span> <span class="token string">"\n时间"</span><span class="token operator">+</span>System<span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"、非法文件头："</span><span class="token operator">+</span>fileHead<span class="token operator">+</span><span class="token string">"、文件地址："</span><span class="token operator">+</span>path<span class="token operator">+</span><span class="token string">"\r\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        is<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> typeNum<span class="token punctuation">;</span>      <span class="token punctuation">}</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">/**      * 得到文件头      *       * @param is     *            文件路径      * @return 文件头      * @throws IOException      */</span>      <span class="token keyword">public</span> <span class="token keyword">static</span> String <span class="token function">getFileContent</span><span class="token punctuation">(</span>InputStream is<span class="token punctuation">)</span> <span class="token keyword">throws</span> IOException <span class="token punctuation">{</span>          <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> b <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">byte</span><span class="token punctuation">[</span><span class="token number">28</span><span class="token punctuation">]</span><span class="token punctuation">;</span>          InputStream inputStream <span class="token operator">=</span> null<span class="token punctuation">;</span>          <span class="token keyword">try</span> <span class="token punctuation">{</span>              is<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>              e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token keyword">throw</span> e<span class="token punctuation">;</span>          <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>              <span class="token keyword">if</span> <span class="token punctuation">(</span>inputStream <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                  <span class="token keyword">try</span> <span class="token punctuation">{</span>                      inputStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                      e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                      <span class="token keyword">throw</span> e<span class="token punctuation">;</span>                  <span class="token punctuation">}</span>              <span class="token punctuation">}</span>          <span class="token punctuation">}</span>          <span class="token keyword">return</span> <span class="token function">bytesToHexString</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java"><code class="language-java">  <span class="token comment" spellcheck="true">/**     * 根据深度验证判断文件类型     * @param value     * @return     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> Integer <span class="token function">isFileType</span><span class="token punctuation">(</span>FileType value<span class="token punctuation">)</span> <span class="token punctuation">{</span>          Integer type <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 其他  </span>        <span class="token comment" spellcheck="true">// 图片  </span>        FileType<span class="token punctuation">[</span><span class="token punctuation">]</span> pics <span class="token operator">=</span> <span class="token punctuation">{</span> FileType<span class="token punctuation">.</span>JPEG<span class="token punctuation">,</span> FileType<span class="token punctuation">.</span>PNG<span class="token punctuation">,</span> FileType<span class="token punctuation">.</span>GIF<span class="token punctuation">,</span> FileType<span class="token punctuation">.</span>TIFF<span class="token punctuation">,</span> FileType<span class="token punctuation">.</span>BMP<span class="token punctuation">,</span> FileType<span class="token punctuation">.</span>DWG<span class="token punctuation">,</span> FileType<span class="token punctuation">.</span>PSD<span class="token punctuation">,</span>FileType<span class="token punctuation">.</span>ICO <span class="token punctuation">}</span><span class="token punctuation">;</span>          <span class="token comment" spellcheck="true">//文档</span>        FileType<span class="token punctuation">[</span><span class="token punctuation">]</span> docs <span class="token operator">=</span> <span class="token punctuation">{</span> FileType<span class="token punctuation">.</span>XLS_DOC_PPT<span class="token punctuation">,</span> FileType<span class="token punctuation">.</span>DOCX<span class="token punctuation">,</span> FileType<span class="token punctuation">.</span>XLSX<span class="token punctuation">,</span>FileType<span class="token punctuation">.</span>PPTX<span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//视频</span>        FileType<span class="token punctuation">[</span><span class="token punctuation">]</span> videos <span class="token operator">=</span> <span class="token punctuation">{</span> FileType<span class="token punctuation">.</span>AVI<span class="token punctuation">,</span> FileType<span class="token punctuation">.</span>RAM<span class="token punctuation">,</span> FileType<span class="token punctuation">.</span>RM<span class="token punctuation">,</span> FileType<span class="token punctuation">.</span>MPG<span class="token punctuation">,</span> FileType<span class="token punctuation">.</span>MOV<span class="token punctuation">,</span> FileType<span class="token punctuation">.</span>ASF<span class="token punctuation">,</span> FileType<span class="token punctuation">.</span>MP4<span class="token punctuation">,</span> FileType<span class="token punctuation">.</span>FLV<span class="token punctuation">,</span> FileType<span class="token punctuation">.</span>MID <span class="token punctuation">}</span><span class="token punctuation">;</span>          <span class="token comment" spellcheck="true">//种子</span>        FileType<span class="token punctuation">[</span><span class="token punctuation">]</span> tottents <span class="token operator">=</span> <span class="token punctuation">{</span> FileType<span class="token punctuation">.</span>TORRENT <span class="token punctuation">}</span><span class="token punctuation">;</span>          <span class="token comment" spellcheck="true">//音频</span>        FileType<span class="token punctuation">[</span><span class="token punctuation">]</span> audios <span class="token operator">=</span> <span class="token punctuation">{</span> FileType<span class="token punctuation">.</span>WAV<span class="token punctuation">,</span> FileType<span class="token punctuation">.</span>MP3<span class="token punctuation">,</span>FileType<span class="token punctuation">.</span>MP31 <span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//其他</span><span class="token comment" spellcheck="true">//      FileType[] others = {FileType.RTF, FileType.XML, FileType.HTML, FileType.CSS, FileType.JS, FileType.EML, FileType.DBX, FileType.PST, FileType.JAVA, FileType.CLASS,</span><span class="token comment" spellcheck="true">//              FileType.MDB, FileType.WPS, FileType.WPD, FileType.EPS, FileType.PDF, FileType.QDF, FileType.PWL, FileType.ZIP, FileType.RAR, FileType.JSP,   </span><span class="token comment" spellcheck="true">//              FileType.JAR, FileType.MF, FileType.EXE, FileType.CHM}; </span>        FileType<span class="token punctuation">[</span><span class="token punctuation">]</span> others <span class="token operator">=</span> <span class="token punctuation">{</span>FileType<span class="token punctuation">.</span>RTF<span class="token punctuation">,</span> FileType<span class="token punctuation">.</span>XML<span class="token punctuation">,</span> FileType<span class="token punctuation">.</span>HTML<span class="token punctuation">,</span> FileType<span class="token punctuation">.</span>CSS<span class="token punctuation">,</span> FileType<span class="token punctuation">.</span>EML<span class="token punctuation">,</span> FileType<span class="token punctuation">.</span>DBX<span class="token punctuation">,</span> FileType<span class="token punctuation">.</span>PST<span class="token punctuation">,</span>                FileType<span class="token punctuation">.</span>MDB<span class="token punctuation">,</span> FileType<span class="token punctuation">.</span>WPS<span class="token punctuation">,</span> FileType<span class="token punctuation">.</span>WPD<span class="token punctuation">,</span> FileType<span class="token punctuation">.</span>EPS<span class="token punctuation">,</span> FileType<span class="token punctuation">.</span>PDF<span class="token punctuation">,</span>FileType<span class="token punctuation">.</span>OPDF<span class="token punctuation">,</span> FileType<span class="token punctuation">.</span>QDF<span class="token punctuation">,</span> FileType<span class="token punctuation">.</span>PWL<span class="token punctuation">,</span> FileType<span class="token punctuation">.</span>ZIP<span class="token punctuation">,</span> FileType<span class="token punctuation">.</span>RAR<span class="token punctuation">,</span>                  FileType<span class="token punctuation">.</span>MF<span class="token punctuation">,</span> FileType<span class="token punctuation">.</span>EXE<span class="token punctuation">,</span> FileType<span class="token punctuation">.</span>CHM<span class="token punctuation">,</span>FileType<span class="token punctuation">.</span>TXT<span class="token punctuation">,</span>FileType<span class="token punctuation">.</span>TXT1<span class="token punctuation">}</span><span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">// 图片  </span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>FileType fileType <span class="token operator">:</span> pics<span class="token punctuation">)</span> <span class="token punctuation">{</span>             <span class="token keyword">if</span> <span class="token punctuation">(</span>fileType<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                type <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 文档  </span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>FileType fileType <span class="token operator">:</span> docs<span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token keyword">if</span> <span class="token punctuation">(</span>fileType<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                  type <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 视频  </span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>FileType fileType <span class="token operator">:</span> videos<span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token keyword">if</span> <span class="token punctuation">(</span>fileType<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                  type <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>              <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 种子  </span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>FileType fileType <span class="token operator">:</span> tottents<span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token keyword">if</span> <span class="token punctuation">(</span>fileType<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                  type <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>              <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 音乐  </span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>FileType fileType <span class="token operator">:</span> audios<span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token keyword">if</span> <span class="token punctuation">(</span>fileType<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                  type <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>              <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 其他  </span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>FileType fileType <span class="token operator">:</span>others<span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token keyword">if</span> <span class="token punctuation">(</span>fileType<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                  type <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>              <span class="token punctuation">}</span>        <span class="token punctuation">}</span>         <span class="token keyword">return</span> type<span class="token punctuation">;</span>      <span class="token punctuation">}</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">enum</span> FileType <span class="token punctuation">{</span>     <span class="token comment" spellcheck="true">/**       * JEPG.       */</span>      <span class="token function">JPEG</span><span class="token punctuation">(</span><span class="token string">"FFD8FF"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">/**       * PNG.       */</span>      <span class="token function">PNG</span><span class="token punctuation">(</span><span class="token string">"89504E47"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">/**       * GIF.       */</span>      <span class="token function">GIF</span><span class="token punctuation">(</span><span class="token string">"47494638"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">/**       * TIFF.       */</span>      <span class="token function">TIFF</span><span class="token punctuation">(</span><span class="token string">"49492A00"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">/**     * ico logo     */</span>    <span class="token function">ICO</span><span class="token punctuation">(</span><span class="token string">"0000010001"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">/**       * Windows Bitmap.       */</span>      <span class="token function">BMP</span><span class="token punctuation">(</span><span class="token string">"424D"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">/**       * CAD.       */</span>      <span class="token function">DWG</span><span class="token punctuation">(</span><span class="token string">"41433130"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">/**       * Adobe Photoshop.       */</span>      <span class="token function">PSD</span><span class="token punctuation">(</span><span class="token string">"38425053"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">/**       * Rich Text Format.       */</span>      <span class="token function">RTF</span><span class="token punctuation">(</span><span class="token string">"7B5C727466"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">/**       * XML.       */</span>      <span class="token function">XML</span><span class="token punctuation">(</span><span class="token string">"3C3F786D6C"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">/**       * HTML.       */</span>      <span class="token function">HTML</span><span class="token punctuation">(</span><span class="token string">"3C21444F4354595"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">/**       * CSS.       */</span>      <span class="token function">CSS</span><span class="token punctuation">(</span><span class="token string">"48544D4C207B0D0A0942"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">/**       * JS.       */</span>      <span class="token function">JS</span><span class="token punctuation">(</span><span class="token string">"696B2E71623D696B2E71"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">/**       * Email [thorough only].       */</span>      <span class="token function">EML</span><span class="token punctuation">(</span><span class="token string">"44656C69766572792D646174653A"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">/**       * Outlook Express.       */</span>      <span class="token function">DBX</span><span class="token punctuation">(</span><span class="token string">"CFAD12FEC5FD746F"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">/**       * Outlook (pst).       */</span>      <span class="token function">PST</span><span class="token punctuation">(</span><span class="token string">"2142444E"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">/**       * MS Word/Excel.       */</span>      <span class="token function">XLS_DOC_PPT</span><span class="token punctuation">(</span><span class="token string">"D0CF11E0A1B11AE"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">DOCX</span><span class="token punctuation">(</span><span class="token string">"504B03041400060"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">XLSX</span><span class="token punctuation">(</span><span class="token string">"504B03040A00000"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">PPTX</span><span class="token punctuation">(</span><span class="token string">"504B03041400060"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">/**       * Visio       */</span>      <span class="token function">VSD</span><span class="token punctuation">(</span><span class="token string">"d0cf11e0a1b11ae10000"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">/**       * MS Access.       */</span>      <span class="token function">MDB</span><span class="token punctuation">(</span><span class="token string">"5374616E64617264204A"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">/**       * WPS文字wps、表格et、演示dps都是一样的       */</span>      <span class="token function">WPS</span><span class="token punctuation">(</span><span class="token string">"d0cf11e0a1b11ae10000"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">/**       * torrent       */</span>      <span class="token function">TORRENT</span><span class="token punctuation">(</span><span class="token string">"6431303A637265617465"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">/**       * WordPerfect.       */</span>      <span class="token function">WPD</span><span class="token punctuation">(</span><span class="token string">"FF575043"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">/**       * Postscript.       */</span>      <span class="token function">EPS</span><span class="token punctuation">(</span><span class="token string">"252150532D41646F6265"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">/**       * Adobe Acrobat.       */</span>      <span class="token function">PDF</span><span class="token punctuation">(</span><span class="token string">"255044462D312E3"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">OPDF</span><span class="token punctuation">(</span><span class="token string">"631423651500"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">/**       * Quicken.       */</span>      <span class="token function">QDF</span><span class="token punctuation">(</span><span class="token string">"AC9EBD8F"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">/**       * Windows Password.       */</span>      <span class="token function">PWL</span><span class="token punctuation">(</span><span class="token string">"E3828596"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">/**       * ZIP Archive.       */</span>      <span class="token function">ZIP</span><span class="token punctuation">(</span><span class="token string">"504B0304"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">/**       * RAR Archive.       */</span>      <span class="token function">RAR</span><span class="token punctuation">(</span><span class="token string">"52617221"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">/**       * MF Archive.       */</span>      <span class="token function">MF</span><span class="token punctuation">(</span><span class="token string">"4D616E69666573742D56"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">/**       *EXE Archive.       */</span>      <span class="token function">EXE</span><span class="token punctuation">(</span><span class="token string">"4D5A9000030000000400"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">/**       *CHM Archive.       */</span>      <span class="token function">CHM</span><span class="token punctuation">(</span><span class="token string">"49545346030000006000"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">/*       * INI("235468697320636F6E66"), SQL("494E5345525420494E54"), BAT(       * "406563686F206f66660D"), GZ("1F8B0800000000000000"), PROPERTIES(       * "6C6F67346A2E726F6F74"), MXP(       * "04000000010000001300"),       */</span>      <span class="token comment" spellcheck="true">/**       * Wave.       */</span>      <span class="token function">WAV</span><span class="token punctuation">(</span><span class="token string">"57415645"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">/**       * AVI.       */</span>      <span class="token function">AVI</span><span class="token punctuation">(</span><span class="token string">"41564920"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">/**       * Real Audio.       */</span>      <span class="token function">RAM</span><span class="token punctuation">(</span><span class="token string">"2E7261FD"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">/**       * Real Media.       */</span>      <span class="token function">RM</span><span class="token punctuation">(</span><span class="token string">"2E524D46"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">/**       * MPEG (mpg).       */</span>      <span class="token function">MPG</span><span class="token punctuation">(</span><span class="token string">"000001BA"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">/**       * Quicktime.       */</span>      <span class="token function">MOV</span><span class="token punctuation">(</span><span class="token string">"6D6F6F76"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">/**       * Windows Media.       */</span>      <span class="token function">ASF</span><span class="token punctuation">(</span><span class="token string">"3026B2758E66CF11"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">/**       * MIDI.       */</span>      <span class="token function">MID</span><span class="token punctuation">(</span><span class="token string">"4D546864"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">/**       * MP4.       * 000000186674797069736F6D0000000169736F6D617663310000D01B     * 00000028667479706d7034320000000169736f6d69736f3261766331     */</span>      <span class="token function">MP4</span><span class="token punctuation">(</span><span class="token string">"000000"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">/**       * MP3.       */</span>      <span class="token function">MP3</span><span class="token punctuation">(</span><span class="token string">"494433"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>     <span class="token function">MP31</span><span class="token punctuation">(</span><span class="token string">"FFFB"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">/**       * FLV.       */</span>      <span class="token function">FLV</span><span class="token punctuation">(</span><span class="token string">"464C5601050000000900"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">//其他</span>    <span class="token comment" spellcheck="true">/**     * txt类型     */</span>    <span class="token function">TXT</span><span class="token punctuation">(</span><span class="token string">"2D2D2D2D2DE4BFA"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">TXT1</span><span class="token punctuation">(</span><span class="token string">"5576476C6"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> String value <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">/**       * Constructor.       *        * @param value     */</span>      <span class="token keyword">private</span> <span class="token function">FileType</span><span class="token punctuation">(</span>String value<span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>      <span class="token punctuation">}</span>      <span class="token keyword">public</span> String <span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token keyword">return</span> value<span class="token punctuation">;</span>      <span class="token punctuation">}</span>      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setValue</span><span class="token punctuation">(</span>String value<span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;问题描述&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;文件上传漏洞通常由于代码中对文件上传功能所上传的文件过滤不严或web服务器相关解析漏洞未修复而造成的，如果文件上传功能代码没有严格限制和验证用户上传的文件后缀、类型等，攻击者可通过文件
      
    
    </summary>
    
      <category term="JavaWeb" scheme="http://www.ldclass.club/categories/JavaWeb/"/>
    
      <category term="文件上传下载" scheme="http://www.ldclass.club/categories/JavaWeb/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E4%B8%8B%E8%BD%BD/"/>
    
    
      <category term="JavaWeb" scheme="http://www.ldclass.club/tags/JavaWeb/"/>
    
      <category term="文件上传下载" scheme="http://www.ldclass.club/tags/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E4%B8%8B%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>版本信息泄露</title>
    <link href="http://www.ldclass.club/2021/06/11/ban-ben-xin-xi-xie-lu/"/>
    <id>http://www.ldclass.club/2021/06/11/ban-ben-xin-xi-xie-lu/</id>
    <published>2021-06-10T17:08:05.000Z</published>
    <updated>2021-06-10T16:13:18.623Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Tomcat版本信息泄露</p></blockquote><ul><li><p>Tomcat报错页面泄漏相关版本号信息，是攻击者攻击的途径之一。因此实际当中建议去掉版本号信息。</p></li><li><p>解决办法：、</p><ul><li>在tomcat的lib文件夹下新建目录<code>org\apache\catalina\util</code></li><li>在此目录下新建<code>ServerInfo.properties</code>，并写入以下内容</li></ul><pre class="line-numbers language-properties"><code class="language-properties"><span class="token attr-name">server.info</span><span class="token punctuation">=</span><span class="token attr-value">****</span><span class="token attr-name">server.number</span><span class="token punctuation">=</span><span class="token attr-value">X.X.XX.X</span><span class="token attr-name">server.built</span><span class="token punctuation">=</span><span class="token attr-value">XXXX-XX--XX</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul><blockquote><p>Nginx版本信息泄露问题</p></blockquote><ul><li>在生产环境中暴露WEB服务器的名称和版本信息这些信息是不安全的。通过两种方式对上述信息进行隐藏：</li><li>解决办法：<ul><li>修改nginx.conf文件</li><li>添加：server_tokens off;</li></ul></li></ul><blockquote><p>JavaWeb配置友好错误页面</p></blockquote><ul><li><code>web.xml</code></li></ul><pre class="line-numbers language-xml"><code class="language-xml"> <span class="token comment" spellcheck="true">&lt;!-- 异常处理 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>error-page</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>error-code</span><span class="token punctuation">></span></span>403<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>error-code</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>location</span><span class="token punctuation">></span></span>/WEB-INF/error/403.jsp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>location</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>error-page</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>error-page</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>error-code</span><span class="token punctuation">></span></span>404<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>error-code</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>location</span><span class="token punctuation">></span></span>/WEB-INF/error/404.jsp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>location</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>error-page</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>error-page</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>error-code</span><span class="token punctuation">></span></span>405<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>error-code</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>location</span><span class="token punctuation">></span></span>/WEB-INF/error/405.jsp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>location</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>error-page</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>error-page</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>error-code</span><span class="token punctuation">></span></span>500<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>error-code</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>location</span><span class="token punctuation">></span></span>/WEB-INF/error/500.jsp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>location</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>error-page</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>404.jsp</li></ul><pre><code>&lt;%@ page language="java"  pageEncoding="UTF-8"%&gt;&lt;!DOCTYPE html&gt;&lt;html lang="en"&gt;&lt;head&gt;    &lt;meta charset="utf-8"&gt;    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;    &lt;meta name="description" content=""&gt;    &lt;meta name="author" content=""&gt;    &lt;meta http-equiv="/" content="5;url=http://www.13bk.cn/" /&gt;    &lt;title&gt;错误页&lt;/title&gt;    &lt;link href="/resources/assets/error/css/bootstrap.css" rel="stylesheet"/&gt;    &lt;link href="/resources/assets/error/css/font-awesome.min.css" rel="stylesheet" /&gt;    &lt;link href='http://fonts.googleapis.com/css?family=Nova+Flat' rel='stylesheet' type='text/css'&gt;    &lt;link href="/resources/assets/error/css/style.css" rel="stylesheet" /&gt;&lt;/head&gt;&lt;body&gt;&lt;div class="container"&gt;    &lt;div class="row pad-top text-center"&gt;        &lt;div class="col-md-6 col-md-offset-3 text-center"&gt;            &lt;h1&gt; 似乎没有找到你想要的页面 &lt;/h1&gt;            &lt;h1&gt; 404 &lt;/h1&gt;            &lt;span id="error-link"&gt;&lt;/span&gt;            &lt;h2&gt; 错误提示 &lt;/h2&gt;        &lt;/div&gt;    &lt;/div&gt;    &lt;div class="row text-center"&gt;        &lt;div class="col-md-8 col-md-offset-2"&gt;            &lt;h3&gt; &lt;i  class="fa fa-lightbulb-o fa-5x"&gt;&lt;/i&gt; &lt;/h3&gt;            &lt;!-- &lt;a href="/" class="btn btn-primary"&gt;&lt;span class="second"&gt;5&lt;/span&gt;秒后自动返回网站首页&lt;/a&gt; --&gt;        &lt;/div&gt;    &lt;/div&gt;&lt;/div&gt;&lt;%--&lt;script src="/resources/assets/error/js/jquery-1.10.2.js"&gt;&lt;/script&gt;--%&gt;&lt;%--&lt;script src="/resources/assets/error/js/bootstrap.js"&gt;&lt;/script&gt;--%&gt;&lt;%--&lt;script src="/resources/assets/error/js/countUp.js"&gt;&lt;/script&gt;--%&gt;&lt;%--&lt;script src="/resources/assets/error/js/custom.js"&gt;&lt;/script&gt;--%&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;Tomcat版本信息泄露&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Tomcat报错页面泄漏相关版本号信息，是攻击者攻击的途径之一。因此实际当中建议去掉版本号信息。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;解决办法：、&lt;/p&gt;
&lt;ul&gt;
      
    
    </summary>
    
      <category term="Tomcat" scheme="http://www.ldclass.club/categories/Tomcat/"/>
    
      <category term="Nginx" scheme="http://www.ldclass.club/categories/Tomcat/Nginx/"/>
    
      <category term="JavaWeb" scheme="http://www.ldclass.club/categories/Tomcat/Nginx/JavaWeb/"/>
    
    
      <category term="JavaWeb" scheme="http://www.ldclass.club/tags/JavaWeb/"/>
    
      <category term="Nginx" scheme="http://www.ldclass.club/tags/Nginx/"/>
    
      <category term="Tomcat" scheme="http://www.ldclass.club/tags/Tomcat/"/>
    
  </entry>
  
</feed>
