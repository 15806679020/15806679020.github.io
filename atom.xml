<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>陌生的小窝</title>
  
  <subtitle>学无止境</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.ldclass.club/"/>
  <updated>2021-08-27T13:59:22.361Z</updated>
  <id>http://www.ldclass.club/</id>
  
  <author>
    <name>Dong Liu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>nginx的location和proxy_pass是否带斜杠的区别</title>
    <link href="http://www.ldclass.club/2021/08/28/nginx-de-location-he-proxy-pass-shi-fou-dai-xie-gang-de-qu-bie/"/>
    <id>http://www.ldclass.club/2021/08/28/nginx-de-location-he-proxy-pass-shi-fou-dai-xie-gang-de-qu-bie/</id>
    <published>2021-08-27T21:53:54.000Z</published>
    <updated>2021-08-27T13:59:22.361Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>当前nginx服务器IP为192.168.231.128</p><ul><li>针对一个IP，可以通过路径跳转到多个项目，server配置如下：</li></ul><pre class="line-numbers language-conf"><code class="language-conf">   server {        listen       8081;        server_name  192.168.231.128;        location / {            proxy_pass   http://localhost:8080;        }        location /txffc {            proxy_pass   http://localhost:8082;        }    }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>proxy_pass最后待斜杠和不带斜杠的区别如下：</p><pre class="line-numbers language-conf"><code class="language-conf">location /txffc {    proxy_pass http://localhost:8082;}访问URL=http://192.168.231.128/txffc/common指向的地址实际是：http://localhost:8082/txffc/common即nginx会把包括匹配到的内容都追加到proxy_pass地址后面。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-conf"><code class="language-conf">location /txffc {    proxy_pass http://localhost:8082/;}访问URL=http://192.168.231.128/txffc/common指向的地址实际是：http://localhost:8082/common即nginx不会把匹配到的内容追加到proxy_pass地址后面。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>location 最后待斜杠和不带斜杠的区别如下：</p><pre class="line-numbers language-conf"><code class="language-conf">location /txffc {    proxy_pass http://localhost:8082;}不带斜杠，可以匹配http://192.168.231.128/txffc/commonhttp://192.168.231.128/txffcdddhttp://192.168.231.128/txffcddd/aabc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-conf"><code class="language-conf">location /txffc/ {    proxy_pass http://localhost:8082;}带斜杠，可以匹配http://192.168.231.128/txffc/commonhttp://192.168.231.128/txffc/aabb不能匹配http://192.168.231.128/txffcddd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;p&gt;当前nginx服务器IP为192.168.231.128&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;针对一个IP，可以通过路径跳转到多个项目，server配置如下：&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;line-numbers language-conf&quot;&gt;&lt;c
      
    
    </summary>
    
      <category term="Nginx" scheme="http://www.ldclass.club/categories/Nginx/"/>
    
    
      <category term="Nginx" scheme="http://www.ldclass.club/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>登录拦截器和ThreadLocal原理</title>
    <link href="http://www.ldclass.club/2021/08/25/deng-lu-lan-jie-qi-he-threadlocal-yuan-li/"/>
    <id>http://www.ldclass.club/2021/08/25/deng-lu-lan-jie-qi-he-threadlocal-yuan-li/</id>
    <published>2021-08-25T09:23:25.000Z</published>
    <updated>2021-08-25T01:28:39.674Z</updated>
    
    <content type="html"><![CDATA[<ul><li><h4 id="开发登录拦截器"><a href="#开发登录拦截器" class="headerlink" title="开发登录拦截器"></a>开发登录拦截器</h4><ul><li>解密JWT</li><li>传递登录用户信息<ul><li>attribute传递</li><li>threadLocal传递</li></ul></li></ul></li><li><h4 id="SpringBoot拦截器代码开发"><a href="#SpringBoot拦截器代码开发" class="headerlink" title="SpringBoot拦截器代码开发"></a>SpringBoot拦截器代码开发</h4></li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>interceptor<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>enums<span class="token punctuation">.</span>BizCodeEnum<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>model<span class="token punctuation">.</span>LoginUser<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>CommonUtil<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>JWTUtil<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>JsonData<span class="token punctuation">;</span><span class="token keyword">import</span> io<span class="token punctuation">.</span>jsonwebtoken<span class="token punctuation">.</span>Claims<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>Slf4j<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>lang3<span class="token punctuation">.</span>StringUtils<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>HandlerInterceptor<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ModelAndView<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author LiuDong * @version 1.0 * @description 登录拦截器 * @date 2021年08月24日 23:04 */</span><span class="token annotation punctuation">@Slf4j</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LoginInterceptor</span> <span class="token keyword">implements</span> <span class="token class-name">HandlerInterceptor</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> ThreadLocal<span class="token operator">&lt;</span>LoginUser<span class="token operator">></span> threadLocal <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadLocal</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">preHandle</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">,</span> Object handler<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//从头信息获取</span>        String accessToken <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token string">"token"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>accessToken <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//从url获取</span>            accessToken <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"token"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNoneBlank</span><span class="token punctuation">(</span>accessToken<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//不为空</span>            Claims claims <span class="token operator">=</span> JWTUtil<span class="token punctuation">.</span><span class="token function">checkJWT</span><span class="token punctuation">(</span>accessToken<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>claims <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//未登录</span>                CommonUtil<span class="token punctuation">.</span><span class="token function">sendJsonMsg</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span> JsonData<span class="token punctuation">.</span><span class="token function">buildResult</span><span class="token punctuation">(</span>BizCodeEnum<span class="token punctuation">.</span>ACCOUNT_UNLOGIN<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            Long userId <span class="token operator">=</span> Long<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>claims<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            String headImg <span class="token operator">=</span> claims<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"head_img"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            String mail <span class="token operator">=</span> claims<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"mail"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            String name <span class="token operator">=</span> claims<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            LoginUser loginUser <span class="token operator">=</span> LoginUser<span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">headImg</span><span class="token punctuation">(</span>headImg<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">mail</span><span class="token punctuation">(</span>mail<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//通过attribute传递用户信息</span>            <span class="token comment" spellcheck="true">//request.setAttribute("loginUser", loginUser);</span>            <span class="token comment" spellcheck="true">//通过ThreadLocal传递用户信息</span>            <span class="token comment" spellcheck="true">//全局变量</span>            threadLocal<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>loginUser<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        CommonUtil<span class="token punctuation">.</span><span class="token function">sendJsonMsg</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span> JsonData<span class="token punctuation">.</span><span class="token function">buildResult</span><span class="token punctuation">(</span>BizCodeEnum<span class="token punctuation">.</span>ACCOUNT_UNLOGIN<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">postHandle</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">,</span> Object handler<span class="token punctuation">,</span> ModelAndView modelAndView<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">afterCompletion</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">,</span> Object handler<span class="token punctuation">,</span> Exception ex<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><h4 id="核心知识-ThreadLocal介绍"><a href="#核心知识-ThreadLocal介绍" class="headerlink" title="核心知识-ThreadLocal介绍"></a>核心知识-ThreadLocal介绍</h4><ul><li><strong>ThreadLocal</strong>全称thread local variable（线程局部变量）功用非常简单，使用场合主要解决多线程中数据因并发产生不一致问题。</li><li>ThreadLocal为每一个线程都提供了变量的副本，使得每个线程在某时间访问到的并不是同一个对象，这样就隔离了多个线程对数据的数据共享，这样的结果是耗费了内存，但大大减少了线程同步所带来性能消耗，也减少了线程并发控制的复杂度。 </li><li>总结起来就是：同个线程共享数据</li><li>注意：ThreadLocal不能使用原子类型，只能使用Object类型</li></ul></li><li><h4 id="核心应用场景"><a href="#核心应用场景" class="headerlink" title="核心应用场景"></a>核心应用场景</h4><ul><li>ThreadLocal 用作每个线程内需要独立保存信息，方便同个线程的其他方法获取该信息的场景。</li><li>每个线程获取到的信息可能都是不一样的，前面执行的方法保存了信息后，后续方法可以通过ThreadLocal 直接获取到，避免了传参，类似于全局变量的概念，比如用户登录令牌解密后的信息传递（还有用户权限信息、从用户系统获取到的用户名、用户ID）</li></ul></li><li><h4 id="ThreadLocal同个线程共享变量"><a href="#ThreadLocal同个线程共享变量" class="headerlink" title="ThreadLocal同个线程共享变量"></a>ThreadLocal同个线程共享变量</h4><ul><li>方法一（拦截器）》》方法二（controller）》》方法三（service）》》方法四（mapper）</li></ul></li><li><h4 id="登录拦截器路径配置和开发"><a href="#登录拦截器路径配置和开发" class="headerlink" title="登录拦截器路径配置和开发"></a>登录拦截器路径配置和开发</h4><ul><li>拦截器配置<ul><li>拦截路径</li><li>不拦截路径</li></ul></li></ul></li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>config<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>interceptor<span class="token punctuation">.</span>LoginInterceptor<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>Slf4j<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Bean<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Configuration<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>config<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>InterceptorRegistry<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>config<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebMvcConfigurer<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author LiuDong * @version 1.0 * @description * @date 2021年08月24日 23:52 */</span><span class="token annotation punctuation">@Configuration</span><span class="token annotation punctuation">@Slf4j</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">interceptorConfig</span> <span class="token keyword">implements</span> <span class="token class-name">WebMvcConfigurer</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> LoginInterceptor <span class="token function">loginInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">LoginInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addInterceptors</span><span class="token punctuation">(</span>InterceptorRegistry registry<span class="token punctuation">)</span> <span class="token punctuation">{</span>        registry<span class="token punctuation">.</span><span class="token function">addInterceptor</span><span class="token punctuation">(</span><span class="token function">loginInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">//拦截的路径 黑名单</span>                <span class="token punctuation">.</span><span class="token function">addPathPatterns</span><span class="token punctuation">(</span><span class="token string">"/api/user/*/**"</span><span class="token punctuation">,</span> <span class="token string">"/api/address/*/**"</span><span class="token punctuation">,</span> <span class="token string">"/api/notify/*/**"</span><span class="token punctuation">)</span>                <span class="token operator">/</span><span class="token operator">/</span>不拦截的路径 白名单                <span class="token punctuation">.</span><span class="token function">excludePathPatterns</span><span class="token punctuation">(</span><span class="token string">"/api/notify/*/send_code"</span><span class="token punctuation">,</span> <span class="token string">"/api/notify/*/captcha"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">excludePathPatterns</span><span class="token punctuation">(</span><span class="token string">"/api/user/*/register"</span><span class="token punctuation">,</span> <span class="token string">"/api/user/*/login"</span><span class="token punctuation">,</span> <span class="token string">"/api/user/*/upload"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;开发登录拦截器&quot;&gt;&lt;a href=&quot;#开发登录拦截器&quot; class=&quot;headerlink&quot; title=&quot;开发登录拦截器&quot;&gt;&lt;/a&gt;开发登录拦截器&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;解密JWT&lt;/li&gt;
&lt;li&gt;传递登录用户信息&lt;ul&gt;
&lt;li&gt;att
      
    
    </summary>
    
      <category term="JWT" scheme="http://www.ldclass.club/categories/JWT/"/>
    
    
      <category term="JWT" scheme="http://www.ldclass.club/tags/JWT/"/>
    
      <category term="1024" scheme="http://www.ldclass.club/tags/1024/"/>
    
  </entry>
  
  <entry>
    <title>JWT令牌token泄露恶意使用解决方案</title>
    <link href="http://www.ldclass.club/2021/08/25/jwt-ling-pai-token-xie-lu-e-yi-shi-yong-jie-jue-fang-an/"/>
    <id>http://www.ldclass.club/2021/08/25/jwt-ling-pai-token-xie-lu-e-yi-shi-yong-jie-jue-fang-an/</id>
    <published>2021-08-25T09:20:22.000Z</published>
    <updated>2021-08-25T01:29:53.194Z</updated>
    
    <content type="html"><![CDATA[<ul><li><h4 id="如何避免token令牌泄露被恶意使用"><a href="#如何避免token令牌泄露被恶意使用" class="headerlink" title="如何避免token令牌泄露被恶意使用"></a>如何避免token令牌泄露被恶意使用</h4><ul><li>ip绑定方式<ul><li>生成token的时候，加密的payload加入当前用户ip。</li><li>拦截器解密后，获取payload的ip和当前访问ip判断是否同个，如果不是则提示重新登录</li><li>优点：服务端无需存储相关内容，性能高，假如用户广州登录，泄露了token给杭州的黑客，依旧用不了</li><li>缺点：如果用户用使用过程中ip变动频繁，则操作会经常提示重新登录，体验不友好</li><li>当然也可以让用户开启安全模式和非安全模式，让用户自己知道这个情况，一些区块链、比特币交易所里面就会让用户自己选择控制这个token令牌安全是否和ip、终端、地理网络信息进行绑定</li></ul></li></ul></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;如何避免token令牌泄露被恶意使用&quot;&gt;&lt;a href=&quot;#如何避免token令牌泄露被恶意使用&quot; class=&quot;headerlink&quot; title=&quot;如何避免token令牌泄露被恶意使用&quot;&gt;&lt;/a&gt;如何避免token令牌泄露被恶意使用&lt;/h4&gt;
      
    
    </summary>
    
      <category term="1024" scheme="http://www.ldclass.club/categories/1024/"/>
    
    
      <category term="JWT" scheme="http://www.ldclass.club/tags/JWT/"/>
    
      <category term="1024" scheme="http://www.ldclass.club/tags/1024/"/>
    
  </entry>
  
  <entry>
    <title>JWT登录过期自动刷新token</title>
    <link href="http://www.ldclass.club/2021/08/25/jwt-deng-lu-guo-qi-zi-dong-shua-xin-token/"/>
    <id>http://www.ldclass.club/2021/08/25/jwt-deng-lu-guo-qi-zi-dong-shua-xin-token/</id>
    <published>2021-08-25T09:08:55.000Z</published>
    <updated>2021-08-25T01:19:25.501Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>在前后分离场景下，越来越多的项目使用jwt token作为接口的安全机制,但存在jwt过期后，用户无法直接感知，假如在用户操作页面期间，突然提示登录，则体验很不友好，所以就有了token自动刷新需求</p></li><li><h4 id="方案一：前端控制检测token，无感知刷新"><a href="#方案一：前端控制检测token，无感知刷新" class="headerlink" title="方案一：前端控制检测token，无感知刷新"></a>方案一：前端控制检测token，无感知刷新</h4><ul><li><p>用户登录成功的时候，一次性给他两个Token，分别为AccessToken和RefreshToken，AccessToken有效期较短,比如1天或者5天，用于正常请求<br>RefreshToken有效期可以设置长一些，例如10天、20天，作为刷新AccessToken的凭证</p></li><li><p>刷新方案：当AccessToken即将过期的时候，例如提前30分钟，客户端利用RefreshToken请求指定的API获取新的AccessToken并更新本地存储中的AccessToken</p></li><li><p>核心逻辑</p><ul><li>登录成功后，jwt生成AccessToken； UUID生成RefreshToken并存储在服务端redis中,设置过期时间</li><li>接口返回3个字段AccessToken/RefreshToken/访问令牌过期时间戳</li><li>由于RefreshToken存储在服务端redis中，假如这个RefreshToken也过期，则提示重新登录； </li></ul></li><li><p>疑问：RefreshToken有效期那么长，和直接将AccessToken的有效期延长有什么区别</p><ul><li>答：RefreshToken不像AccessToken那样在大多数请求中都被使用，主要是本地检测accessToken快过期的时候才使用，一般本地存储的时候，也不叫refreshToken,前端可以取个别名，混淆代码让攻击者不能直接识别这个就是刷新令牌</li></ul></li><li><p>缺点：前端每次请求需要判断token距离过期时间</p></li><li><p>优点：后端压力小，代码逻辑改动不大</p></li></ul></li></ul><img src="/2021/08/25/jwt-deng-lu-guo-qi-zi-dong-shua-xin-token/1.png" title="token自动刷新方案"><ul><li><h4 id="方案二：后端存储判断过期时间"><a href="#方案二：后端存储判断过期时间" class="headerlink" title="方案二：后端存储判断过期时间"></a>方案二：后端存储判断过期时间</h4><ul><li><p>后端存储AccessToken，每次请求过来都判断是否要过期，如果快要过期则重新生成新的token，并返回给前端重新存储，比如距离1天就过期的情况，如果用户访问对应的接口则会更新，但假如没访问则token已经过期则需要重新登录</p></li><li><p>优点：前端改动小，只需要存储响应http头里面是否有新的令牌产生，有的话就重新存储</p></li><li><p>缺点：后端实现复杂，且泄露后容易存在一直保活状态，且前端会存在并发请求，当并发请求收到多个jwt token时，容易生成多个token混乱使用    </p></li></ul></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;p&gt;在前后分离场景下，越来越多的项目使用jwt token作为接口的安全机制,但存在jwt过期后，用户无法直接感知，假如在用户操作页面期间，突然提示登录，则体验很不友好，所以就有了token自动刷新需求&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h4 id=&quot;方案一：前端
      
    
    </summary>
    
      <category term="1024" scheme="http://www.ldclass.club/categories/1024/"/>
    
    
      <category term="JWT" scheme="http://www.ldclass.club/tags/JWT/"/>
    
      <category term="1024" scheme="http://www.ldclass.club/tags/1024/"/>
    
  </entry>
  
  <entry>
    <title>网络攻防之密码学</title>
    <link href="http://www.ldclass.club/2021/08/23/wang-luo-gong-fang-zhi-mi-ma-xue/"/>
    <id>http://www.ldclass.club/2021/08/23/wang-luo-gong-fang-zhi-mi-ma-xue/</id>
    <published>2021-08-22T22:58:03.000Z</published>
    <updated>2021-08-22T15:03:42.773Z</updated>
    
    <content type="html"><![CDATA[<ul><li><h4 id="信息安全的基本目标"><a href="#信息安全的基本目标" class="headerlink" title="信息安全的基本目标"></a>信息安全的基本目标</h4><ul><li>保密性：防止用户的数据被不合法的用户读取</li><li>完整性：保护数据免受未授权的修改，包括数据的未授权创建和删除</li><li>可用性：保证具有授权的一方可以访问所有的资源</li></ul></li><li><h4 id="常见加密算法"><a href="#常见加密算法" class="headerlink" title="常见加密算法"></a>常见加密算法</h4><ul><li>哈希算法（单向加密）</li><li>对称加密</li><li>非对称加密</li></ul></li><li><h4 id="hash算法-单项加密"><a href="#hash算法-单项加密" class="headerlink" title="hash算法-单项加密"></a>hash算法-单项加密</h4><ul><li>加密过程中不需要使用密钥，输入明文后由系统直接经过加密算法处理成密文，密文无法解密。只有重新输入明文，并经过同样的加密算法处理，得到相同的密文并被系统重新识别后，才能真正解密        </li><li>算法：MD5/SHA1/SHA224/SHA256/</li><li>优点：快速计算m，具有单向性 one-way，不可由散列值推出原消息</li><li>场景：文件完整性校验和(Checksum)算法、常规密码等</li></ul></li><li><h4 id="彩虹表暴力破解"><a href="#彩虹表暴力破解" class="headerlink" title="彩虹表暴力破解"></a>彩虹表暴力破解</h4><ul><li>网站：<a href="https://www.cmd5.com/" target="_blank" rel="noopener">https://www.cmd5.com/</a></li><li>密码存储常用方式<ul><li>双重MD5</li><li>MD5+加盐（常使用）</li><li>双重MD5+加盐</li></ul></li><li>加密解密更复杂，接口性能下降更严重</li></ul></li><li><h4 id="加密工具包"><a href="#加密工具包" class="headerlink" title="加密工具包"></a>加密工具包</h4><pre class="line-numbers language-xml"><code class="language-xml"> <span class="token comment" spellcheck="true">&lt;!--用于加密--></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>commons-codec<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>commons-codec<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;信息安全的基本目标&quot;&gt;&lt;a href=&quot;#信息安全的基本目标&quot; class=&quot;headerlink&quot; title=&quot;信息安全的基本目标&quot;&gt;&lt;/a&gt;信息安全的基本目标&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;保密性：防止用户的数据被不合法的用户读取&lt;/li&gt;
&lt;
      
    
    </summary>
    
      <category term="1024" scheme="http://www.ldclass.club/categories/1024/"/>
    
    
      <category term="1024" scheme="http://www.ldclass.club/tags/1024/"/>
    
      <category term="密码学" scheme="http://www.ldclass.club/tags/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>阿里云OSS</title>
    <link href="http://www.ldclass.club/2021/08/19/a-li-yun-oss/"/>
    <id>http://www.ldclass.club/2021/08/19/a-li-yun-oss/</id>
    <published>2021-08-18T22:53:35.000Z</published>
    <updated>2021-08-19T05:32:55.443Z</updated>
    
    <content type="html"><![CDATA[<ul><li><h4 id="阿里云OSS介绍"><a href="#阿里云OSS介绍" class="headerlink" title="阿里云OSS介绍"></a>阿里云OSS介绍</h4></li></ul><pre><code>对象存储OSS（Object Storage Service）是阿里云提供的海量、安全、低成本、高持久的云存储服务。其数据设计持久性不低于99.9999999999%（12个9），服务设计可用性不低于99.995%。OSS具有与平台无关的RESTful API接口，您可以在任何应用、任何时间、任何地点存储和访问任意类型的数据。提供标准、低频访问、归档和冷归档四种存储类型，全面覆盖从热到冷的各种数据存储场景：</code></pre><table><thead><tr><th>标准存储类型</th><th>高持久、高可用、高性能的对象存储服务，支持频繁的数据访问。是各种社交、分享类的图片、音视频应用、大型网站、大数据分析的合适选择。</th></tr></thead><tbody><tr><td>低频访问存储类型</td><td>适合长期保存不经常访问的数据（平均每月访问频率1到2次）。存储单价低于标准类型，适合各类移动应用、智能设备、企业数据的长期备份，支持实时数据访问。</td></tr><tr><td>归档存储类型</td><td>适合需要长期保存（建议半年以上）的归档数据，在存储周期内极少被访问，数据进入到可读取状态需要1分钟的解冻时间。适合需要长期保存的档案数据、医疗影像、科学资料、影视素材。</td></tr><tr><td>冷归档存储类型</td><td>适合需要超长时间存放的极冷数据。例如因合规要求需要长期留存的数据、大数据及人工智能领域长期积累的原始数据、影视行业长期留存的媒体资源、在线教育行业的归档视频等。</td></tr></tbody></table><ul><li><h4 id="开通阿里云OSS"><a href="#开通阿里云OSS" class="headerlink" title="开通阿里云OSS"></a>开通阿里云OSS</h4><ul><li><p>有阿里云账号、实名认证</p><ul><li><p>OSS介绍：<a href="https://www.aliyun.com/product/oss" target="_blank" rel="noopener">https://www.aliyun.com/product/oss</a></p></li><li><p>OSS控制台：<a href="https://oss.console.aliyun.com/bucket" target="_blank" rel="noopener">https://oss.console.aliyun.com/bucket</a></p></li><li><p>学习路径：<a href="https://help.aliyun.com/learn/learningpath/oss.html" target="_blank" rel="noopener">https://help.aliyun.com/learn/learningpath/oss.html</a></p></li></ul></li><li><p>开通后的操作</p><ul><li>创建Bucket</li><li>上传文件</li><li>访问文件</li></ul></li></ul></li></ul><ul><li><h4 id="阿里云权限管理RAM介绍"><a href="#阿里云权限管理RAM介绍" class="headerlink" title="阿里云权限管理RAM介绍"></a>阿里云权限管理RAM介绍</h4><ul><li><p>RAM权限介绍</p><ul><li>阿里云用于各个产品的权限，基于RBAC模型，进行简单管理账号、统一分配权限、集中管控资源，从而建立安全、完善的资源控制体系。</li><li>众多产品，一般采用子账号进行分配权限，防止越权攻击</li><li>建立用户，勾选编程访问（保存accessKey和accessSecret，只出现一次）</li></ul></li><li><p>云账号 AccessKey</p><ul><li>访问阿里云 API 的密钥，具有该账户完全的权限</li></ul></li></ul></li><li><h5 id="阿里云OSS客户端SDK集成"><a href="#阿里云OSS客户端SDK集成" class="headerlink" title="阿里云OSS客户端SDK集成"></a>阿里云OSS客户端SDK集成</h5><ul><li><p>添加阿里云OSS的SDK    </p><ul><li><p>地址：<code>https://help.aliyun.com/document_detail/32008.html</code></p></li><li><p>添加maven依赖</p><ul><li>底层聚合工程添加版本</li></ul><pre class="line-numbers language-xml"><code class="language-xml"> <span class="token comment" spellcheck="true">&lt;!-- OSS各个项目单独加依赖，根据需要进行添加--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.aliyun.oss<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>aliyun-sdk-oss<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.10.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>用户微服务添加</li></ul><pre class="line-numbers language-xml"><code class="language-xml"> <span class="token comment" spellcheck="true">&lt;!-- OSS各个项目单独加依赖，根据需要进行添加--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.aliyun.oss<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>aliyun-sdk-oss<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>用户微服务配置OSS</p><pre class="line-numbers language-yml"><code class="language-yml">#阿里云OSS配置aliyun:  oss:    endpoint: xxxx    access-key-id: xxxx    access-key-secret: xxx    bucketname: xxxx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>新建配置类 (配置里面的横杠会，自动转驼峰)</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>config<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>Data<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>context<span class="token punctuation">.</span>properties<span class="token punctuation">.</span>ConfigurationProperties<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Configuration<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author LiuDong * @version 1.0 * @description * @date 2021年08月18日 23:34 */</span><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@Configuration</span><span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span>prefix <span class="token operator">=</span> <span class="token string">"aliyun.oss"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OSSConfig</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 地域节点     */</span>    <span class="token keyword">private</span> String endpoint<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 配置文件中的属性会自动转化为驼峰     *     */</span>    <span class="token keyword">private</span> String accessKeyId<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     *     */</span>    <span class="token keyword">private</span> String accessKeySecret<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     *  bucket名称     */</span>    <span class="token keyword">private</span> String bucketname<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul></li><li><h4 id="用户微服务上传用户头像到oss-服务层开发"><a href="#用户微服务上传用户头像到oss-服务层开发" class="headerlink" title="用户微服务上传用户头像到oss-服务层开发"></a>用户微服务上传用户头像到oss-服务层开发</h4><ul><li><h5 id="service"><a href="#service" class="headerlink" title="service"></a>service</h5></li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>service<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>multipart<span class="token punctuation">.</span>MultipartFile<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author LiuDong * @version 1.0 * @description * @date 2021年08月18日 23:38 */</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">FileService</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 上传头像，返回url     * @author LiuDong     * @date 2021/8/18 23:39     * @param file     * @return java.lang.String     */</span>    String <span class="token function">uploadUserImg</span><span class="token punctuation">(</span>MultipartFile file<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><h5 id="impl"><a href="#impl" class="headerlink" title="impl"></a>impl</h5></li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>config<span class="token punctuation">.</span>OSSConfig<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>service<span class="token punctuation">.</span>FileService<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>CommonUtil<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>aliyun<span class="token punctuation">.</span>oss<span class="token punctuation">.</span>OSS<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>aliyun<span class="token punctuation">.</span>oss<span class="token punctuation">.</span>OSSClientBuilder<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>aliyun<span class="token punctuation">.</span>oss<span class="token punctuation">.</span>model<span class="token punctuation">.</span>PutObjectResult<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>Slf4j<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Service<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>multipart<span class="token punctuation">.</span>MultipartFile<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>time<span class="token punctuation">.</span>LocalDateTime<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>time<span class="token punctuation">.</span>format<span class="token punctuation">.</span>DateTimeFormatter<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author LiuDong * @version 1.0 * @description * @date 2021年08月18日 23:39 */</span><span class="token annotation punctuation">@Service</span><span class="token annotation punctuation">@Slf4j</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FileServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">FileService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> OSSConfig ossConfig<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 上传图片，返回url     *     * @param file     * @return java.lang.String     * @author LiuDong     * @date 2021/8/18 23:39     */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">uploadUserImg</span><span class="token punctuation">(</span>MultipartFile file<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//获取相关配置</span>        String bucketname <span class="token operator">=</span> ossConfig<span class="token punctuation">.</span><span class="token function">getBucketname</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String endpoint <span class="token operator">=</span> ossConfig<span class="token punctuation">.</span><span class="token function">getEndpoint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String accessKeyId <span class="token operator">=</span> ossConfig<span class="token punctuation">.</span><span class="token function">getAccessKeyId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String accessKeySecret <span class="token operator">=</span> ossConfig<span class="token punctuation">.</span><span class="token function">getAccessKeySecret</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//创建OSS对象</span>        OSS ossClient <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OSSClientBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>endpoint<span class="token punctuation">,</span> accessKeyId<span class="token punctuation">,</span> accessKeySecret<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//获取原始文件名 xxx.jpg</span>        String originalFileName <span class="token operator">=</span> file<span class="token punctuation">.</span><span class="token function">getOriginalFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//获取当前时间</span>        LocalDateTime ldt <span class="token operator">=</span> LocalDateTime<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        DateTimeFormatter dtf <span class="token operator">=</span> DateTimeFormatter<span class="token punctuation">.</span><span class="token function">ofPattern</span><span class="token punctuation">(</span><span class="token string">"yyyy/MM/dd"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//拼装路径，oss上存储的路径 user/2021/08/18/xxx.jpg</span>        <span class="token comment" spellcheck="true">//获取文件夹名称</span>        String folder <span class="token operator">=</span> dtf<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>ldt<span class="token punctuation">)</span><span class="token punctuation">;</span>        String fileName <span class="token operator">=</span> CommonUtil<span class="token punctuation">.</span><span class="token function">generateUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String extension <span class="token operator">=</span> originalFileName<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>originalFileName<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//拼装路径</span>        String newFileName <span class="token operator">=</span> <span class="token string">"user/"</span> <span class="token operator">+</span> folder <span class="token operator">+</span> <span class="token string">"/"</span> <span class="token operator">+</span> fileName <span class="token operator">+</span> extension<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//推送上传</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            PutObjectResult result <span class="token operator">=</span> ossClient<span class="token punctuation">.</span><span class="token function">putObject</span><span class="token punctuation">(</span>bucketname<span class="token punctuation">,</span> newFileName<span class="token punctuation">,</span> file<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//拼装返回url</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                String imgUrl <span class="token operator">=</span> <span class="token string">"https://"</span> <span class="token operator">+</span> bucketname <span class="token operator">+</span> <span class="token string">"."</span> <span class="token operator">+</span> endpoint <span class="token operator">+</span> <span class="token string">"/"</span> <span class="token operator">+</span> newFileName<span class="token punctuation">;</span>                <span class="token keyword">return</span> imgUrl<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"文件上传失败：{}"</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//oss关闭，以防内存泄露</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>ossClient <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                ossClient<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> null<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><h4 id="用户微服务头像上传阿里云OSS接口和SwaggerUI提效"><a href="#用户微服务头像上传阿里云OSS接口和SwaggerUI提效" class="headerlink" title="用户微服务头像上传阿里云OSS接口和SwaggerUI提效"></a>用户微服务头像上传阿里云OSS接口和SwaggerUI提效</h4><ul><li><p>文件上传流程</p><ul><li>先上传文件，返回url地址，再和普通表单一并提交（推荐这种,更加灵活，失败率低）</li><li>文件和普通表单一并提交（设计流程比较多，容易超时和失败）</li></ul></li><li><p>注意：默认SpringBoot最大文件上传是1M,大家测试的时候记得关注下</p></li><li><p>开发controller</p><ul><li>@requestPart注解 接收文件以及其他更为复杂的数据类型</li><li>比如 XXX(@RequestPart(“file”) MultipartFile file,  @RequestPart(“userVO”) UserVO userVO) 复杂协议</li></ul></li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>controller<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>enums<span class="token punctuation">.</span>BizCodeEnum<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>service<span class="token punctuation">.</span>FileService<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>JsonData<span class="token punctuation">;</span><span class="token keyword">import</span> io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span>Api<span class="token punctuation">;</span><span class="token keyword">import</span> io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span>ApiOperation<span class="token punctuation">;</span><span class="token keyword">import</span> io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span>ApiParam<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>PostMapping<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RequestMapping<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RequestPart<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RestController<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>multipart<span class="token punctuation">.</span>MultipartFile<span class="token punctuation">;</span><span class="token keyword">import</span> springfox<span class="token punctuation">.</span>documentation<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>web<span class="token punctuation">.</span>json<span class="token punctuation">.</span>Json<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * &lt;p> * 前端控制器 * &lt;/p> * * @author LiuDong * @since 2021-08-13 */</span><span class="token annotation punctuation">@Api</span><span class="token punctuation">(</span>tags <span class="token operator">=</span> <span class="token string">"用户模块"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/api/user/v1"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> FileService fileService<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 上传用户头像     * &lt;p>     * SpringBoot默认上传1M，超过则报错     *     * @param file     * @return club.ldclass.utils.JsonData     * @author LiuDong     * @date 2021/8/19 0:03     */</span>    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"用户头像上传"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"upload"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> JsonData <span class="token function">uploadUserImg</span><span class="token punctuation">(</span>            <span class="token annotation punctuation">@ApiParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"文件上传"</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>            <span class="token annotation punctuation">@RequestPart</span><span class="token punctuation">(</span><span class="token string">"file"</span><span class="token punctuation">)</span> MultipartFile file<span class="token punctuation">)</span> <span class="token punctuation">{</span>        String result <span class="token operator">=</span> fileService<span class="token punctuation">.</span><span class="token function">uploadUserImg</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> result <span class="token operator">!=</span> null <span class="token operator">?</span> JsonData<span class="token punctuation">.</span><span class="token function">buildSuccess</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token operator">:</span> JsonData<span class="token punctuation">.</span><span class="token function">buildResult</span><span class="token punctuation">(</span>BizCodeEnum<span class="token punctuation">.</span>FILE_UPLOAD_USER_IMG_FAIL<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>SwaggerUI接口测试<ul><li>ui界面可以直接测试文件上传</li></ul></li><li>Postman测试<ul><li><img src="/2021/08/19/a-li-yun-oss/1.png" title="测试图片上传"></li></ul></li></ul></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;阿里云OSS介绍&quot;&gt;&lt;a href=&quot;#阿里云OSS介绍&quot; class=&quot;headerlink&quot; title=&quot;阿里云OSS介绍&quot;&gt;&lt;/a&gt;阿里云OSS介绍&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;对象存储OSS（Object St
      
    
    </summary>
    
      <category term="1024" scheme="http://www.ldclass.club/categories/1024/"/>
    
    
      <category term="1024" scheme="http://www.ldclass.club/tags/1024/"/>
    
      <category term="OSS" scheme="http://www.ldclass.club/tags/OSS/"/>
    
  </entry>
  
  <entry>
    <title>分布式文件存储</title>
    <link href="http://www.ldclass.club/2021/08/19/fen-bu-shi-wen-jian-cun-chu/"/>
    <id>http://www.ldclass.club/2021/08/19/fen-bu-shi-wen-jian-cun-chu/</id>
    <published>2021-08-18T22:51:50.000Z</published>
    <updated>2021-08-19T02:16:11.515Z</updated>
    
    <content type="html"><![CDATA[<ul><li><h4 id="分布式文件系统（Distributed-File-System"><a href="#分布式文件系统（Distributed-File-System" class="headerlink" title="分布式文件系统（Distributed File System)"></a>分布式文件系统（Distributed File System)</h4><ul><li><p>海量数据对存储提出了新的要求，从而诞生了分布式文件存储</p></li><li><p>是文件系统管理的物理存储资源不一定直接连接在本地节点上，而是通过计算机网络与节点（可简单的理解为一台计算机) 相连，或是若干不同的逻辑磁盘分区组合在一起而形成的完整的有层次的文件系统</p></li><li><p>自研：扩容容易-开发难</p></li></ul></li><li><h4 id="面试题：做分布式文件存储，主要是想实现文件存储访问的高性能与高可用，如何保证分布式存储的高性能与高可用？"><a href="#面试题：做分布式文件存储，主要是想实现文件存储访问的高性能与高可用，如何保证分布式存储的高性能与高可用？" class="headerlink" title="面试题：做分布式文件存储，主要是想实现文件存储访问的高性能与高可用，如何保证分布式存储的高性能与高可用？"></a>面试题：做分布式文件存储，主要是想实现文件存储访问的高性能与高可用，如何保证分布式存储的高性能与高可用？</h4><ul><li><p>副本备份、双活、多活</p></li><li><p>在系统中通过复制协议将数据同步到多个存储节点，并确保多个副本之间的数据一致性，当某个存储节点出故障时，系统能够自动将服务切换到其他的副本</p></li><li><p>在分布式存储中高性能与高可用是矛盾的，比如要设计一个分布式存储系统，CAP定理也可以推断出来</p><ul><li>对性能的考虑，记录数据时先写一个份数据到某个机器上并立即返回，然后异步发起多个数据备份过程。这种设计的性能最好，但存在“容错性”的风险，加入返回后，还没来得及同步给其它节点就宕机了，则数据就丢失（异步复制，也存在是写主节点到内存还是落到磁盘）</li><li>如果同时写多个副本，每个副本写成功以后再返回，则又导致性能下降，这个过程取决于最慢的那台机器的性能 (同步多写，是同步每个副本节点还是一个副本先)</li></ul></li></ul></li></ul><pre><code>  * 那应该如何选择呢？    * 根据业务而定，如果要求性能更高，偶尔出现文件丢失或访问出错则可以异步复制  * 要求文件系统一定要高可用，则用同步多写的策略，牺牲一定的性能也要保证高可用数据一致性* 基于上述的，大家还知道有一个很类似的消息队列就是支持这种操作  * RocketMQ消息高可用里面的    * 同步双写、异步刷盘，即同时写到两个节点上的内存才返回，然后异步持久化到磁盘里面</code></pre><ul><li><h4 id="分布式文件存储常见解决方案"><a href="#分布式文件存储常见解决方案" class="headerlink" title="分布式文件存储常见解决方案"></a>分布式文件存储常见解决方案</h4><ul><li>MinIO</li></ul><pre><code>是在 Apache License v2.0 下发布的对象存储服务器,学习成本低，安装运维简单，主流语言的客户端整合都有, 号称最强的对象存储文件服务器，且可以和容器化技术docker/k8s等结合，社区活跃但不够成熟，业界参考资料较少官网：https://docs.min.io/cn/</code></pre><ul><li>FastDFS</li></ul><pre><code>一个开源的轻量级分布式文件系统,比较少的客户端可以整合，目前主要是C和java客户端，在一些互联网创业公司中有应用比较多，没有官方文档,社区不怎么活跃.架构+部署结构复杂，出问题定位比较难定位，可以说是fastdfs零件的组装过程，需要去理解fastDFS的架构设计，才能够正确的安装部署</code></pre><ul><li><p>云厂商</p><ul><li><p>阿里云OSS</p></li><li><p>七牛云</p></li><li><p>腾讯云</p></li><li><p>亚马逊云</p></li></ul></li></ul></li></ul><pre><code>* CDN最强：Akamai `https://www.akamai.com/cn`</code></pre><ul><li><p>选云厂商理由</p><ul><li>优点：开发简单，功能强大，容易维护（不同网络下图片质量、水印、加密策略、扩容、加速）</li><li>缺点：要钱, 个性化处理，未来转移比较复杂，不排除有些厂商会提供一键迁移工具</li></ul></li><li><p>选开源MinIO的理由</p><ul><li>优点：功能强大、可以根据业务做二次的定制，新一代分布式文件存储系统，容器化结合强大，更重要的是免费（购买磁盘、内存、带宽）</li><li>缺点：自己需要有专门的团队进行维护、扩容等</li></ul></li></ul><ul><li><h4 id="自建分布式文件存储MinIO容器化部署"><a href="#自建分布式文件存储MinIO容器化部署" class="headerlink" title="自建分布式文件存储MinIO容器化部署"></a>自建分布式文件存储MinIO容器化部署</h4><pre class="line-numbers language-dockerfile"><code class="language-dockerfile">docker run -p 9000:9000 \  --name minio_xdclass \  -v /Users/xdclass/Desktop/test:/data \  -e "MINIO_ROOT_USER=AKIAIOSFODNN7EXAMPLE" \  -e "MINIO_ROOT_PASSWORD=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY" \  minio/minio server /data<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>步骤<ul><li>访问控制台</li><li>创建bucket</li><li>上传文件</li><li>预览</li></ul></li><li>总体操作很流畅，支持单机和集群部署，多个方面都是目前比较强的，对于有需求不能或不使用云厂商提供的存储服务，例如阿里云的oss、七牛云的对象存储等，可以通过自建minio对象存储集群的方式</li></ul></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;分布式文件系统（Distributed-File-System&quot;&gt;&lt;a href=&quot;#分布式文件系统（Distributed-File-System&quot; class=&quot;headerlink&quot; title=&quot;分布式文件系统（Distributed F
      
    
    </summary>
    
      <category term="1024" scheme="http://www.ldclass.club/categories/1024/"/>
    
    
      <category term="1024" scheme="http://www.ldclass.club/tags/1024/"/>
    
      <category term="分布式文件存储" scheme="http://www.ldclass.club/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8/"/>
    
  </entry>
  
  <entry>
    <title>springboot整合邮箱starter</title>
    <link href="http://www.ldclass.club/2021/08/17/springboot-zheng-he-you-xiang-starter/"/>
    <id>http://www.ldclass.club/2021/08/17/springboot-zheng-he-you-xiang-starter/</id>
    <published>2021-08-16T20:43:13.000Z</published>
    <updated>2021-08-16T14:38:05.061Z</updated>
    
    <content type="html"><![CDATA[<ul><li>邮件传输协议<ul><li>SMTP协议：全称为 Simple Mail Transfer Protocol，简单邮件传输协议。它定义了邮件客户端软件和SMTP邮件服务器之间，以及两台SMTP邮件服务器之间的通信规则</li><li>POP3协议：全称为 Post Office Protocol，邮局协议。它定义了邮件客户端软件和POP3邮件服务器的通信 规则</li><li>IMAP协议：全称为 Internet Message Access Protocol,Internet消息访问协议，它是对POP3协议一种扩展，也是定义了邮件客户端软件和IMAP邮件服务器的通信规则</li></ul></li></ul><h4 id="一、开启邮箱服务，并添加配置"><a href="#一、开启邮箱服务，并添加配置" class="headerlink" title="一、开启邮箱服务，并添加配置"></a>一、开启邮箱服务，并添加配置</h4><ul><li><p>邮箱开启服务</p><ul><li>设置&gt;&gt;&gt;开启服务&gt;&gt;&gt;获取授权码</li></ul></li><li><p>配置依赖</p><pre class="line-numbers language-xml"><code class="language-xml">        <span class="token comment" spellcheck="true">&lt;!--发送邮件--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-mail<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>配置文件</p><pre class="line-numbers language-yml"><code class="language-yml">spring:  application:    name: xdclass-user-service  #邮箱服务配置  mail:    #发送邮件服务器    host: smtp.163.com    #发送邮件的邮箱地址    username: xxxx@163.com    #客户端授权码，不是邮箱密码    password: xxxxxxxxxx    # 发送邮件的地址，和上面username一致    from: xxxxx@163.com    properties.mail.smtp.starttls.enable: true    properties.mail.smtp.starttls.required: true    #开启SSL 安全传输协议 防止部署到云之后发送邮件不成功    properties.mail.smtp.ssl.enable: true    default-encoding: utf-8<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>封装邮件发送组件 MailService，放到component包下</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>component<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Component<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author LiuDong * @version 1.0 * @description * @date 2021年08月16日 20:53 */</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">MailService</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 发送邮件     * @author LiuDong     * @date 2021/8/16 20:54     * @param to     * @param subject     * @param content     */</span>    <span class="token keyword">void</span> <span class="token function">sendMail</span><span class="token punctuation">(</span>String to<span class="token punctuation">,</span>String subject<span class="token punctuation">,</span>String content<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>component<span class="token punctuation">.</span>impl<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>component<span class="token punctuation">.</span>MailService<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>Slf4j<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Value<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>mail<span class="token punctuation">.</span>SimpleMailMessage<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>mail<span class="token punctuation">.</span>javamail<span class="token punctuation">.</span>JavaMailSender<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Component<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Service<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author LiuDong * @version 1.0 * @description * @date 2021年08月16日 20:54 */</span><span class="token annotation punctuation">@Service</span><span class="token annotation punctuation">@Slf4j</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MailServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">MailService</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * SpringBoot 提供的发送邮件的简单抽象，直接注入     */</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> JavaMailSender mailSender<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 读取配置文件     */</span>    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"${spring.mail.from}"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String from<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 发送邮件     * @author LiuDong     * @date 2021/8/16 20:59     * @param to 收件人     * @param subject 主题     * @param content 内容     */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sendMail</span><span class="token punctuation">(</span>String to<span class="token punctuation">,</span> String subject<span class="token punctuation">,</span> String content<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//创建一个邮箱消息对象,用于封装消息</span>        SimpleMailMessage message <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleMailMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//配置邮箱的发送人</span>        message<span class="token punctuation">.</span><span class="token function">setFrom</span><span class="token punctuation">(</span>from<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//收件人</span>        message<span class="token punctuation">.</span><span class="token function">setTo</span><span class="token punctuation">(</span>to<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//邮件的主题</span>        message<span class="token punctuation">.</span><span class="token function">setSubject</span><span class="token punctuation">(</span>subject<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//邮件的内容</span>        message<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//发送</span>        mailSender<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"邮件发送成功：{}"</span><span class="token punctuation">,</span>message<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="二、注册邮箱验证码接口开发"><a href="#二、注册邮箱验证码接口开发" class="headerlink" title="二、注册邮箱验证码接口开发"></a>二、注册邮箱验证码接口开发</h4><ul><li><p>邮箱工具类正则</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>utils<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>regex<span class="token punctuation">.</span>Matcher<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>regex<span class="token punctuation">.</span>Pattern<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author LiuDong * @version 1.0 * @description * @date 2021年08月16日 21:28 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CheckUtil</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 邮箱正则     */</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> Pattern MAIL_PATTERN <span class="token operator">=</span> Pattern<span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token string">"^([a-z0-9A-Z]+[-|\\.]?)+[a-z0-9A-Z]@([a-z0-9A-Z]+(-[a-z0-9A-Z]+)?\\.)+[a-zA-Z]{2,}$"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 手机号正则，暂时未用     */</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> Pattern PHONE_PATTERN <span class="token operator">=</span> Pattern<span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token string">"^((13[0-9])|(15[^4,\\D])|(18[0,5-9]))\\d{8}$"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * @param email     * @return     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">isEmail</span><span class="token punctuation">(</span>String email<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>null <span class="token operator">==</span> email <span class="token operator">||</span> <span class="token string">""</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>email<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        Matcher m <span class="token operator">=</span> MAIL_PATTERN<span class="token punctuation">.</span><span class="token function">matcher</span><span class="token punctuation">(</span>email<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> m<span class="token punctuation">.</span><span class="token function">matches</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 暂时未用     *     * @param phone     * @return     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">isPhone</span><span class="token punctuation">(</span>String phone<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>null <span class="token operator">==</span> phone <span class="token operator">||</span> <span class="token string">""</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>phone<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        Matcher m <span class="token operator">=</span> PHONE_PATTERN<span class="token punctuation">.</span><span class="token function">matcher</span><span class="token punctuation">(</span>phone<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> m<span class="token punctuation">.</span><span class="token function">matches</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>邮箱验证码防刷</p><ul><li><p>需求：一定时间内禁止重复发送邮件</p><ul><li><p>方式一：前端增加校验倒计时，不到60秒按钮不给点击</p><ul><li>简单</li><li>不安全，存在绕过的情况</li></ul></li><li><p>方式二：增加Redis存储，发送的时候设置下额外的key，并且60秒后过期</p><ul><li>非原子操作，存在不一致性</li><li>增加的额外的key - value存储，浪费空间</li></ul><pre class="line-numbers language-java"><code class="language-java">     <span class="token operator">*</span> 前置<span class="token operator">>></span>判断是否重复发送     <span class="token operator">*</span> <span class="token operator">>>></span><span class="token operator">>></span>存储验证码到缓存     <span class="token operator">*</span> <span class="token operator">>>></span><span class="token operator">>></span>发送验证码到邮箱     <span class="token operator">*</span> 后置<span class="token operator">>></span>存储发送记录<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>方式三：基于原先的key拼装时间戳</p><ul><li>好处：满足了当前节点内的原子性，也满足业务需求</li></ul></li></ul></li></ul></li><li><p>开发接口</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>controller<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>enums<span class="token punctuation">.</span>BizCodeEnum<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>enums<span class="token punctuation">.</span>SendCodeEnum<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>service<span class="token punctuation">.</span>NotifyService<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>CommonUtil<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>JsonData<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>code<span class="token punctuation">.</span>kaptcha<span class="token punctuation">.</span>Producer<span class="token punctuation">;</span><span class="token keyword">import</span> io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span>Api<span class="token punctuation">;</span><span class="token keyword">import</span> io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span>ApiOperation<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>Slf4j<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>core<span class="token punctuation">.</span>StringRedisTemplate<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> springfox<span class="token punctuation">.</span>documentation<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>web<span class="token punctuation">.</span>json<span class="token punctuation">.</span>Json<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>imageio<span class="token punctuation">.</span>ImageIO<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletOutputStream<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>image<span class="token punctuation">.</span>BufferedImage<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>TimeUnit<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author LiuDong * @version 1.0 * @description 通知 * @date 2021年08月15日 22:10 */</span><span class="token annotation punctuation">@Api</span><span class="token punctuation">(</span>tags <span class="token operator">=</span> <span class="token string">"通知模块"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"api/notify/v1"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Slf4j</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NotifyController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> Producer captchaProducer<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> StringRedisTemplate redisTemplate<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> NotifyService notifyService<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 图形验证码有效期     */</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> CAPTCHA_CODE_EXPIRED <span class="token operator">=</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">30</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 获取图形验证码     * 输出图片流     *     * @param request     * @param response     * @author LiuDong     * @date 2021/8/15 22:14     */</span>    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span><span class="token string">"获取图形验证码"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"captcha"</span><span class="token punctuation">,</span> method <span class="token operator">=</span> RequestMethod<span class="token punctuation">.</span>GET<span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getCaptcha</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token punctuation">{</span>        String cacheKey <span class="token operator">=</span> <span class="token function">getCaptchaKey</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>        String capText <span class="token operator">=</span> captchaProducer<span class="token punctuation">.</span><span class="token function">createText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//存储</span>        redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>cacheKey<span class="token punctuation">,</span> capText<span class="token punctuation">,</span> CAPTCHA_CODE_EXPIRED<span class="token punctuation">,</span> TimeUnit<span class="token punctuation">.</span>MILLISECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span>        BufferedImage bufferedImage <span class="token operator">=</span> captchaProducer<span class="token punctuation">.</span><span class="token function">createImage</span><span class="token punctuation">(</span>capText<span class="token punctuation">)</span><span class="token punctuation">;</span>        ServletOutputStream outputStream <span class="token operator">=</span> null<span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            response<span class="token punctuation">.</span><span class="token function">setDateHeader</span><span class="token punctuation">(</span><span class="token string">"Expires"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Cache-Control"</span><span class="token punctuation">,</span> <span class="token string">"no-store, no-cache, must-revalidate"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            response<span class="token punctuation">.</span><span class="token function">addHeader</span><span class="token punctuation">(</span><span class="token string">"Cache-Control"</span><span class="token punctuation">,</span> <span class="token string">"create_date-check=0, pre-check=0"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Pragma"</span><span class="token punctuation">,</span> <span class="token string">"no-cache"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            outputStream <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            ImageIO<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>bufferedImage<span class="token punctuation">,</span> <span class="token string">"jpg"</span><span class="token punctuation">,</span> outputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>            outputStream<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            outputStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"获取验证码失败:{}"</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 发送验证码     * 1、匹配图形验证码是否正常     * 2、发送验证码     *     * @param to     * @param captcha     * @return club.ldclass.utils.JsonData     * @author LiuDong     * @date 2021/8/16 21:18     */</span>    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span><span class="token string">"发送邮箱注册验证码"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"send_code"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> JsonData <span class="token function">sendRegisterCode</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"to"</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span> String to<span class="token punctuation">,</span>                                     <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"captcha"</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span> String captcha<span class="token punctuation">,</span>                                     HttpServletRequest request<span class="token punctuation">)</span> <span class="token punctuation">{</span>        String key <span class="token operator">=</span> <span class="token function">getCaptchaKey</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>        String cacheCaptcha <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//匹配图形验证码是否一致</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>captcha <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> cacheCaptcha <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> captcha<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>cacheCaptcha<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//成功,配置了过期时间，以防止高并发下删除不成功</span>            redisTemplate<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>            JsonData jsonData <span class="token operator">=</span> notifyService<span class="token punctuation">.</span><span class="token function">sendCode</span><span class="token punctuation">(</span>SendCodeEnum<span class="token punctuation">.</span>USER_REGISTER<span class="token punctuation">,</span> to<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> jsonData<span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> JsonData<span class="token punctuation">.</span><span class="token function">buildResult</span><span class="token punctuation">(</span>BizCodeEnum<span class="token punctuation">.</span>CODE_CAPTCHA_ERROR<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 获取缓存key     *     * @param request     * @return java.lang.String     * @author LiuDong     * @date 2021/8/15 23:03     */</span>    <span class="token keyword">private</span> String <span class="token function">getCaptchaKey</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">)</span> <span class="token punctuation">{</span>        String ip <span class="token operator">=</span> CommonUtil<span class="token punctuation">.</span><span class="token function">getIpAddr</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>        String userAgent <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token string">"user-Agent"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String key <span class="token operator">=</span> <span class="token string">"user-service:captcha:"</span> <span class="token operator">+</span> CommonUtil<span class="token punctuation">.</span><span class="token function">MD5</span><span class="token punctuation">(</span>ip <span class="token operator">+</span> userAgent<span class="token punctuation">)</span><span class="token punctuation">;</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"ip:{}"</span><span class="token punctuation">,</span> ip<span class="token punctuation">)</span><span class="token punctuation">;</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"userAgent:{}"</span><span class="token punctuation">,</span> userAgent<span class="token punctuation">)</span><span class="token punctuation">;</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"key:{}"</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> key<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>service<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>enums<span class="token punctuation">.</span>SendCodeEnum<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>JsonData<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author LiuDong * @version 1.0 * @description * @date 2021年08月16日 21:22 */</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">NotifyService</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 发送验证码     * @author LiuDong     * @date 2021/8/16 21:25     * @param sendCodeEnum     * @param to     * @return club.ldclass.utils.JsonData     */</span>    JsonData <span class="token function">sendCode</span><span class="token punctuation">(</span>SendCodeEnum sendCodeEnum<span class="token punctuation">,</span>String to<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>constant<span class="token punctuation">.</span>CacheKey<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>enums<span class="token punctuation">.</span>BizCodeEnum<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>enums<span class="token punctuation">.</span>SendCodeEnum<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>component<span class="token punctuation">.</span>MailService<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>service<span class="token punctuation">.</span>NotifyService<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>CheckUtil<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>CommonUtil<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>JsonData<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>Slf4j<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>lang3<span class="token punctuation">.</span>StringUtils<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>core<span class="token punctuation">.</span>RedisTemplate<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>core<span class="token punctuation">.</span>StringRedisTemplate<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Service<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>TimeUnit<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author LiuDong * @version 1.0 * @description * @date 2021年08月16日 21:26 */</span><span class="token annotation punctuation">@Service</span><span class="token annotation punctuation">@Slf4j</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NotifyServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">NotifyService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> MailService mailService<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 标题     */</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> String SUBJECT <span class="token operator">=</span> <span class="token string">"验证码"</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 内容     */</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> String CONTENT <span class="token operator">=</span> <span class="token string">"您的验证码是%s，有效时间是60秒"</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 验证码10分钟有效     */</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> CODE_EXPIRED <span class="token operator">=</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> StringRedisTemplate redisTemplate<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 前置>>判断是否重复发送     * >>>>>存储验证码到缓存     * >>>>>发送验证码到邮箱     * 后置>>存储发送记录     *     * @param sendCodeEnum     * @param to     * @return club.ldclass.utils.JsonData     * @author LiuDong     * @date 2021/8/16 21:52     */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> JsonData <span class="token function">sendCode</span><span class="token punctuation">(</span>SendCodeEnum sendCodeEnum<span class="token punctuation">,</span> String to<span class="token punctuation">)</span> <span class="token punctuation">{</span>        String cacheKey <span class="token operator">=</span> String<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>CacheKey<span class="token punctuation">.</span>CHECK_CODE_KEY<span class="token punctuation">,</span> sendCodeEnum<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> to<span class="token punctuation">)</span><span class="token punctuation">;</span>        String cacheValue <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>cacheKey<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//如果不为空，则判断是否60秒内重复发送</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNoneBlank</span><span class="token punctuation">(</span>cacheValue<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">long</span> ttl <span class="token operator">=</span> Long<span class="token punctuation">.</span><span class="token function">parseLong</span><span class="token punctuation">(</span>cacheValue<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"_"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//当前时间戳-验证码发送时间戳，如果小于60秒，则不能重复发送</span>            <span class="token keyword">long</span> diff <span class="token operator">=</span> CommonUtil<span class="token punctuation">.</span><span class="token function">getCurrentTimestamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> ttl<span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>diff <span class="token operator">&lt;</span> <span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">60</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"重复发送验证码，时间间隔：{}秒"</span><span class="token punctuation">,</span> diff <span class="token operator">/</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> JsonData<span class="token punctuation">.</span><span class="token function">buildResult</span><span class="token punctuation">(</span>BizCodeEnum<span class="token punctuation">.</span>CODE_LIMITED<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//拼接验证码 验证码+时间戳，并存储到redis</span>        String code <span class="token operator">=</span> CommonUtil<span class="token punctuation">.</span><span class="token function">getRandomCode</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String value <span class="token operator">=</span> code <span class="token operator">+</span> <span class="token string">"_"</span> <span class="token operator">+</span> CommonUtil<span class="token punctuation">.</span><span class="token function">getCurrentTimestamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>cacheKey<span class="token punctuation">,</span> value<span class="token punctuation">,</span> CODE_EXPIRED<span class="token punctuation">,</span> TimeUnit<span class="token punctuation">.</span>MILLISECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>CheckUtil<span class="token punctuation">.</span><span class="token function">isEmail</span><span class="token punctuation">(</span>to<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//邮箱</span>            mailService<span class="token punctuation">.</span><span class="token function">sendMail</span><span class="token punctuation">(</span>to<span class="token punctuation">,</span> SUBJECT<span class="token punctuation">,</span> String<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>CONTENT<span class="token punctuation">,</span> code<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> JsonData<span class="token punctuation">.</span><span class="token function">buildSuccess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>CheckUtil<span class="token punctuation">.</span><span class="token function">isPhone</span><span class="token punctuation">(</span>to<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//短信</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> JsonData<span class="token punctuation">.</span><span class="token function">buildResult</span><span class="token punctuation">(</span>BizCodeEnum<span class="token punctuation">.</span>CODE_TO_ERROR<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;邮件传输协议&lt;ul&gt;
&lt;li&gt;SMTP协议：全称为 Simple Mail Transfer Protocol，简单邮件传输协议。它定义了邮件客户端软件和SMTP邮件服务器之间，以及两台SMTP邮件服务器之间的通信规则&lt;/li&gt;
&lt;li&gt;POP3协议：全称为 P
      
    
    </summary>
    
      <category term="1024" scheme="http://www.ldclass.club/categories/1024/"/>
    
    
      <category term="1024" scheme="http://www.ldclass.club/tags/1024/"/>
    
      <category term="邮箱" scheme="http://www.ldclass.club/tags/%E9%82%AE%E7%AE%B1/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot拦截器Autowired注入后值为null</title>
    <link href="http://www.ldclass.club/2021/08/16/springboot-lan-jie-qi-autowired-zhu-ru-hou-zhi-wei-null/"/>
    <id>http://www.ldclass.club/2021/08/16/springboot-lan-jie-qi-autowired-zhu-ru-hou-zhi-wei-null/</id>
    <published>2021-08-16T14:21:05.000Z</published>
    <updated>2021-08-16T12:39:26.095Z</updated>
    
    <content type="html"><![CDATA[<ul><li>拦截器在实例化时，需要注入的类还未进行初始化，所以获取到的值为null。</li></ul><p>一、三种方式解决</p><ul><li><p>方式一</p><ul><li>拦截器</li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">import</span> com<span class="token punctuation">.</span>dling<span class="token punctuation">.</span>springboot<span class="token punctuation">.</span>config<span class="token punctuation">.</span>AppProperties<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>HandlerInterceptor<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DataInterceptor</span> <span class="token keyword">implements</span> <span class="token class-name">HandlerInterceptor</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> AppProperties appProperties<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 重写的三个方法省略....</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>配置类</li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">import</span> com<span class="token punctuation">.</span>dling<span class="token punctuation">.</span>springboot<span class="token punctuation">.</span>interceptor<span class="token punctuation">.</span>DataInterceptor<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Bean<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Configuration<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>HandlerInterceptor<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>config<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>InterceptorRegistry<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>config<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebMvcConfigurerAdapter<span class="token punctuation">;</span><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyConfiguration</span> <span class="token keyword">extends</span> <span class="token class-name">WebMvcConfigurerAdapter</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> HandlerInterceptor <span class="token function">getDataInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">DataInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addInterceptors</span><span class="token punctuation">(</span>InterceptorRegistry registry<span class="token punctuation">)</span> <span class="token punctuation">{</span>        registry<span class="token punctuation">.</span><span class="token function">addInterceptor</span><span class="token punctuation">(</span><span class="token function">getDataInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addPathPatterns</span><span class="token punctuation">(</span><span class="token string">"/**"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>方式二</p><ul><li>拦截器</li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">import</span> com<span class="token punctuation">.</span>dling<span class="token punctuation">.</span>springboot<span class="token punctuation">.</span>config<span class="token punctuation">.</span>AppProperties<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>HandlerInterceptor<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DataInterceptor</span> <span class="token keyword">implements</span> <span class="token class-name">HandlerInterceptor</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> AppProperties appProperties<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token function">DataInterceptor</span><span class="token punctuation">(</span>AppProperties appProperties<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>appProperties <span class="token operator">=</span> appProperties<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 重写的三个方法省略....</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>配置类</li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">import</span> com<span class="token punctuation">.</span>dling<span class="token punctuation">.</span>springboot<span class="token punctuation">.</span>config<span class="token punctuation">.</span>AppProperties<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>dling<span class="token punctuation">.</span>springboot<span class="token punctuation">.</span>interceptor<span class="token punctuation">.</span>DataInterceptor<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Configuration<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>HandlerInterceptor<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>config<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>InterceptorRegistry<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>config<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebMvcConfigurerAdapter<span class="token punctuation">;</span><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyConfiguration</span> <span class="token keyword">extends</span> <span class="token class-name">WebMvcConfigurerAdapter</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> AppProperties appProperties<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addInterceptors</span><span class="token punctuation">(</span>InterceptorRegistry registry<span class="token punctuation">)</span> <span class="token punctuation">{</span>        registry<span class="token punctuation">.</span><span class="token function">addInterceptor</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DataInterceptor</span><span class="token punctuation">(</span>appProperties<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addPathPatterns</span><span class="token punctuation">(</span><span class="token string">"/**"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>方式三</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>context<span class="token punctuation">.</span>WebApplicationContext<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>context<span class="token punctuation">.</span>support<span class="token punctuation">.</span>WebApplicationContextUtils<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>dling<span class="token punctuation">.</span>springboot<span class="token punctuation">.</span>config<span class="token punctuation">.</span>AppProperties<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>HandlerInterceptor<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DataInterceptor</span> <span class="token keyword">implements</span> <span class="token class-name">HandlerInterceptor</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 在请求执行前执行的方法</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">preHandle</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">,</span> Object handler<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        WebApplicationContext applicationContext <span class="token operator">=</span> WebApplicationContextUtils<span class="token punctuation">.</span><span class="token function">getRequiredWebApplicationContext</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getServletContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        AppProperties appProperties <span class="token operator">=</span> applicationContext<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span>AppProperties<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 此处就可以调用实例方法了</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;拦截器在实例化时，需要注入的类还未进行初始化，所以获取到的值为null。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一、三种方式解决&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;方式一&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;拦截器&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;line-number
      
    
    </summary>
    
      <category term="interceptor" scheme="http://www.ldclass.club/categories/interceptor/"/>
    
    
      <category term="interceptor" scheme="http://www.ldclass.club/tags/interceptor/"/>
    
  </entry>
  
  <entry>
    <title>docker部署redis</title>
    <link href="http://www.ldclass.club/2021/08/16/docker-bu-shu-redis/"/>
    <id>http://www.ldclass.club/2021/08/16/docker-bu-shu-redis/</id>
    <published>2021-08-15T22:35:57.000Z</published>
    <updated>2021-08-15T15:31:48.556Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>docker部署redis 并配置密码</p><ul><li>如果访问不了，记得看防火墙/网络安全组端口是否开放</li><li>源码安装redis的话默认不能远程访问</li><li>docker安装redis可以远程访问</li></ul></li><li><p><code>docker run -itd --name ldclass-redis -p 8000:6379 redis --requirepass 123456</code></p></li></ul><pre class="line-numbers language-shell"><code class="language-shell">-i 以交互模式运行容器，通常与 -t 同时使用；-t 为容器重新分配一个伪输入终端，通常与 -i 同时使用；-d 后台运行容器，并返回容器ID；redis --requirepass 配置密码-p 8000:6379 宿主机端口，用于外部访问:docker容器内端口<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;p&gt;docker部署redis 并配置密码&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果访问不了，记得看防火墙/网络安全组端口是否开放&lt;/li&gt;
&lt;li&gt;源码安装redis的话默认不能远程访问&lt;/li&gt;
&lt;li&gt;docker安装redis可以远程访问&lt;/li&gt;
&lt;/ul&gt;

      
    
    </summary>
    
      <category term="1024" scheme="http://www.ldclass.club/categories/1024/"/>
    
    
      <category term="1024" scheme="http://www.ldclass.club/tags/1024/"/>
    
      <category term="Redis" scheme="http://www.ldclass.club/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>Linux安装docker</title>
    <link href="http://www.ldclass.club/2021/08/16/linux-an-zhuang-docker/"/>
    <id>http://www.ldclass.club/2021/08/16/linux-an-zhuang-docker/</id>
    <published>2021-08-15T22:35:37.000Z</published>
    <updated>2021-08-15T15:29:14.929Z</updated>
    
    <content type="html"><![CDATA[<ul><li>Linux环境下安装Docker</li></ul><pre class="line-numbers language-shell"><code class="language-shell">#依次运行以下命令添加yum源yum updateyum install epel-release -yyum clean allyum list#安装并运行Docker。yum install docker-io -ysystemctl start docker#检查安装结果。docker info#启动使用Dockersystemctl start docker     #运行Docker守护进程systemctl stop docker      #停止Docker守护进程systemctl restart docker   #重启Docker守护进程#修改镜像仓库vim /etc/docker/daemon.json#改为下面内容(自己的镜像地址，阿里云有)，然后重启docker{"debug":true,"experimental":true,"registry-mirrors":["https://pb5bklzr.mirror.aliyuncs.com","https://hub-mirror.c.163.com","https://docker.mirrors.ustc.edu.cn"]}#查看信息docker info<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;Linux环境下安装Docker&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;line-numbers language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;#依次运行以下命令添加yum源
yum update
yum in
      
    
    </summary>
    
      <category term="1024" scheme="http://www.ldclass.club/categories/1024/"/>
    
    
      <category term="Docker" scheme="http://www.ldclass.club/tags/Docker/"/>
    
      <category term="1024" scheme="http://www.ldclass.club/tags/1024/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot集成Captcha验证码</title>
    <link href="http://www.ldclass.club/2021/08/16/springboot-ji-cheng-captcha-yan-zheng-ma/"/>
    <id>http://www.ldclass.club/2021/08/16/springboot-ji-cheng-captcha-yan-zheng-ma/</id>
    <published>2021-08-15T22:26:48.000Z</published>
    <updated>2021-08-15T15:50:18.629Z</updated>
    
    <content type="html"><![CDATA[<ul><li><h4 id="谷歌开源kaptcha图形验证码开发"><a href="#谷歌开源kaptcha图形验证码开发" class="headerlink" title="谷歌开源kaptcha图形验证码开发"></a>谷歌开源kaptcha图形验证码开发</h4><ul><li><p>Kaptcha 框架介绍 谷歌开源的一个可高度配置的实用验证码生成工具</p><ul><li>验证码的字体/大小/颜色</li><li>验证码内容的范围(数字，字母，中文汉字！)</li><li>验证码图片的大小，边框，边框粗细，边框颜色</li><li>验证码的干扰线</li><li>验证码的样式(鱼眼样式、3D、普通模糊)</li></ul></li><li><p>聚合工程依赖添加（使用国内baomidou二次封装的springboot整合starter）</p><pre class="line-numbers language-xml"><code class="language-xml">  <span class="token comment" spellcheck="true">&lt;!--kaptcha依赖包--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.baomidou<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>kaptcha-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.1.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>子服务添加依赖</p><pre class="line-numbers language-xml"><code class="language-xml">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.baomidou<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>kaptcha-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>开发配置</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>config<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>code<span class="token punctuation">.</span>kaptcha<span class="token punctuation">.</span>Constants<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>code<span class="token punctuation">.</span>kaptcha<span class="token punctuation">.</span>impl<span class="token punctuation">.</span>DefaultKaptcha<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>code<span class="token punctuation">.</span>kaptcha<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Config<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Qualifier<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Bean<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Configuration<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Properties<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author LiuDong * @version 1.0 * @description 验证码配置类 * @date 2021年08月15日 22:04 */</span><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CaptchaConfig</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token annotation punctuation">@Qualifier</span><span class="token punctuation">(</span><span class="token string">"captchaProducer"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> DefaultKaptcha <span class="token function">defaultKaptcha</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        DefaultKaptcha defaultKaptcha <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultKaptcha</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Properties properties <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//        properties.setProperty(Constants.KAPTCHA_BORDER, "yes");</span><span class="token comment" spellcheck="true">//        properties.setProperty(Constants.KAPTCHA_BORDER_COLOR, "220,220,220");</span><span class="token comment" spellcheck="true">//        //properties.setProperty(Constants.KAPTCHA_TEXTPRODUCER_FONT_COLOR, "38,29,12");</span><span class="token comment" spellcheck="true">//        properties.setProperty(Constants.KAPTCHA_IMAGE_WIDTH, "147");</span><span class="token comment" spellcheck="true">//        properties.setProperty(Constants.KAPTCHA_IMAGE_HEIGHT, "34");</span><span class="token comment" spellcheck="true">//        properties.setProperty(Constants.KAPTCHA_TEXTPRODUCER_FONT_SIZE, "25");</span><span class="token comment" spellcheck="true">//        //properties.setProperty(Constants.KAPTCHA_SESSION_KEY, "code");</span>        <span class="token comment" spellcheck="true">//验证码个数</span>        properties<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span>Constants<span class="token punctuation">.</span>KAPTCHA_TEXTPRODUCER_CHAR_LENGTH<span class="token punctuation">,</span> <span class="token string">"4"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//        properties.setProperty(Constants.KAPTCHA_TEXTPRODUCER_FONT_NAMES, "Courier");</span>        <span class="token comment" spellcheck="true">//字体间隔</span>        properties<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span>Constants<span class="token punctuation">.</span>KAPTCHA_TEXTPRODUCER_CHAR_SPACE<span class="token punctuation">,</span> <span class="token string">"8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//干扰线颜色</span><span class="token comment" spellcheck="true">//        properties.setProperty(Constants.KAPTCHA_NOISE_COLOR, "white");</span>        <span class="token comment" spellcheck="true">//干扰实现类</span>        properties<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span>Constants<span class="token punctuation">.</span>KAPTCHA_NOISE_IMPL<span class="token punctuation">,</span> <span class="token string">"com.google.code.kaptcha.impl.NoNoise"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//图片样式</span>        properties<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span>Constants<span class="token punctuation">.</span>KAPTCHA_OBSCURIFICATOR_IMPL<span class="token punctuation">,</span> <span class="token string">"com.google.code.kaptcha.impl.ShadowGimpy"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//文字来源</span>        properties<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span>Constants<span class="token punctuation">.</span>KAPTCHA_TEXTPRODUCER_CHAR_STRING<span class="token punctuation">,</span> <span class="token string">"0123456789"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Config config <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Config</span><span class="token punctuation">(</span>properties<span class="token punctuation">)</span><span class="token punctuation">;</span>        defaultKaptcha<span class="token punctuation">.</span><span class="token function">setConfig</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> defaultKaptcha<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><h4 id="用户微服务开发图形验证码加入缓存"><a href="#用户微服务开发图形验证码加入缓存" class="headerlink" title="用户微服务开发图形验证码加入缓存"></a>用户微服务开发图形验证码加入缓存</h4><ul><li>redis做隔离, 多集群：核心集群和非核心集群，高并发集群和非高并发集群<ul><li>资源隔离</li><li>数据保护</li><li>提高性能</li><li>key规范：业务划分，冒号隔离<ul><li>user-service:captcha:MD5加密后的（ip+user-agent）</li><li>长度不能过长</li><li>浏览器指纹:ip+user-agent</li></ul></li></ul></li><li>工具集</li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>utils<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>net<span class="token punctuation">.</span>InetAddress<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>net<span class="token punctuation">.</span>UnknownHostException<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>security<span class="token punctuation">.</span>MessageDigest<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author LiuDong * @version 1.0 * @description * @date 2021年08月15日 22:58 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CommonUtil</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 获取ip     * @author LiuDong     * @date 2021/8/15 22:59     * @param request     * @return java.lang.String     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> String <span class="token function">getIpAddr</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">)</span> <span class="token punctuation">{</span>        String ipAddress <span class="token operator">=</span> null<span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//在nginx配置头信息，透传客户端IP</span>            ipAddress <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token string">"x-forwarded-for"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>ipAddress <span class="token operator">==</span> null <span class="token operator">||</span> ipAddress<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token string">"unknown"</span><span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span>ipAddress<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                ipAddress <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token string">"Proxy-Client-IP"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>ipAddress <span class="token operator">==</span> null <span class="token operator">||</span> ipAddress<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token string">"unknown"</span><span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span>ipAddress<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                ipAddress <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token string">"WL-Proxy-Client-IP"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>ipAddress <span class="token operator">==</span> null <span class="token operator">||</span> ipAddress<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token string">"unknown"</span><span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span>ipAddress<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                ipAddress <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getRemoteAddr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>ipAddress<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"127.0.0.1"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token comment" spellcheck="true">// 根据网卡取本机配置的IP</span>                    InetAddress inet <span class="token operator">=</span> null<span class="token punctuation">;</span>                    <span class="token keyword">try</span> <span class="token punctuation">{</span>                        inet <span class="token operator">=</span> InetAddress<span class="token punctuation">.</span><span class="token function">getLocalHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">UnknownHostException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    ipAddress <span class="token operator">=</span> inet<span class="token punctuation">.</span><span class="token function">getHostAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">// 对于通过多个代理的情况，第一个IP为客户端真实IP,多个IP按照','分割</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>ipAddress <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> ipAddress<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">15</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// "***.***.***.***".length()</span>                <span class="token comment" spellcheck="true">// = 15</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>ipAddress<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    ipAddress <span class="token operator">=</span> ipAddress<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> ipAddress<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            ipAddress<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> ipAddress<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * MD5加密     * @author LiuDong     * @date 2021/8/15 22:59     * @param data     * @return java.lang.String     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> String <span class="token function">MD5</span><span class="token punctuation">(</span>String data<span class="token punctuation">)</span>  <span class="token punctuation">{</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            java<span class="token punctuation">.</span>security<span class="token punctuation">.</span>MessageDigest md <span class="token operator">=</span> MessageDigest<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token string">"MD5"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array <span class="token operator">=</span> md<span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            StringBuilder sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">byte</span> item <span class="token operator">:</span> array<span class="token punctuation">)</span> <span class="token punctuation">{</span>                sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>Integer<span class="token punctuation">.</span><span class="token function">toHexString</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token number">0x100</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">return</span> sb<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> exception<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> null<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>用户微服务配置Redis</li></ul><pre class="line-numbers language-yml"><code class="language-yml">spring:  application:    name: xdclass-user-service  redis:    host: 112.74.55.160    password: 123456    port: 8000<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>common聚合工程依赖配置</li></ul><pre class="line-numbers language-xml"><code class="language-xml">       <span class="token comment" spellcheck="true">&lt;!--redis客户端--></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-data-redis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">></span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">></span></span>                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>io.lettuce<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>lettuce-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>redis.clients<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>jedis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>验证码接口开发</li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>controller<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>CommonUtil<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>code<span class="token punctuation">.</span>kaptcha<span class="token punctuation">.</span>Producer<span class="token punctuation">;</span><span class="token keyword">import</span> io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span>Api<span class="token punctuation">;</span><span class="token keyword">import</span> io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span>ApiOperation<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>Slf4j<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>core<span class="token punctuation">.</span>StringRedisTemplate<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RequestMapping<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RequestMethod<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RestController<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>imageio<span class="token punctuation">.</span>ImageIO<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletOutputStream<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>image<span class="token punctuation">.</span>BufferedImage<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>TimeUnit<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author LiuDong * @version 1.0 * @description 通知 * @date 2021年08月15日 22:10 */</span><span class="token annotation punctuation">@Api</span><span class="token punctuation">(</span>tags <span class="token operator">=</span> <span class="token string">"通知模块"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"api/notify/v1"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Slf4j</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NotifyController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> Producer captchaProducer<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> StringRedisTemplate redisTemplate<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 图形验证码有效期     */</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> CAPTCHA_CODE_EXPIRED <span class="token operator">=</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">30</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 获取图形验证码     * 输出图片流     *     * @param request     * @param response     * @author LiuDong     * @date 2021/8/15 22:14     */</span>    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span><span class="token string">"获取图形验证码"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"captcha"</span><span class="token punctuation">,</span> method <span class="token operator">=</span> RequestMethod<span class="token punctuation">.</span>GET<span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getCaptcha</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">/*String captchaText = captchaProducer.createText();        log.info("图形验证码：{}", captchaText);        //存储到redis        //TimeUnit 时间枚举类        redisTemplate.opsForValue().set(getCaptchaKey(request),captchaText,CAPTCHA_CODE_EXPIRED, TimeUnit.MILLISECONDS);        BufferedImage bufferedImage = captchaProducer.createImage(captchaText);        try (ServletOutputStream outputStream = response.getOutputStream()) {            ImageIO.write(bufferedImage, "jpg", outputStream);        } catch (IOException e) {            log.error("获取图形验证码异常：{}", e);        }*/</span>        String cacheKey <span class="token operator">=</span> <span class="token function">getCaptchaKey</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>        String capText <span class="token operator">=</span> captchaProducer<span class="token punctuation">.</span><span class="token function">createText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//存储</span>        redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>cacheKey<span class="token punctuation">,</span> capText<span class="token punctuation">,</span> CAPTCHA_CODE_EXPIRED<span class="token punctuation">,</span> TimeUnit<span class="token punctuation">.</span>MILLISECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span>        BufferedImage bufferedImage <span class="token operator">=</span> captchaProducer<span class="token punctuation">.</span><span class="token function">createImage</span><span class="token punctuation">(</span>capText<span class="token punctuation">)</span><span class="token punctuation">;</span>        ServletOutputStream outputStream <span class="token operator">=</span> null<span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            response<span class="token punctuation">.</span><span class="token function">setDateHeader</span><span class="token punctuation">(</span><span class="token string">"Expires"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Cache-Control"</span><span class="token punctuation">,</span> <span class="token string">"no-store, no-cache, must-revalidate"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            response<span class="token punctuation">.</span><span class="token function">addHeader</span><span class="token punctuation">(</span><span class="token string">"Cache-Control"</span><span class="token punctuation">,</span> <span class="token string">"create_date-check=0, pre-check=0"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Pragma"</span><span class="token punctuation">,</span> <span class="token string">"no-cache"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            outputStream <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            ImageIO<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>bufferedImage<span class="token punctuation">,</span> <span class="token string">"jpg"</span><span class="token punctuation">,</span> outputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>            outputStream<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            outputStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"获取验证码失败:{}"</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 获取缓存key     *     * @param request     * @return java.lang.String     * @author LiuDong     * @date 2021/8/15 23:03     */</span>    <span class="token keyword">private</span> String <span class="token function">getCaptchaKey</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">)</span> <span class="token punctuation">{</span>        String ip <span class="token operator">=</span> CommonUtil<span class="token punctuation">.</span><span class="token function">getIpAddr</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>        String userAgent <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token string">"user-Agent"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String key <span class="token operator">=</span> <span class="token string">"user-service:captcha:"</span> <span class="token operator">+</span> CommonUtil<span class="token punctuation">.</span><span class="token function">MD5</span><span class="token punctuation">(</span>ip <span class="token operator">+</span> userAgent<span class="token punctuation">)</span><span class="token punctuation">;</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"ip:{}"</span><span class="token punctuation">,</span> ip<span class="token punctuation">)</span><span class="token punctuation">;</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"userAgent:{}"</span><span class="token punctuation">,</span> userAgent<span class="token punctuation">)</span><span class="token punctuation">;</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"key:{}"</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> key<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;谷歌开源kaptcha图形验证码开发&quot;&gt;&lt;a href=&quot;#谷歌开源kaptcha图形验证码开发&quot; class=&quot;headerlink&quot; title=&quot;谷歌开源kaptcha图形验证码开发&quot;&gt;&lt;/a&gt;谷歌开源kaptcha图形验证码开发&lt;/h4&gt;
      
    
    </summary>
    
      <category term="1024" scheme="http://www.ldclass.club/categories/1024/"/>
    
    
      <category term="1024" scheme="http://www.ldclass.club/tags/1024/"/>
    
      <category term="Captcha" scheme="http://www.ldclass.club/tags/Captcha/"/>
    
  </entry>
  
  <entry>
    <title>集成单元测试</title>
    <link href="http://www.ldclass.club/2021/08/16/ji-cheng-dan-yuan-ce-shi/"/>
    <id>http://www.ldclass.club/2021/08/16/ji-cheng-dan-yuan-ce-shi/</id>
    <published>2021-08-15T21:23:13.000Z</published>
    <updated>2021-08-15T13:27:47.517Z</updated>
    
    <content type="html"><![CDATA[<ul><li>需求分析-&gt;设计-&gt;开发-&gt;测试-&gt;上线<ul><li>单元测试:  完成最小的软件设计单元的验证工作，目标是确保模块被正确的编码</li></ul></li></ul><ul><li>Spring Boot Test 是在Spring Test之上的再次封装,  使用@SpringBootTest后，Spring将加载所有被管理的bean，等同于启动了整个服务</li></ul><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>biz<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>UserApplication<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>model<span class="token punctuation">.</span>AddressDO<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>service<span class="token punctuation">.</span>AddressService<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>Slf4j<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>Assert<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>Test<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>runner<span class="token punctuation">.</span>RunWith<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>SpringBootTest<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>junit4<span class="token punctuation">.</span>SpringRunner<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author LiuDong * @version 1.0 * @description * @date 2021年08月15日 21:16 */</span><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span>SpringRunner<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@SpringBootTest</span><span class="token punctuation">(</span>classes <span class="token operator">=</span> UserApplication<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Slf4j</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AddressTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> AddressService addressService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testAddressDetail</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        AddressDO addressDO <span class="token operator">=</span> addressService<span class="token punctuation">.</span><span class="token function">detail</span><span class="token punctuation">(</span>1L<span class="token punctuation">)</span><span class="token punctuation">;</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>addressDO<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//断言</span>        Assert<span class="token punctuation">.</span><span class="token function">assertNotNull</span><span class="token punctuation">(</span>addressDO<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;需求分析-&amp;gt;设计-&amp;gt;开发-&amp;gt;测试-&amp;gt;上线&lt;ul&gt;
&lt;li&gt;单元测试:  完成最小的软件设计单元的验证工作，目标是确保模块被正确的编码&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Spring Boot Test 是在S
      
    
    </summary>
    
      <category term="1024" scheme="http://www.ldclass.club/categories/1024/"/>
    
    
      <category term="1024" scheme="http://www.ldclass.club/tags/1024/"/>
    
      <category term="SpringBootTest" scheme="http://www.ldclass.club/tags/SpringBootTest/"/>
    
  </entry>
  
  <entry>
    <title>自定义全局异常</title>
    <link href="http://www.ldclass.club/2021/08/16/zi-ding-yi-quan-ju-yi-chang/"/>
    <id>http://www.ldclass.club/2021/08/16/zi-ding-yi-quan-ju-yi-chang/</id>
    <published>2021-08-15T21:23:02.000Z</published>
    <updated>2021-08-15T13:27:46.407Z</updated>
    
    <content type="html"><![CDATA[<ul><li>自定义全局异常</li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>exception<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>enums<span class="token punctuation">.</span>BizCodeEnum<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>Data<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author LiuDong * @version 1.0 * @date 2021年08月15日 20:59 */</span><span class="token annotation punctuation">@Data</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BizException</span> <span class="token keyword">extends</span> <span class="token class-name">RuntimeException</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> code<span class="token punctuation">;</span>    <span class="token keyword">private</span> String msg<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token function">BizException</span><span class="token punctuation">(</span>Integer code<span class="token punctuation">,</span> String message<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>code <span class="token operator">=</span> code<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>msg <span class="token operator">=</span> message<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token function">BizException</span><span class="token punctuation">(</span>BizCodeEnum bizCodeEnum<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">(</span>bizCodeEnum<span class="token punctuation">.</span><span class="token function">getMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>code <span class="token operator">=</span> bizCodeEnum<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>msg <span class="token operator">=</span> bizCodeEnum<span class="token punctuation">.</span><span class="token function">getMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>自定义异常处理器</li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>exception<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>JsonData<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>Slf4j<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>ControllerAdvice<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>ExceptionHandler<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>ResponseBody<span class="token punctuation">;</span><span class="token keyword">import</span> springfox<span class="token punctuation">.</span>documentation<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>web<span class="token punctuation">.</span>json<span class="token punctuation">.</span>Json<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author LiuDong * @version 1.0 * @date 2021年08月15日 21:01 */</span><span class="token annotation punctuation">@ControllerAdvice</span><span class="token annotation punctuation">@Slf4j</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CustomExceptionHandler</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@ExceptionHandler</span><span class="token punctuation">(</span>value <span class="token operator">=</span> Exception<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ResponseBody</span>    <span class="token keyword">public</span> JsonData <span class="token function">handler</span><span class="token punctuation">(</span>Exception e<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//是不是自定义异常</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>e <span class="token keyword">instanceof</span> <span class="token class-name">BizException</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            BizException bizException <span class="token operator">=</span> <span class="token punctuation">(</span>BizException<span class="token punctuation">)</span> e<span class="token punctuation">;</span>            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"[业务异常{}]"</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> JsonData<span class="token punctuation">.</span><span class="token function">buildCodeAndMsg</span><span class="token punctuation">(</span>bizException<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> bizException<span class="token punctuation">.</span><span class="token function">getMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"[系统异常{}]"</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> JsonData<span class="token punctuation">.</span><span class="token function">buildError</span><span class="token punctuation">(</span><span class="token string">"全局异常，未知错误"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;自定义全局异常&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;line-numbers language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;package&lt;/span&gt; c
      
    
    </summary>
    
      <category term="1024" scheme="http://www.ldclass.club/categories/1024/"/>
    
    
      <category term="1024" scheme="http://www.ldclass.club/tags/1024/"/>
    
      <category term="BizException" scheme="http://www.ldclass.club/tags/BizException/"/>
    
  </entry>
  
  <entry>
    <title>统一接口响应</title>
    <link href="http://www.ldclass.club/2021/08/16/tong-yi-jie-kou-xiang-ying/"/>
    <id>http://www.ldclass.club/2021/08/16/tong-yi-jie-kou-xiang-ying/</id>
    <published>2021-08-15T21:22:51.000Z</published>
    <updated>2021-08-15T13:27:44.307Z</updated>
    
    <content type="html"><![CDATA[<ul><li>统一业务状态码 BizCodeEnum</li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>enums<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>Getter<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * 枚举类，统一状态码和错误信息 * 前三位是服务，后三位是接口 * @author LiuDong * @version 1.0 * @date 2021年08月15日 20:47 */</span><span class="token keyword">public</span> <span class="token keyword">enum</span> BizCodeEnum <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 通用操作码     */</span>    <span class="token function">OPS_REPEAT</span><span class="token punctuation">(</span><span class="token number">110001</span><span class="token punctuation">,</span><span class="token string">"重复操作"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">/**     *验证码     */</span>    <span class="token function">CODE_TO_ERROR</span><span class="token punctuation">(</span><span class="token number">240001</span><span class="token punctuation">,</span><span class="token string">"接收号码不合规"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">CODE_LIMITED</span><span class="token punctuation">(</span><span class="token number">240002</span><span class="token punctuation">,</span><span class="token string">"验证码发送过快"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">CODE_ERROR</span><span class="token punctuation">(</span><span class="token number">240003</span><span class="token punctuation">,</span><span class="token string">"验证码错误"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">CODE_CAPTCHA</span><span class="token punctuation">(</span><span class="token number">240101</span><span class="token punctuation">,</span><span class="token string">"图形验证码错误"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">/**     * 账号     */</span>    <span class="token function">ACCOUNT_REPEAT</span><span class="token punctuation">(</span><span class="token number">250001</span><span class="token punctuation">,</span><span class="token string">"账号已经存在"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">ACCOUNT_UNREGISTER</span><span class="token punctuation">(</span><span class="token number">250002</span><span class="token punctuation">,</span><span class="token string">"账号不存在"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">ACCOUNT_PWD_ERROR</span><span class="token punctuation">(</span><span class="token number">250003</span><span class="token punctuation">,</span><span class="token string">"账号或者密码错误"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Getter</span>    <span class="token keyword">private</span> String msg<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Getter</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> code<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token function">BizCodeEnum</span><span class="token punctuation">(</span><span class="token keyword">int</span> code<span class="token punctuation">,</span>String msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>msg <span class="token operator">=</span> msg<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>code <span class="token operator">=</span> code<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>接口统一协议 JsonData工具类</li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>utils<span class="token punctuation">;</span><span class="token keyword">import</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>enums<span class="token punctuation">.</span>BizCodeEnum<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>AllArgsConstructor<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>Data<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>NoArgsConstructor<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author LiuDong * @version 1.0 * @date 2021年08月15日 20:51 */</span><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@AllArgsConstructor</span><span class="token annotation punctuation">@NoArgsConstructor</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JsonData</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 状态码 0 表示成功，1表示处理中，-1表示失败     */</span>    <span class="token keyword">private</span> Integer code<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 数据     */</span>    <span class="token keyword">private</span> Object data<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 描述     */</span>    <span class="token keyword">private</span> String msg<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 成功，传入数据     *     * @return     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> JsonData <span class="token function">buildSuccess</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">JsonData</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> null<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 成功，传入数据     *     * @param data     * @return     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> JsonData <span class="token function">buildSuccess</span><span class="token punctuation">(</span>Object data<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">JsonData</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> data<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 失败，传入描述信息     *     * @param msg     * @return     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> JsonData <span class="token function">buildError</span><span class="token punctuation">(</span>String msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">JsonData</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> null<span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 自定义状态码和错误信息     *     * @param code     * @param msg     * @return     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> JsonData <span class="token function">buildCodeAndMsg</span><span class="token punctuation">(</span><span class="token keyword">int</span> code<span class="token punctuation">,</span> String msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">JsonData</span><span class="token punctuation">(</span>code<span class="token punctuation">,</span> null<span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 传入枚举，返回信息     *     * @param codeEnum     * @return     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> JsonData <span class="token function">buildResult</span><span class="token punctuation">(</span>BizCodeEnum codeEnum<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> JsonData<span class="token punctuation">.</span><span class="token function">buildCodeAndMsg</span><span class="token punctuation">(</span>codeEnum<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> codeEnum<span class="token punctuation">.</span><span class="token function">getMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;统一业务状态码 BizCodeEnum&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;line-numbers language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;pack
      
    
    </summary>
    
      <category term="1024" scheme="http://www.ldclass.club/categories/1024/"/>
    
    
      <category term="1024" scheme="http://www.ldclass.club/tags/1024/"/>
    
      <category term="BizCodeEnum" scheme="http://www.ldclass.club/tags/BizCodeEnum/"/>
    
  </entry>
  
  <entry>
    <title>swagger3.0新全局配置</title>
    <link href="http://www.ldclass.club/2021/08/15/swagger3-0-xin-quan-ju-pei-zhi/"/>
    <id>http://www.ldclass.club/2021/08/15/swagger3-0-xin-quan-ju-pei-zhi/</id>
    <published>2021-08-14T16:20:59.000Z</published>
    <updated>2021-08-15T13:22:04.539Z</updated>
    
    <content type="html"><![CDATA[<ul><li>访问地址<ul><li><code>http://ip:port/swagger-ui/index.html#/</code></li></ul></li><li>新增全局配置</li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> club<span class="token punctuation">.</span>ldclass<span class="token punctuation">.</span>config<span class="token punctuation">;</span><span class="token keyword">import</span> lombok<span class="token punctuation">.</span>Data<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Bean<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpMethod<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Component<span class="token punctuation">;</span><span class="token keyword">import</span> springfox<span class="token punctuation">.</span>documentation<span class="token punctuation">.</span>builders<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> springfox<span class="token punctuation">.</span>documentation<span class="token punctuation">.</span>oas<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span>EnableOpenApi<span class="token punctuation">;</span><span class="token keyword">import</span> springfox<span class="token punctuation">.</span>documentation<span class="token punctuation">.</span>schema<span class="token punctuation">.</span>ScalarType<span class="token punctuation">;</span><span class="token keyword">import</span> springfox<span class="token punctuation">.</span>documentation<span class="token punctuation">.</span>service<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> springfox<span class="token punctuation">.</span>documentation<span class="token punctuation">.</span>spi<span class="token punctuation">.</span>DocumentationType<span class="token punctuation">;</span><span class="token keyword">import</span> springfox<span class="token punctuation">.</span>documentation<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>web<span class="token punctuation">.</span>plugins<span class="token punctuation">.</span>Docket<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>ArrayList<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author LiuDong * @version 1.0 * @date 2021年08月14日 15:48 */</span><span class="token annotation punctuation">@Component</span><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@EnableOpenApi</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SwaggerConfiguration</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 对C端用户的接口文档     *     * @return springfox.documentation.spring.web.plugins.Docket     * @author LiuDong     * @date 2021/8/14 16:05     */</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> Docket <span class="token function">webApiDoc</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//采用3.0的配置</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Docket</span><span class="token punctuation">(</span>DocumentationType<span class="token punctuation">.</span>OAS_30<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">groupName</span><span class="token punctuation">(</span><span class="token string">"用户端接口文档"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">pathMapping</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">//定义是否开启Swagger,false是关闭，可以通过变量控制，线上关闭</span>                <span class="token punctuation">.</span><span class="token function">enable</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">//配置接口文档的元信息</span>                <span class="token punctuation">.</span><span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">// 选择哪些接口作为swagger的doc发布</span>                <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">apis</span><span class="token punctuation">(</span>RequestHandlerSelectors<span class="token punctuation">.</span><span class="token function">basePackage</span><span class="token punctuation">(</span><span class="token string">"club.ldclass"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">//正则匹配请求路径，并分配到当前分组</span>                <span class="token punctuation">.</span><span class="token function">paths</span><span class="token punctuation">(</span>PathSelectors<span class="token punctuation">.</span><span class="token function">ant</span><span class="token punctuation">(</span><span class="token string">"/api/**"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token operator">/</span><span class="token operator">/</span>新版swaggerUI3<span class="token number">.0</span>配置                <span class="token punctuation">.</span><span class="token function">globalRequestParameters</span><span class="token punctuation">(</span><span class="token function">globalRequestParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">globalResponses</span><span class="token punctuation">(</span>HttpMethod<span class="token punctuation">.</span>GET<span class="token punctuation">,</span><span class="token function">getGlobalResponseMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">globalResponses</span><span class="token punctuation">(</span>HttpMethod<span class="token punctuation">.</span>POST<span class="token punctuation">,</span><span class="token function">getGlobalResponseMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>     <span class="token operator">*</span> 对管理端的接口文档     <span class="token operator">*</span>     <span class="token operator">*</span> @<span class="token keyword">return</span> springfox<span class="token punctuation">.</span>documentation<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>web<span class="token punctuation">.</span>plugins<span class="token punctuation">.</span>Docket     <span class="token operator">*</span> <span class="token annotation punctuation">@author</span> LiuDong     <span class="token operator">*</span> <span class="token annotation punctuation">@date</span> <span class="token number">2021</span><span class="token operator">/</span><span class="token number">8</span><span class="token operator">/</span><span class="token number">14</span> <span class="token number">16</span><span class="token operator">:</span><span class="token number">05</span>     <span class="token operator">*</span><span class="token operator">/</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> Docket <span class="token function">adminApiDoc</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//采用3.0的配置</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Docket</span><span class="token punctuation">(</span>DocumentationType<span class="token punctuation">.</span>OAS_30<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">groupName</span><span class="token punctuation">(</span><span class="token string">"管理端接口文档"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">pathMapping</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">//定义是否开启Swagger,false是关闭，可以通过变量控制，线上关闭</span>                <span class="token punctuation">.</span><span class="token function">enable</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">//配置接口文档的元信息</span>                <span class="token punctuation">.</span><span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">// 选择哪些接口作为swagger的doc发布</span>                <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">apis</span><span class="token punctuation">(</span>RequestHandlerSelectors<span class="token punctuation">.</span><span class="token function">basePackage</span><span class="token punctuation">(</span><span class="token string">"club.ldclass"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">//正则匹配请求路径，并分配到当前分组</span>                <span class="token punctuation">.</span><span class="token function">paths</span><span class="token punctuation">(</span>PathSelectors<span class="token punctuation">.</span><span class="token function">ant</span><span class="token punctuation">(</span><span class="token string">"/admin/**"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> ApiInfo <span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ApiInfoBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string">"1024电商平台"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">"微服务接口文档"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">contact</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Contact</span><span class="token punctuation">(</span><span class="token string">"ld"</span><span class="token punctuation">,</span> <span class="token string">"https://blog.ldclass.club"</span><span class="token punctuation">,</span> <span class="token string">"873791226@qq.com"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token string">"v1.0"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>     <span class="token operator">*</span> 配置全局通用参数<span class="token punctuation">,</span> 支持配置多个响应参数     <span class="token operator">*</span>     <span class="token operator">*</span> @<span class="token keyword">return</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token operator">&lt;</span>springfox<span class="token punctuation">.</span>documentation<span class="token punctuation">.</span>service<span class="token punctuation">.</span>RequestParameter<span class="token operator">></span>     <span class="token operator">*</span> <span class="token annotation punctuation">@author</span> LiuDong     <span class="token operator">*</span> <span class="token annotation punctuation">@date</span> <span class="token number">2021</span><span class="token operator">/</span><span class="token number">8</span><span class="token operator">/</span><span class="token number">14</span> <span class="token number">16</span><span class="token operator">:</span><span class="token number">08</span>     <span class="token operator">*</span><span class="token operator">/</span>    <span class="token keyword">private</span> List<span class="token operator">&lt;</span>RequestParameter<span class="token operator">></span> <span class="token function">globalRequestParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        List<span class="token operator">&lt;</span>RequestParameter<span class="token operator">></span> parameters <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        parameters<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RequestParameterBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                 <span class="token comment" spellcheck="true">//增加token</span>                <span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string">"token"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">"登录令牌"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">in</span><span class="token punctuation">(</span>ParameterType<span class="token punctuation">.</span>HEADER<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>q <span class="token operator">-</span><span class="token operator">></span> q<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span>m <span class="token operator">-</span><span class="token operator">></span> m<span class="token punctuation">.</span><span class="token function">scalarModel</span><span class="token punctuation">(</span>ScalarType<span class="token punctuation">.</span>STRING<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">//是否开启</span>                <span class="token punctuation">.</span><span class="token function">required</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> parameters<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 生成通用响应信息     * @author LiuDong     * @date 2021/8/14 16:13     * @return java.util.List&lt;Response>     */</span>    <span class="token keyword">private</span> List<span class="token operator">&lt;</span>Response<span class="token operator">></span> <span class="token function">getGlobalResponseMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        List<span class="token operator">&lt;</span>Response<span class="token operator">></span> responseList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        responseList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ResponseBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">code</span><span class="token punctuation">(</span><span class="token string">"4xx"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">"请求错误，根据code和msg检查"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> responseList<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;访问地址&lt;ul&gt;
&lt;li&gt;&lt;code&gt;http://ip:port/swagger-ui/index.html#/&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;新增全局配置&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;line-numbers la
      
    
    </summary>
    
      <category term="swagger" scheme="http://www.ldclass.club/categories/swagger/"/>
    
    
      <category term="1024" scheme="http://www.ldclass.club/tags/1024/"/>
    
      <category term="swagger" scheme="http://www.ldclass.club/tags/swagger/"/>
    
  </entry>
  
  <entry>
    <title>postman配置多环境操作</title>
    <link href="http://www.ldclass.club/2021/08/14/postman-pei-zhi-duo-huan-jing-cao-zuo/"/>
    <id>http://www.ldclass.club/2021/08/14/postman-pei-zhi-duo-huan-jing-cao-zuo/</id>
    <published>2021-08-14T15:43:40.000Z</published>
    <updated>2021-08-14T08:21:23.030Z</updated>
    
    <content type="html"><![CDATA[<ul><li>Postman配置多环境操作<ul><li>方便未来切换环境<ul><li>开发</li><li>测试</li><li>预发布</li><li>线上</li></ul></li></ul></li></ul><img src="/2021/08/14/postman-pei-zhi-duo-huan-jing-cao-zuo/1.png" title="Postman配置多环境操作"><img src="/2021/08/14/postman-pei-zhi-duo-huan-jing-cao-zuo/2.png" title="Postman配置多环境操作"><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;Postman配置多环境操作&lt;ul&gt;
&lt;li&gt;方便未来切换环境&lt;ul&gt;
&lt;li&gt;开发&lt;/li&gt;
&lt;li&gt;测试&lt;/li&gt;
&lt;li&gt;预发布&lt;/li&gt;
&lt;li&gt;线上&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&quot;/2021/
      
    
    </summary>
    
      <category term="postman" scheme="http://www.ldclass.club/categories/postman/"/>
    
    
      <category term="1024" scheme="http://www.ldclass.club/tags/1024/"/>
    
      <category term="postman" scheme="http://www.ldclass.club/tags/postman/"/>
    
  </entry>
  
  <entry>
    <title>项目编码规范</title>
    <link href="http://www.ldclass.club/2021/08/14/xiang-mu-bian-ma-gui-fan/"/>
    <id>http://www.ldclass.club/2021/08/14/xiang-mu-bian-ma-gui-fan/</id>
    <published>2021-08-14T15:09:46.000Z</published>
    <updated>2021-08-14T09:25:20.042Z</updated>
    
    <content type="html"><![CDATA[<ul><li><h3 id="N方库"><a href="#N方库" class="headerlink" title="N方库"></a>N方库</h3><ul><li>一方库: 本工程内部子项目模块依赖的库(jar 包)。<ul><li>自己项目中的module</li></ul></li><li>二方库: 公司内部发布到中央仓库，可供公司内部其它应用依赖的库(jar包)。<ul><li>公司内部其他项目开发的公共包</li></ul></li><li>三方库: 公司之外的开源库(jar 包)。<ul><li>第三方的包</li></ul></li></ul></li><li><h3 id="POJO实体类"><a href="#POJO实体类" class="headerlink" title="POJO实体类"></a>POJO实体类</h3><ul><li>POJO(Plain Ordinary Java Object): 在手册中，POJO 专指只有 setter / getter / toString的简单类，包括DO/DTO/BO/VO等, 禁止命名成xxxPOJO<ul><li>DO：数据库映射，一一对应</li><li>DTO：服务层之间的通讯</li><li>BO：业务对象</li><li>VO：值对象，业务层和前端交互</li></ul></li></ul></li><li><h3 id="各个层级约束规范"><a href="#各个层级约束规范" class="headerlink" title="各个层级约束规范"></a>各个层级约束规范</h3><ul><li>Service/DAO层方法命名规约<ul><li>获取单个对象的方法用get做前缀。</li><li>获取多个对象的方法用list做前缀，复数形式结尾如:listObjects。 </li><li>获取统计值的方法用count做前缀。</li><li>插入的方法用save/insert做前缀。</li><li>删除的方法用remove/delete做前缀。</li><li>修改的方法用update做前缀。</li></ul></li><li>领域模型命名规约<ul><li>数据对象:xxxDO，xxx即为数据表名。</li><li>一般数据传输对象:xxxDTO，xxx为业务领域相关的名称，项目里面也用VO。 </li><li>展示对象:xxxVO，也就是响应给前端的实体包装类。</li><li>接收前端json对象请求的命名为 XXXRequest</li></ul></li></ul></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;h3 id=&quot;N方库&quot;&gt;&lt;a href=&quot;#N方库&quot; class=&quot;headerlink&quot; title=&quot;N方库&quot;&gt;&lt;/a&gt;N方库&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;一方库: 本工程内部子项目模块依赖的库(jar 包)。&lt;ul&gt;
&lt;li&gt;自己项目中的module&lt;/l
      
    
    </summary>
    
      <category term="项目编码规范" scheme="http://www.ldclass.club/categories/%E9%A1%B9%E7%9B%AE%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83/"/>
    
    
      <category term="项目编码规范" scheme="http://www.ldclass.club/tags/%E9%A1%B9%E7%9B%AE%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83/"/>
    
  </entry>
  
  <entry>
    <title>微服务技术对比和选择</title>
    <link href="http://www.ldclass.club/2021/08/12/wei-fu-wu-ji-zhu-dui-bi-he-xuan-ze/"/>
    <id>http://www.ldclass.club/2021/08/12/wei-fu-wu-ji-zhu-dui-bi-he-xuan-ze/</id>
    <published>2021-08-11T23:15:51.000Z</published>
    <updated>2021-08-11T15:23:36.309Z</updated>
    
    <content type="html"><![CDATA[<ul><li><h3 id="SpringCloud"><a href="#SpringCloud" class="headerlink" title="SpringCloud"></a>SpringCloud</h3></li></ul><pre><code>全家桶+轻松嵌入第三方组件(Netflix 奈飞)官网：https://spring.io/projects/spring-cloud配套通信方式：http restful注册中心：eureka配置中心：config断路器：hystrix网关：zuul/gateway分布式追踪系统：sleuth+zipkin</code></pre><ul><li><h3 id="SpringCloudAlibaba"><a href="#SpringCloudAlibaba" class="headerlink" title="SpringCloudAlibaba"></a>SpringCloudAlibaba</h3></li></ul><pre><code>全家桶+阿里生态多个组件组合+SpringCloud支持官网 https://spring.io/projects/spring-cloud-alibaba配套通信方式：http restful服务注册发现：Nacos服务限流降级：Sentinel分布配置中心：Nacos服务网关：SpringCloud Gateway服务之间调用：Feign、Ribbon链路追踪：Sleuth+Zipkin</code></pre><ul><li><h3 id="为什么要选择SpringCloud和AlibabaCloud的区别"><a href="#为什么要选择SpringCloud和AlibabaCloud的区别" class="headerlink" title="为什么要选择SpringCloud和AlibabaCloud的区别"></a>为什么要选择SpringCloud和AlibabaCloud的区别</h3></li></ul><pre><code>官网 https://spring.io/projects/spring-cloud-alibaba#overviewSpringCloud和AlibabaCloud组件存在很大交集，互相配合SpringCloud很多组件是基于第三方整合，目前多个已经不更新了，比如zuul、eureka、hystrix等AlibabaCloud 提供一站式微服务解决方法，已经和SpringCloud进行了整合，组件互相支持我们也习惯称为 Spring Cloud Alibaba详细介绍：https://mp.weixin.qq.com/s/NMD52MLDY2Lq3LSeOcVwjA</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;h3 id=&quot;SpringCloud&quot;&gt;&lt;a href=&quot;#SpringCloud&quot; class=&quot;headerlink&quot; title=&quot;SpringCloud&quot;&gt;&lt;/a&gt;SpringCloud&lt;/h3&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;全家桶+轻
      
    
    </summary>
    
      <category term="实战项目" scheme="http://www.ldclass.club/categories/%E5%AE%9E%E6%88%98%E9%A1%B9%E7%9B%AE/"/>
    
    
      <category term="实战项目" scheme="http://www.ldclass.club/tags/%E5%AE%9E%E6%88%98%E9%A1%B9%E7%9B%AE/"/>
    
      <category term="SpringCloud" scheme="http://www.ldclass.club/tags/SpringCloud/"/>
    
      <category term="SpringCloudAlibaba" scheme="http://www.ldclass.club/tags/SpringCloudAlibaba/"/>
    
  </entry>
  
  <entry>
    <title>DevOps如何提效</title>
    <link href="http://www.ldclass.club/2021/08/10/devops-ru-he-ti-xiao/"/>
    <id>http://www.ldclass.club/2021/08/10/devops-ru-he-ti-xiao/</id>
    <published>2021-08-09T21:58:25.000Z</published>
    <updated>2021-08-09T14:50:01.024Z</updated>
    
    <content type="html"><![CDATA[<ul><li><h3 id="DevOps"><a href="#DevOps" class="headerlink" title="DevOps"></a>DevOps</h3><ul><li>什么是DevOps：开发+测试+运维 交集</li><li>一专多能，配合提效</li><li>核心：CI/CD（持续集成/持续交付） 多环境-构建-打包-测试-上线-监控</li><li>快速迭代产品，每次代码的改动都触发校验，每刻都可进行新版本的上线</li><li>持续开发、持续集成、持续测试、持续部署、持续监控</li></ul></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;h3 id=&quot;DevOps&quot;&gt;&lt;a href=&quot;#DevOps&quot; class=&quot;headerlink&quot; title=&quot;DevOps&quot;&gt;&lt;/a&gt;DevOps&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;什么是DevOps：开发+测试+运维 交集&lt;/li&gt;
&lt;li&gt;一专多能，配合提
      
    
    </summary>
    
      <category term="DevOps" scheme="http://www.ldclass.club/categories/DevOps/"/>
    
    
      <category term="DevOps" scheme="http://www.ldclass.club/tags/DevOps/"/>
    
  </entry>
  
</feed>
